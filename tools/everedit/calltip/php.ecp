abs(int number)\nReturn the absolute value of the number
acos(float number)\nReturn the arc cosine of the number in radians
acosh(float number)\nReturns the inverse hyperbolic cosine of the number, i.e. the value whose hyperbolic cosine is number
addcslashes(string str, string charlist)\nEscapes all chars mentioned in charlist with backslash. It creates octal representations if asked to backslash characters with 8th bit set or with ASCII<32 (except '\n', '\r', '\t' etc...)
addslashes(string str)\nEscapes single quote, double quotes and backslash characters in a string with backslashes
apache_child_terminate(void)\nTerminate apache process after this request
apache_get_modules(void)\nGet a list of loaded Apache modules
apache_get_version(void)\nFetch Apache version
apache_getenv(string variable [, bool walk_to_top])\nGet an Apache subprocess_env variable
apache_lookup_uri(string URI)\nPerform a partial request of the given URI to obtain information about it
apache_note(string note_name [, string note_value])\nGet and set Apache request notes
apache_request_auth_name()
apache_request_auth_type()
apache_request_discard_request_body()
apache_request_err_headers_out([{string name|array list} [, string value [, bool replace = false]]])\n* fetch all headers that go out in case of an error or a subrequest
apache_request_headers(void)\nFetch all HTTP request headers
apache_request_headers_in()\n* fetch all incoming request headers
apache_request_headers_out([{string name|array list} [, string value [, bool replace = false]]])\n* fetch all outgoing request headers
apache_request_is_initial_req()
apache_request_log_error(string message, [long facility])
apache_request_meets_conditions()
apache_request_remote_host([int type])
apache_request_run()\nThis is a wrapper for ap_sub_run_req and ap_destory_sub_req.\nIt takes    \n sub_request, runs it, destroys it, and returns it's status.
apache_request_sub_req_lookup_file(string file)\nReturns sub-request for the specified file.\nYou would    \nneed to run it yourself with run().
apache_request_sub_req_lookup_uri(string uri)\nReturns sub-request for the specified uri.\nYou would    \nneed to run it yourself with run()
apache_request_sub_req_method_uri(string method, string uri)\nReturns sub-request for the specified file.\nYou would    \nneed to run it yourself with run().
apache_request_update_mtime([int dependency_mtime])
apache_response_headers(void)\nFetch all HTTP response headers
apache_setenv(string variable, string value [, bool walk_to_top])\nSet an Apache subprocess_env variable
array_change_key_case(array input [, int case=CASE_LOWER])\nRetuns an array with all string keys lowercased [or uppercased]
array_chunk(array input, int size [, bool preserve_keys])\nSplit array into chunks
array_combine(array keys, array values)\nCreates an array by using the elements of the first parameter as keys and the elements of the second as correspoding keys
array_count_values(array input)\nReturn the value as key and the frequency of that value in input as value
array_diff(array arr1, array arr2 [, array ...])\nReturns the entries of arr1 that have values which are not present in any of the others arguments.
array_diff_assoc(array arr1, array arr2 [, array ...])\nReturns the entries of arr1 that have values which are not present in any of the others arguments but do additional checks whether the keys are equal
array_fill(int start_key, int num, mixed val)\nCreate an array containing num elements starting with index start_key each initialized to val
array_filter(array input [, mixed callback])\nFilters elements from the array via the callback.
array_flip(array input)\nReturn array with key <-> value flipped
array_intersect(array arr1, array arr2 [, array ...])\nReturns the entries of arr1 that have values which are present in all the other arguments
array_intersect_assoc(array arr1, array arr2 [, array ...])\nReturns the entries of arr1 that have values which are present in all the other arguments. Keys are used to do more restrictive check
array_key_exists(mixed key, array search)\nChecks if the given key or index exists in the array
array_keys(array input [, mixed search_value[, bool strict]])\nReturn just the keys from the input array, optionally only for the specified search_value
array_map(mixed callback, array input1 [, array input2 ,...])\nApplies the callback to the elements in given arrays.
array_merge(array arr1, array arr2 [, array ...])\nMerges elements from passed arrays into one array
array_merge_recursive(array arr1, array arr2 [, array ...])\nRecursively merges elements from passed arrays into one array
array_multisort(array ar1 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]] [, array ar2 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]], ...])\nSort multiple arrays at once similar to how ORDER BY clause works in SQL
array_pad(array input, int pad_size, mixed pad_value)\nReturns a copy of input array padded with pad_value to size pad_size
array_pop(array stack)\nPops an element off the end of the array
array_push(array stack, mixed var [, mixed ...])\nPushes elements onto the end of the array
array_rand(array input [, int num_req])\nReturn key/keys for random entry/entries in the array
array_reduce(array input, mixed callback [, int initial])\nIteratively reduce the array to a single value via the callback.
array_reverse(array input [, bool preserve keys])\nReturn input as a new array with the order of the entries reversed
array_search(mixed needle, array haystack [, bool strict])\nSearches the array for a given value and returns the corresponding key if successful
array_shift(array stack)\nPops an element off the beginning of the array
array_slice(array input, int offset [, int length])\nReturns elements specified by offset and length
array_splice(array input, int offset [, int length [, array replacement]])\nRemoves the elements designated by offset and length and replace them with supplied array
array_sum(array input)\nReturns the sum of the array entries
array_udiff(array arr1, array arr2 [, array ...], callback data_comp_func)\nReturns the entries of arr1 that have values which are not present in any of the others arguments. Elements are compared by user supplied function.
array_uintersect(array arr1, array arr2 [, array ...], callback data_compare_func)\nReturns the entries of arr1 that have values which are present in all the other arguments. Data is compared by using an user-supplied callback.
array_unique(array input)\nRemoves duplicate values from array
array_unshift(array stack, mixed var [, mixed ...])\nPushes elements onto the beginning of the array
array_values(array input)\nReturn just the values from the input array
array_walk(array input, string funcname [, mixed userdata])\nApply a user function to every member of an array
array_walk_recursive(array input, string funcname [, mixed userdata])\nApply a user function recursively to every member of an array
arsort(array array_arg [, int sort_flags])\nSort an array in reverse order and maintain index association
asin(float number)\nReturns the arc sine of the number in radians
asinh(float number)\nReturns the inverse hyperbolic sine of the number, i.e. the value whose hyperbolic sine is number
asort(array array_arg [, int sort_flags])\nSort an array and maintain index association
assert(string|bool assertion)\nChecks if assertion is false
assert_options(int what [, mixed value])\nSet/get the various assert flags
atan(float number)\nReturns the arc tangent of the number in radians
atan2(float y, float x)\nReturns the arc tangent of y/x, with the resulting quadrant determined by the signs of y and x
atanh(float number)\nReturns the inverse hyperbolic tangent of the number, i.e. the value whose hyperbolic tangent is number
base_convert(string number, int frombase, int tobase)\nConverts a number in a string from any base <= 36 to any base <= 36
base64_decode(string str)\nDecodes string using MIME base64 algorithm
base64_encode(string str)\nEncodes string using MIME base64 algorithm
basename(string path [, string suffix])\nReturns the filename component of the path
bcadd(string left_operand, string right_operand [, int scale])\nReturns the sum of two arbitrary precision numbers
bccomp(string left_operand, string right_operand [, int scale])\nCompares two arbitrary precision numbers
bcdiv(string left_operand, string right_operand [, int scale])\nReturns the quotient of two arbitrary precision numbers (division)
bcmod(string left_operand, string right_operand)\nReturns the modulus of the two arbitrary precision operands
bcmul(string left_operand, string right_operand [, int scale])\nReturns the multiplication of two arbitrary precision numbers
bcpow(string x, string y [, int scale])\nReturns the value of an arbitrary precision number raised to the power of another
bcpowmod(string x, string y, string mod [, int scale])\nReturns the value of an arbitrary precision number raised to the power of another reduced by a modulous
bcscale(int scale)\nSets default scale parameter for all bc math functions
bcsqrt(string operand [, int scale])\nReturns the square root of an arbitray precision number
bcsub(string left_operand, string right_operand [, int scale])\nReturns the difference between two arbitrary precision numbers
bin2hex(string data)\nConverts the binary representation of data to hex
bind_textdomain_codeset (string domain, string codeset)\nSpecify the character encoding in which the messages from the DOMAIN message catalog will be returned.
bindec(string binary_number)\nReturns the decimal equivalent of the binary number
bindtextdomain(string domain_name, string dir)\nBind to the text domain domain_name, looking for translations in dir. Returns the current domain
birdstep_autocommit(int index)
birdstep_close(int id)
birdstep_commit(int index)
birdstep_connect(string server, string user, string pass)
birdstep_exec(int index, string exec_str)
birdstep_fetch(int index)
birdstep_fieldname(int index, int col)
birdstep_fieldnum(int index)
birdstep_freeresult(int index)
birdstep_off_autocommit(int index)
birdstep_result(int index, int col)
birdstep_rollback(int index)
bzcompress(string source [, int blocksize100k [, int workfactor]])\nCompresses a string into BZip2 encoded data
bzdecompress(string source [, int small])\nDecompresses BZip2 compressed data
bzerrno(resource bz)\nReturns the error number
bzerror(resource bz)\nReturns the error number and error string in an associative array
bzerrstr(resource bz)\nReturns the error string
bzopen(string|int file|fp, string mode)\nOpens a new BZip2 stream
bzread(int bz[, int length])\nReads up to length bytes from a BZip2 stream, or 1024 bytes if length is not specified
cal_days_in_month(int calendar, int month, int year)\nReturns the number of days in a month for a given year and calendar
cal_from_jd(int jd, int calendar)\nConverts from Julian Day Count to a supported calendar and return extended information
cal_info(int calendar)\nReturns information about a particular calendar
cal_to_jd(int calendar, int month, int day, int year)\nConverts from a supported calendar to Julian Day Count
call_user_func(string function_name [, mixed parmeter] [, mixed ...])\nCall a user function which is the first parameter
call_user_func_array(string function_name, array parameters)\nCall a user function which is the first parameter with the arguments contained in array
call_user_method(string method_name, mixed object [, mixed parameter] [, mixed ...])\nCall a user method on a specific object or class
call_user_method_array(string method_name, mixed object, array params)\nCall a user method on a specific object or class using a parameter array
ceil(float number)\nReturns the next highest integer value of the number
chdir(string directory)\nChange the current directory
checkdate(int month, int day, int year)\nReturns true(1) if it is a valid date in gregorian calendar
chgrp(string filename, mixed group)\nChange file group
chmod(string filename, int mode)\nChange file mode
chown (string filename, mixed user)\nChange file owner
chr(int ascii)\nConverts ASCII code to a character
chroot(string directory)\nChange root directory
chunk_split(string str [, int chunklen [, string ending]])\nReturns split line
class_exists(string classname)\nChecks if the class exists
clearstatcache(void)\nClear file stat cache
closedir([resource dir_handle])\nClose directory connection identified by the dir_handle
closelog(void)\nClose connection to system logger
com_create_guid()\nGenerate a globally unique identifier (GUID)
com_event_sink(object comobject, object sinkobject [, mixed sinkinterface])\nConnect events from a COM object to a PHP object
com_load_typelib(string typelib_name [, int case_insensitive])\n Loads a Typelibrary and registers its constants
com_message_pump([int timeoutms])\nProcess COM messages, sleeping for up to timeoutms milliseconds
com_print_typeinfo(object comobject | string typelib, string dispinterface, bool wantsink)\nPrint out a PHP class definition for a dispatchable interface
compact(mixed var_names [, mixed ...])\nCreates a hash containing variables and their values
confirm_extname_compiled(string arg)\nReturn a string to confirm that the module is compiled in
connection_aborted(void)\nReturns true if client disconnected
connection_status(void)\nReturns the connection status bitfield
constant(string const_name)\nGiven the name of a constant this function will return the constants associated value
convert_cyr_string(string str, string from, string to)\nConvert from one Cyrillic character set to another
copy(string source_file, string destination_file)\nCopy a file
cos(float number)\nReturns the cosine of the number in radians
cosh(float number)\nReturns the hyperbolic cosine of the number, defined as (exp(number)    \nexp(-number))/2
count(mixed var [, int mode])\nCount the number of elements in a variable (usually an array)
count_chars(string input [, int mode])\nReturns info about what characters are used in input
cpdf_add_annotation(int pdfdoc, float xll, float yll, float xur, float xur, string title, string text [, int mode])\nSets annotation
cpdf_add_outline(int pdfdoc, int lastoutline, int sublevel, int open, int pagenr, string title)\nAdds outline
cpdf_arc(int pdfdoc, float x, float y, float radius, float start, float end [, int mode])\nDraws an arc
cpdf_begin_text(int pdfdoc)\nStarts text section
cpdf_circle(int pdfdoc, float x, float y, float radius [, int mode])\nDraws a circle
cpdf_clip(int pdfdoc)\nClips to current path
cpdf_close(int pdfdoc)\nCloses the pdf document
cpdf_closepath(int pdfdoc)\nClose path
cpdf_closepath_fill_stroke(int pdfdoc)\nClose, fill and stroke current path
cpdf_closepath_stroke(int pdfdoc)\nClose path and draw line along path
cpdf_continue_text(int pdfdoc, string text)\nOutputs text in next line
cpdf_curveto(int pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3 [, int mode])\nDraws a curve
cpdf_end_text(int pdfdoc)\nEnds text section
cpdf_fill(int pdfdoc)\nFills current path
cpdf_fill_stroke(int pdfdoc)\nFills and stroke current path
cpdf_finalize(int pdfdoc)\nCreates PDF doc in memory
cpdf_finalize_page(int pdfdoc, int pagenr)\nEnds the page to save memory
cpdf_global_set_document_limits(int maxPages, int maxFonts, int maxImages, int maxAnnots, int maxObjects)\nSets document settings for all documents
cpdf_import_jpeg(int pdfdoc, string filename, float x, float y, float angle, float width, float height, float x_scale, float y_scale, int gsave [, int mode])\nIncludes JPEG image
cpdf_lineto(int pdfdoc, float x, float y [, int mode])\nDraws a line
cpdf_moveto(int pdfdoc, float x, float y [, int mode])\nSets current point
cpdf_newpath(int pdfdoc)\nStarts new path
cpdf_open(int compression [, string filename [, array doc_limits]])\nOpens a new pdf document
cpdf_output_buffer(int pdfdoc)\nReturns the internal memory stream as string
cpdf_page_init(int pdfdoc, int pagenr, int orientation, int height, int width [, float unit])\nStarts page
cpdf_place_inline_image(int pdfdoc, int gdimage, float x, float y, float angle, fload width, float height, int gsave [, int mode])\nIncludes image
cpdf_rect(int pdfdoc, float x, float y, float width, float height [, int mode])\nDraws a rectangle
cpdf_restore(int pdfdoc)\nRestores formerly saved enviroment
cpdf_rlineto(int pdfdoc, float x, float y [, int mode])\nDraws a line relative to current point
cpdf_rmoveto(int pdfdoc, float x, float y [, int mode])\nSets current point
cpdf_rotate(int pdfdoc, float angle)\nSets rotation
cpdf_rotate_text(int pdfdoc, float angle)\nSets text rotation angle
cpdf_save(int pdfdoc)\nSaves current enviroment
cpdf_save_to_file(int pdfdoc, string filename)\nSaves the internal memory stream to a file
cpdf_scale(int pdfdoc, float x_scale, float y_scale)\nSets scaling
cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [, int mode])\nSets hyperlink
cpdf_set_char_spacing(int pdfdoc, float space)\nSets character spacing
cpdf_set_creator(int pdfdoc, string creator)\nSets the creator field
cpdf_set_current_page(int pdfdoc, int pagenr)\nSets page for output
cpdf_set_font(int pdfdoc, string font, float size, string encoding)\nSelects the current font face, size and encoding
cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir)\nSets directories to search when using external fonts
cpdf_set_font_map_file(int pdfdoc, string filename)\nSets fontname to filename translation map when using external fonts
cpdf_set_horiz_scaling(int pdfdoc, float scale)\nSets horizontal scaling of text
cpdf_set_keywords(int pdfptr, string keywords)\nFills the keywords field of the info structure
cpdf_set_leading(int pdfdoc, float distance)\nSets distance between text lines
cpdf_set_page_animation(int pdfdoc, int transition, float duration, float direction, int orientation, int inout)\nSets transition between pages
cpdf_set_subject(int pdfptr, string subject)\nFills the subject field of the info structure
cpdf_set_text_matrix(int pdfdoc, arry matrix)\nSets the text matrix
cpdf_set_text_pos(int pdfdoc, float x, float y [, int mode])\nSets the position of text for the next cpdf_show call
cpdf_set_text_rendering(int pdfdoc, int rendermode)\nDetermines how text is rendered
cpdf_set_text_rise(int pdfdoc, float value)\nSets the text rise
cpdf_set_title(int pdfptr, string title)\nFills the title field of the info structure
cpdf_set_viewer_preferences(int pdfdoc, array preferences)\nHow to show the document in the viewer
cpdf_set_word_spacing(int pdfdoc, float space)\nSets spacing between words
cpdf_setdash(int pdfdoc, long white, long black)\nSets dash pattern
cpdf_setflat(int pdfdoc, float value)\nSets flatness
cpdf_setgray(int pdfdoc, float value)\nSets drawing and filling color to gray value
cpdf_setgray_fill(int pdfdoc, float value)\nSets filling color to gray value
cpdf_setgray_stroke(int pdfdoc, float value)\nSets drawing color to gray value
cpdf_setlinecap(int pdfdoc, int value)\nSets linecap parameter
cpdf_setlinejoin(int pdfdoc, int value)\nSets linejoin parameter
cpdf_setlinewidth(int pdfdoc, float width)\nSets line width
cpdf_setmiterlimit(int pdfdoc, float value)\nSets miter limit
cpdf_setrgbcolor(int pdfdoc, float red, float green, float blue)\nSets drawing and filling color to RGB color value
cpdf_setrgbcolor_fill(int pdfdoc, float red, float green, float blue)\nSets filling color to rgb color value
cpdf_setrgbcolor_stroke(int pdfdoc, float red, float green, float blue)\nSets drawing color to RGB color value
cpdf_show(int pdfdoc, string text)\nOutput text at current position
cpdf_show_xy(int pdfdoc, string text, float x-koor, float y-koor [, int mode])\nOutput text at position
cpdf_stringwidth(int pdfdoc, string text)\nReturns width of text in current font
cpdf_stroke(int pdfdoc)\nDraws line along path path
cpdf_text(int pdfdoc, string text [, float x-koor, float y-koor [, int mode [, float orientation [, int alignmode]]]])\nOutputs text
cpdf_translate(int pdfdoc, float x, float y)\nSets origin of coordinate system
crc32(string str)\nCalculate the crc32 polynomial of a string
create_function(string args, string code)\nCreates an anonymous function, and returns its name (funny, eh?)
crypt(string str [, string salt])\nEncrypt a string
ctype_alnum(mixed c)\nChecks for alphanumeric character(s)
ctype_alpha(mixed c)\nChecks for alphabetic character(s)
ctype_cntrl(mixed c)\nChecks for control character(s)
ctype_digit(mixed c)\nChecks for numeric character(s)
ctype_graph(mixed c)\nChecks for any printable character(s) except space
ctype_lower(mixed c)\nChecks for lowercase character(s)
ctype_print(mixed c)\nChecks for printable character(s)
ctype_punct(mixed c)\nChecks for any printable character which is not whitespace or an alphanumeric character
ctype_space(mixed c)\nChecks for whitespace character(s)
ctype_upper(mixed c)\nChecks for uppercase character(s)
ctype_xdigit(mixed c)\nChecks for character(s) representing a hexadecimal digit
curl_close(resource ch)\nClose a CURL session
curl_errno(resource ch)\nReturn an integer containing the last error number
curl_error(resource ch)\nReturn a string contain the last error for the current session
curl_exec(resource ch)\nPerform a CURL session
curl_getinfo(resource ch, int opt)\nGet information regarding a specific transfer
curl_init([string url])\nInitialize a CURL session
curl_multi_add_handle(resource multi, resource ch)\nAdd a normal cURL handle to a cURL multi handle
curl_multi_close(resource mh)\nClose a set of cURL handles
curl_multi_exec(resource mh)\n Run the sub-connections of the current cURL handle
curl_multi_getcontent(resource ch)\nReturn the content of a cURL handle if CURLOPT_RETURNTRANSFER is set
curl_multi_info_read(resource mh)\nGet information about the current transfers
curl_multi_init(void)\nReturns a new cURL multi handle
curl_multi_remove_handle(resource mh, resource ch)\nRemove a multi handle from a set of cURL handles
curl_multi_select(resource mh[, double timeout])\nGet all the sockets associated with the cURL extension, which can then be "selected"
curl_setopt(resource ch, string option, mixed value)\nSet an option for a CURL transfer
curl_version([int version])\nReturn cURL version information.
current(array array_arg)\nReturn the element currently pointed to by the internal array pointer
date(string format [, int timestamp])\nFormat a local time/date
date_sunrise(mixed time [, int format [, float latitude [, float longitude [, float zenith [, float gmt_offset]]]]])\nReturns time of sunrise for a given day & location
date_sunset(mixed time [, int format [, float latitude [, float longitude [, float zenith [, float gmt_offset]]]]])\nReturns time of sunset for a given day & location
dba_close(resource handle)\nCloses database
dba_delete(string key, resource handle)\nDeletes the entry associated with key  \n If inifile: remove all other key lines
dba_exists(string key, resource handle)\nChecks, if the specified key exists
dba_fetch(string key, [int skip ,] resource handle)\nFetches the data associated with key
dba_firstkey(resource handle)\nResets the internal key pointer and returns the first key
dba_handlers([bool full_info])\nList configured database handlers
dba_insert(string key, string value, resource handle)\nIf not inifile: Insert value as key, return false, if key exists already    \nIf inifile: Add vakue as key (next instance of key)
dba_key_split(string key)\nSplits an inifile key into an array of the form array(0=>group,1=>value_name) but returns false if input is false or null
dba_list()\nList opened databases
dba_nextkey(resource handle)\nReturns the next key
dba_open(string path, string mode [, string handlername, string ...])\nOpens path using the specified handler in mode
dba_optimize(resource handle)\nOptimizes (e.g. clean up, vacuum) database
dba_popen(string path, string mode [, string handlername, string ...])\nOpens path using the specified handler in mode persistently
dba_replace(string key, string value, resource handle)\nInserts value as key, replaces key, if key exists already  \n If inifile: remove all other key lines
dba_sync(resource handle)\nSynchronizes database
dbase_add_record(int identifier, array data)\nAdds a record to the database
dbase_close(int identifier)\nCloses an open dBase-format database file
dbase_create(string filename, array fields)\nCreates a new dBase-format database file
dbase_delete_record(int identifier, int record)\nMarks a record to be deleted
dbase_get_header_info(int database_handle)
dbase_get_record(int identifier, int record)\nReturns an array representing a record from the database
dbase_get_record_with_names(int identifier, int record)\nReturns an associative array representing a record from the database
dbase_numfields(int identifier)\nReturns the number of fields (columns) in the database
dbase_numrecords(int identifier)\nReturns the number of records in the database
dbase_open(string name, int mode)\nOpens a dBase-format database file
dbase_pack(int identifier)\nPacks the database (deletes records marked for deletion)
dbase_replace_record(int identifier, array data, int recnum)\nReplaces a record to the database
dbx_close(dbx_link_object dbx_link)\nReturns success or failure
dbx_compare(array row_x, array row_y, string columnname [, int flags])\nReturns row_y[columnname] - row_x[columnname], converted to -1, 0 or 1
dbx_connect(string module_name, string host, string db, string username, string password [, bool persistent])\nReturns a dbx_link_object on success and returns 0 on failure
dbx_error(dbx_link_object dbx_link)\nReturns success or failure
dbx_escape_string(dbx_link_object dbx_link, string sz)\nReturns escaped string or NULL on error
dbx_fetch_row(dbx_query_object dbx_q)\nReturns a row (index and assoc based on query) on success and returns 0 on failure or no more rows
dbx_query(dbx_link_object dbx_link, string sql_statement [, int flags])\nReturns a dbx_link_object on success and returns 0 on failure
dbx_sort(object dbx_result, string compare_function_name)\nReturns 0 on failure, 1 on success
dcgettext(string domain_name, string msgid, long category)\nReturn the translation of msgid for domain_name and category, or msgid unaltered if a translation does not exist
dcngettext (string domain, string msgid1, string msgid2, int n, int category)\nPlural version of dcgettext()
debug_backtrace(void)\nReturn backtrace as array
debug_print_backtrace(void)
debug_zval_dump(mixed var)\nDumps a string representation of an internal zend value to output.
decbin(int decimal_number)\nReturns a string containing a binary representation of the number
dechex(int decimal_number)\nReturns a string containing a hexadecimal representation of the given number
declare
decoct(int decimal_number)\nReturns a string containing an octal representation of the given number
default
define(string constant_name, mixed value, case_sensitive=true)\nDefine a new constant
define_syslog_variables(void)\nInitializes all syslog-related variables
defined(string constant_name)\nCheck whether a constant exists
deg2rad(float number)\nConverts the number in degrees to the radian equivalent
dgettext(string domain_name, string msgid)\nReturn the translation of msgid for domain_name, or msgid unaltered if a translation does not exist
die
dio_close(resource fd)\nClose the file descriptor given by fd
dio_fcntl(resource fd, int cmd[, mixed arg])\nPerform a c library fcntl on fd
dio_open(string filename, int flags[, int mode])\nOpen a new filename with specified permissions of flags and creation permissions of mode
dio_read(resource fd[, int n])\nRead n bytes from fd and return them, if n is not specified, read 1k
dio_seek(resource fd, int pos, int whence)\nSeek to pos on fd from whence
dio_stat(resource fd)\nGet stat information about the file descriptor fd
dio_tcsetattr(resource fd,\narray args )\nPerform a c library tcsetattr on fd
dio_truncate(resource fd, int offset)\nTruncate file descriptor fd to offset bytes
dio_write(resource fd, string data[, int len])\nWrite data to fd with optional truncation at length
dir(string directory)\nDirectory class with properties, handle and class and methods read, rewind and close
dirname(string path)\nReturns the directory name component of the path
disk_free_space(string path)\nGet free disk space for filesystem that path is on
disk_total_space(string path)\nGet total disk space for filesystem that path is on
dl(string extension_filename)\nLoad a PHP extension at runtime
dngettext (string domain, string msgid1, string msgid2, int count)\nPlural version of dgettext()
dns_check_record(string host [, string type])\nCheck DNS records corresponding to a given Internet host name or IP address
dns_get_mx(string hostname, array mxhosts [, array weight])\nGet MX records corresponding to a given Internet host name
dns_get_record(string hostname [, int type[, array authns, array addtl]])\nGet any Resource Record corresponding to a given Internet host name
dom_attr_attr(string name, [string value]);
dom_cdatasection_cdatasection(string value);
dom_characterdata_append_data(string arg);
dom_characterdata_delete_data(unsigned long offset, unsigned long count);
dom_characterdata_insert_data(unsigned long offset, string arg);
dom_characterdata_replace_data(unsigned long offset, unsigned long count, string arg);
dom_characterdata_substring_data(unsigned long offset, unsigned long count);
dom_document_adopt_node(node source);
dom_document_create_attribute(string name);
dom_document_create_attribute_ns(string namespaceURI, string qualifiedName);
dom_document_create_cdatasection(string data);
dom_document_create_comment(string data);
dom_document_create_document_fragment();
dom_document_create_element(string tagName);
dom_document_create_element_ns(string namespaceURI, string qualifiedName);
dom_document_create_entity_reference(string name);
dom_document_create_processing_instruction(string target, string data);
dom_document_create_text_node(string data);
dom_document_document([string version], [string encoding]);
dom_document_get_element_by_id(string elementId);
dom_document_get_elements_by_tag_name(string tagname);
dom_document_get_elements_by_tag_name_ns(string namespaceURI, string localName);
dom_document_import_node(node importedNode, boolean deep);
dom_document_normalize_document();
dom_document_rename_node(node n, string namespaceURI, string qualifiedName);
dom_document_save_html();\nConvenience method to output as html
dom_document_save_html_file(string file);\nConvenience method to save to file as html
dom_document_xinclude()\nSubstitutues xincludes in a DomDocument
dom_domconfiguration_can_set_parameter(string name, domuserdata value);
dom_domconfiguration_get_parameter(string name);
dom_domconfiguration_set_parameter(string name, domuserdata value);
dom_domerrorhandler_handle_error(domerror error);
dom_domimplementation_create_document(string namespaceURI, string qualifiedName, documenttype doctype);
dom_domimplementation_create_document_type(string qualifiedName, string publicId, string systemId);
dom_domimplementation_get_feature(string feature, string version);
dom_domimplementation_has_feature(string feature, string version);
dom_domimplementationlist_item(unsigned long index);
dom_domimplementationsource_get_domimplementation(string features);
dom_domimplementationsource_get_domimplementations(string features);
dom_domstringlist_item(unsigned long index);
dom_element_element(string name, [string value]);
dom_element_get_attribute(string name);
dom_element_get_attribute_node(string name);
dom_element_get_attribute_node_ns(string namespaceURI, string localName);
dom_element_get_attribute_ns(string namespaceURI, string localName);
dom_element_get_elements_by_tag_name(string name);
dom_element_get_elements_by_tag_name_ns(string namespaceURI, string localName);
dom_element_has_attribute(string name);
dom_element_has_attribute_ns(string namespaceURI, string localName);
dom_element_remove_attribute(string name);
dom_element_remove_attribute_node(attr oldAttr);
dom_element_remove_attribute_ns(string namespaceURI, string localName);
dom_element_set_attribute(string name, string value);
dom_element_set_attribute_node(attr newAttr);
dom_element_set_attribute_node_ns(attr newAttr);
dom_element_set_attribute_ns(string namespaceURI, string qualifiedName, string value);
dom_element_set_id_attribute(string name, boolean isId);
dom_element_set_id_attribute_node(attr idAttr, boolean isId);
dom_element_set_id_attribute_ns(string namespaceURI, string localName, boolean isId);
dom_entityreference_entityreference(string name);
dom_import_simplexml(sxeobject node)\nGet a simplexml_element object from dom to allow for processing
dom_namednodemap_get_named_item(string name);
dom_namednodemap_get_named_item_ns(string namespaceURI, string localName);
dom_namednodemap_item(unsigned long index);
dom_namednodemap_remove_named_item(string name);
dom_namednodemap_remove_named_item_ns(string namespaceURI, string localName);
dom_namednodemap_set_named_item(node arg);
dom_namednodemap_set_named_item_ns(node arg);
dom_namelist_get_name(unsigned long index);
dom_namelist_get_namespace_uri(unsigned long index);
dom_node_append_child(node newChild);
dom_node_clone_node(boolean deep);
dom_node_get_feature(string feature, string version);
dom_node_get_user_data(string key);
dom_node_insert_before(node newChild, node refChild);
dom_node_is_default_namespace(string namespaceURI);
dom_node_is_equal_node(node arg);
dom_node_is_same_node(node other);
dom_node_is_supported(string feature, string version);
dom_node_lookup_namespace_uri(string prefix);
dom_node_lookup_prefix(string namespaceURI);
dom_node_remove_child(node oldChild);
dom_node_replace_child(node newChild, node oldChild);
dom_node_set_user_data(string key, domuserdata data, userdatahandler handler);
dom_nodelist_item(unsigned long index);
dom_processinginstruction_processinginstruction(string name, [string value]);
dom_string_extend_find_offset16(int offset32);
dom_string_extend_find_offset32(int offset16);
dom_text_is_whitespace_in_element_content();
dom_text_replace_whole_text(string content);
dom_text_split_text(unsigned long offset);
dom_userdatahandler_handle(unsigned short operation, string key, domobject data, node src, node dst);
dom_xpath_query(string expr [,domNode context]);
dom_xpath_register_ns(string prefix, string uri);
dom_xpath_xpath(domDocument doc);
_dom_document_schema_validate(string source);
dom_document_load(string source);
dom_document_load_html(string source);\nSince: DOM extended
dom_document_load_html_file(string source);\nSince: DOM extended
dom_document_loadxml(string source);
dom_document_relaxNG_validate_file(string filename);
dom_document_relaxNG_validate_xml(string source);
dom_document_save(string file);\nConvenience method to save to file
dom_document_savexml([node n]);
dom_document_validate();\nSince: DOM extended
each(array arr)\nReturn the currently pointed key..value pair in the passed array, and advance the pointer to the next element
easter_date([int year])\nReturn the timestamp of midnight on Easter of a given year (defaults to current year)
easter_days([int year, [int method]])\nReturn the number of days after March 21 that Easter falls on for a given year (defaults to current year)
end(array array_arg)\nAdvances array argument's internal pointer to the last element and return it
ereg(string pattern, string string [, array registers])\nRegular expression match
ereg_replace(string pattern, string replacement, string string)\nReplace regular expression
eregi(string pattern, string string [, array registers])\nCase-insensitive regular expression match
eregi_replace(string pattern, string replacement, string string)\nCase insensitive replace regular expression
error_log(string message [, int message_type [, string destination [, string extra_headers]]])\nSend an error message somewhere
error_reporting(int new_error_level=null)\nReturn the current error_reporting level, and if an argument was passed - change to the new level
escapeshellarg(string arg)\nQuote and escape an argument for use in a shell command
escapeshellcmd(string command)\nEscape shell metacharacters
Exception([ string $message = "" [, int $code = 0 [, Exception $previous = NULL ]]] )
exec(string command [, array &output [, int &return_value]])\nExecute an external program
exif_imagetype(string imagefile)\nGet the type of an image
exif_read_data(string filename [, sections_needed [, sub_arrays[, read_thumbnail]]])\nReads header data from the JPEG/TIFF image filename and optionally reads the internal thumbnails
exif_tagname(index)\nGet headername for index or false if not defined
exif_thumbnail(string filename [, &width, &height [, &imagetype]])\nReads the embedded thumbnail
exp(float number)\nReturns e raised to the power of the number
explode(string separator, string str [, int limit])\nSplits a string on string separator and return array of components
expm1(float number)\nReturns exp(number) - 1, computed in a way that accurate even when the value of number is close to zero
extension_loaded(string extension_name)\nReturns true if the named extension is loaded
extract(array var_array [, int extract_type [, string prefix]])\nImports variables into symbol table from an array
ezmlm_hash(string addr)\nCalculate EZMLM list hash value.
fam_cancel_monitor(resource id, resource monitor_id)\nTerminate monitoring
fam_close(resource id)\nClose FAM connection
fam_monitor_collection(resource id, string dirname, int depth, string mask)\nMonitor a collection of files in a directory for changes
fam_monitor_directory(resource id, string dirname)\nMonitor a directory for changes
fam_monitor_file(resource id, string filename)\nMonitor a regular file for changes
fam_next_event(resource id)\nGet next pending FAM event
fam_open([string appname])\nOpen FAM connection
fam_pending(resource id)\nCheck for pending FAM events
fam_resume_monitor(resource id, resource monitor_id)\nResume suspended monitoring
fam_suspend_monitor(resource id, resource monitor_id)\nTemporary suspend monitoring
fbsql_affected_rows([resource link_identifier])\nGet the number of rows affected by the last statement
fbsql_autocommit(resource link_identifier [, bool OnOff])\nTurns on auto-commit
fbsql_blob_size(string blob_handle [, resource link_identifier])\nGet the size of a BLOB identified by blob_handle
fbsql_change_user(string user, string password [, string database [, resource link_identifier]])\nChange the user for a session
fbsql_clob_size(string clob_handle [, resource link_identifier])\nGet the size of a CLOB identified by clob_handle
fbsql_close([resource link_identifier])\nClose a connection to a database server
fbsql_commit([resource link_identifier])\nCommit the transaction
fbsql_connect([string hostname [, string username [, string password]]])\nCreate a connection to a database server
fbsql_create_blob(string blob_data [, resource link_identifier])\nCreate a BLOB in the database for use with an insert or update statement
fbsql_create_clob(string clob_data [, resource link_identifier])\nCreate a CLOB in the database for use with an insert or update statement
fbsql_create_db(string database_name [, resource link_identifier])\nCreate a new database on the server
fbsql_data_seek(int result, int row_number)\nMove the internal row counter to the specified row_number
fbsql_database(resource link_identifier [, string database])\n Get or set the database name used with a connection
fbsql_database_password(resource link_identifier [, string database_password])\nGet or set the databsae password used with a connection
fbsql_db_query(string database_name, string query [, resource link_identifier])\nSend one or more SQL statements to a specified database on the server
fbsql_db_status(string database_name [, resource link_identifier])\nGets the status (Stopped, Starting, Running, Stopping) for a given database
fbsql_drop_db(string database_name [, resource link_identifier])\nDrop a database on the server
fbsql_errno([resource link_identifier])\nReturns the last error code
fbsql_error([resource link_identifier])\nReturns the last error string
fbsql_fetch_array(resource result [, int result_type])\nFetches a result row as an array (associative, numeric or both)
fbsql_fetch_assoc(resource result)\nDetch a row of data. Returns an assoc array
fbsql_fetch_field(int result [, int field_index])\nGet the field properties for a specified field_index
fbsql_fetch_lengths(int result)\nReturns an array of the lengths of each column in the result set
fbsql_fetch_object(resource result [, int result_type])\nFetch a row of data. Returns an object
fbsql_fetch_row(resource result)\nFetch a row of data. Returns an indexed array
fbsql_field_flags(int result [, int field_index])
fbsql_field_len(int result [, int field_index])\nGet the column length for a specified field_index
fbsql_field_name(int result [, int field_index])\nGet the column name for a specified field_index
fbsql_field_seek(int result [, int field_index])
fbsql_field_table(int result [, int field_index])\nGet the table name for a specified field_index
fbsql_field_type(int result [, int field_index])\nGet the field type for a specified field_index
fbsql_free_result(resource result)\nfree the memory used to store a result
fbsql_get_autostart_info([resource link_identifier])
fbsql_hostname(resource link_identifier [, string host_name])\nGet or set the host name used with a connection
fbsql_insert_id([resource link_identifier])\nGet the internal index for the last insert statement
fbsql_list_dbs([resource link_identifier])\nRetreive a list of all databases on the server
fbsql_list_fields(string database_name, string table_name [, resource link_identifier])\nRetrieve a list of all fields for the specified database.table
fbsql_list_tables(string database [, int link_identifier])\nRetreive a list of all tables from the specifoied database
fbsql_next_result(int result)\nSwitch to the next result if multiple results are available
fbsql_num_fields(int result)\nGet number of fields in the result set
fbsql_num_rows(int result)\nGet number of rows
fbsql_password(resource link_identifier [, string password])\nGet or set the user password used with a connection
fbsql_pconnect([string hostname [, string username [, string password]]])\nCreate a persistant connection to a database server
fbsql_query(string query [, resource link_identifier])\nSend one or more SQL statements to the server and execute them
fbsql_read_blob(string blob_handle [, resource link_identifier])\nRead the BLOB data identified by blob_handle
fbsql_read_clob(string clob_handle [, resource link_identifier])\nRead the CLOB data identified by clob_handle
fbsql_result(int result [, int row [, mixed field]])
fbsql_rollback([resource link_identifier])\nRollback all statments since last commit
fbsql_select_db([string database_name [, resource link_identifier]])\nSelect the database to open
fbsql_set_lob_mode(resource result, int lob_mode)\nSets the mode for how LOB data re retreived (actual data or a handle)
fbsql_set_transaction(resource link_identifier, int locking, int isolation)\nSets the transaction locking and isolation
fbsql_start_db(string database_name [, resource link_identifier])\nStart a database on the server
fbsql_stop_db(string database_name [, resource link_identifier])\nStop a database on the server
fbsql_table_name(resource result, int index)\nRetreive the table name for index after a call to fbsql_list_tables()
fbsql_username(resource link_identifier [, string username])\nGet or set the host user used with a connection
fbsql_warnings([int flag])\nEnable or disable FrontBase warnings
fclose(resource fp)\nClose an open file pointer
fdf_add_doc_javascript(resource fdfdoc, string scriptname, string script)\n Add javascript code to the fdf file
fdf_add_template(resource fdfdoc, int newpage, string filename, string template, int rename)\nAdds a template into the FDF document
fdf_close(resource fdfdoc)\nCloses the FDF document
fdf_create(void)\nCreates a new FDF document
fdf_enum_values(resource fdfdoc, callback function [, mixed userdata])\nCall a user defined function for each document value
fdf_errno(void)\n Gets error code for last operation
fdf_error([int errno])\n Gets error description for error code
fdf_get_ap(resource fdfdoc, string fieldname, int face, string filename)\n Gets the appearance of a field and creates a PDF document out of it.
fdf_get_attachment(resource fdfdoc, string fieldname, string savepath)\nGet attached uploaded file
fdf_get_encoding(resource fdf)\n Gets FDF file encoding scheme
fdf_get_file(resource fdfdoc)\nGets the value of /F key
fdf_get_flags(resorce fdfdoc, string fieldname, int whichflags)\n Gets the flags of a field
fdf_get_opt(resource fdfdof, string fieldname [, int element])\nGets a value from the opt array of a field
fdf_get_status(resource fdfdoc)\nGets the value of /Status key
fdf_get_value(resource fdfdoc, string fieldname [, int which])\nGets the value of a field as string
fdf_get_version([resource fdfdoc])\n Gets version number for FDF api or file
fdf_header(void)\n Set FDF specific HTTP headers
fdf_next_field_name(resource fdfdoc [, string fieldname])\nGets the name of the next field name or the first field name
fdf_open(string filename)\nOpens a new FDF document
fdf_open_string(string fdf_data)\nOpens a new FDF document from string
fdf_remove_item(resource fdfdoc, string fieldname, int item)\nSets target frame for form
fdf_save(resource fdfdoc [, string filename])\nWrites out the FDF file
fdf_save_string(resource fdfdoc)\nReturns the FDF file as a string
fdf_set_ap(resource fdfdoc, string fieldname, int face, string filename, int pagenr)\nSets the appearence of a field
fdf_set_encoding(resource fdf_document, string encoding)\nSets FDF encoding (either "Shift-JIS" or "Unicode")
fdf_set_file(resource fdfdoc, string filename [, string target_frame])\nSets the value of /F key
fdf_set_flags(resource fdfdoc, string fieldname, int whichflags, int newflags)\nSets flags for a field in the FDF document
fdf_set_javascript_action(resource fdfdoc, string fieldname, int whichtrigger, string script)\nSets the javascript action for a field
fdf_set_on_import_javascript(resource fdfdoc, string script [, bool before_data_import])\nAdds javascript code to be executed when Acrobat opens the FDF
fdf_set_opt(resource fdfdoc, string fieldname, int element, string value, string name)\nSets a value in the opt array for a field
fdf_set_status(resource fdfdoc, string status)\nSets the value of /Status key
fdf_set_submit_form_action(resource fdfdoc, string fieldname, int whichtrigger, string url, int flags)\nSets the submit form action for a field
fdf_set_target_frame(resource fdfdoc, string target)\nSets target frame for form
fdf_set_value(resource fdfdoc, string fieldname, mixed value [, int isname])\nSets the value of a field
fdf_set_version(resourece fdfdoc, string version)\nSets FDF version for a file
feof(resource fp)\nTest for end-of-file on a file pointer
fflush(resource fp)\nFlushes output
fgetc(resource fp)\nGet a character from file pointer
fgetcsv(resource fp [,int length [, string delimiter [, string enclosure]]])\nGet line from file pointer and parse for CSV fields
fgets(resource fp[, int length])\nGet a line from file pointer
fgetss(resource fp [, int length, string allowable_tags])\nGet a line from file pointer and strip HTML tags
file(string filename [, int flags[, resource context]])\nRead entire file into an array
file_exists(string filename)\nReturns true if filename exists
file_get_contents(string filename [, bool use_include_path [, resource context]])\nRead the entire file into a string
file_put_contents(string file, mixed data [, int flags [, resource context]])\nWrite/Create a file with contents data and return the number of bytes written
fileatime(string filename)\nGet last access time of file
filectime(string filename)\nGet inode modification time of file
filegroup(string filename)\nGet file group
fileinode(string filename)\nGet file inode
filemtime(string filename)\nGet last modification time of file
fileowner(string filename)\nGet file owner
fileperms(string filename)\nGet file permissions
filepro(string directory)\nRead and verify the map file
filepro_fieldcount(void)\nFind out how many fields are in a filePro database
filepro_fieldname(int fieldnumber)\nGets the name of a field
filepro_fieldtype(int field_number)\nGets the type of a field
filepro_fieldwidth(int field_number)\nGets the width of a field
filepro_retrieve(int row_number, int field_number)\nRetrieves data from a filePro database
filepro_rowcount(void)\nFind out how many rows are in a filePro database
filesize(string filename)\nGet file size
filetype(string filename)\nGet file type
floatval(mixed var)\nGet the float value of a variable
flock(resource fp, int operation [, int &wouldblock])\nPortable file locking
floor(float number)\nReturns the next lowest integer value from the number
flush(void)\nFlush the output buffer
fmod(float x, float y)\nReturns the remainder of dividing x by y as a float
fnmatch(string pattern, string filename [, int flags])\nMatch filename against pattern
fopen(string filename, string mode [, bool use_include_path [, resource context]])\nOpen a file or a URL and return a file pointer
fpassthru(resource fp)\nOutput all remaining data from a file pointer
fprintf(resource stream, string format [, mixed arg1 [, mixed ...]])\nOutput a formatted string into a stream
fread(resource fp, int length)\nBinary-safe file read
frenchtojd(int month, int day, int year)\nConverts a french republic calendar date to julian day count
fscanf(resource stream, string format [, string ...])\nImplements a mostly ANSI compatible fscanf()
fseek(resource fp, int offset [, int whence])\nSeek on a file pointer
fsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]])\nOpen Internet or Unix domain socket connection
fstat(resource fp)\nStat() on a filehandle
ftell(resource fp)\nGet file pointer's read/write position
ftok(string pathname, string proj)\nConvert a pathname and a project identifier to a System V IPC key
ftp_alloc(resource stream, int size[, &response])\nAttempt to allocate space on the remote FTP server
ftp_cdup(resource stream)\nChanges to the parent directory
ftp_chdir(resource stream, string directory)\nChanges directories
ftp_chmod(resource stream, int mode, string filename)\nSets permissions on a file
ftp_close(resource stream)\nCloses the FTP stream
ftp_connect(string host [, int port [, int timeout]])\nOpens a FTP stream
ftp_delete(resource stream, string file)\nDeletes a file
ftp_exec(resource stream, string command)\nRequests execution of a program on the FTP server
ftp_fget(resource stream, resource fp, string remote_file, int mode[, int resumepos])\nRetrieves a file from the FTP server and writes it to an open file
ftp_fput(resource stream, string remote_file, resource fp, int mode[, int startpos])\nStores a file from an open file to the FTP server
ftp_get(resource stream, string local_file, string remote_file, int mode[, int resume_pos])\nRetrieves a file from the FTP server and writes it to a local file
ftp_get_option(resource stream, int option)\nGets an FTP option
ftp_login(resource stream, string username, string password)\nLogs into the FTP server
ftp_mdtm(resource stream, string filename)\nReturns the last modification time of the file, or -1 on error
ftp_mkdir(resource stream, string directory)\nCreates a directory and returns the absolute path for the new directory or false on error
ftp_nb_continue(resource stream)\nContinues retrieving/sending a file nbronously
ftp_nb_fget(resource stream, resource fp, string remote_file, int mode[, int resumepos])\nRetrieves a file from the FTP server asynchronly and writes it to an open file
ftp_nb_fput(resource stream, string remote_file, resource fp, int mode[, int startpos])\nStores a file from an open file to the FTP server nbronly
ftp_nb_get(resource stream, string local_file, string remote_file, int mode[, int resume_pos])\nRetrieves a file from the FTP server nbhronly and writes it to a local file
ftp_nb_put(resource stream, string remote_file, string local_file, int mode[, int startpos])\nStores a file on the FTP server
ftp_nlist(resource stream, string directory)\nReturns an array of filenames in the given directory
ftp_pasv(resource stream, bool pasv)\nTurns passive mode on or off
ftp_put(resource stream, string remote_file, string local_file, int mode[, int startpos])\nStores a file on the FTP server
ftp_pwd(resource stream)\nReturns the present working directory
ftp_raw(resource stream, string command)\nSends a literal command to the FTP server
ftp_rawlist(resource stream, string directory [, bool recursive])\nReturns a detailed listing of a directory as an array of output lines
ftp_rename(resource stream, string src, string dest)\nRenames the given file to a new path
ftp_rmdir(resource stream, string directory)\nRemoves a directory
ftp_set_option(resource stream, int option, mixed value)\nSets an FTP option
ftp_site(resource stream, string cmd)\nSends a SITE command to the server
ftp_size(resource stream, string filename)\nReturns the size of the file, or -1 on error
ftp_ssl_connect(string host [, int port [, int timeout]])\nOpens a FTP-SSL stream
ftp_systype(resource stream)\nReturns the system type identifier
ftruncate(resource fp, int size)\nTruncate file to 'size' length
func_get_arg(int arg_num)\nGet the $arg_num'th argument that was passed to the function
func_get_args()\nGet an array of the arguments that were passed to the function
func_num_args(void)\nGet the number of arguments that were passed to the function
function_exists(string function_name)\n Checks if the function exists
fwrite(resource fp, string str [, int length])\nBinary-safe file write
getCode() Returns exception code.
getFile() Get the name of the file the exception was thrown from.
getLine() Returns line number where the exception was thrown.
getMessage() Returns the Exception message.
getTrace() Returns the Exception stack trace.
getTraceAsString() Returns the Exception stack trace as a string.
get_browser([string browser_name [, bool return_array]])\nGet information about the capabilities of a browser. If browser_name is omitted  \n or null, HTTP_USER_AGENT is used. Returns an object by default; if return_array  \n is true, returns an array.
get_cfg_var(string option_name)\nGet the value of a PHP configuration option
get_class(object object)\nRetrieves the class name
get_class_methods(mixed class)\nReturns an array of method names for class or class instance.
get_class_vars(string class_name)\nReturns an array of default properties of the class
get_current_user(void)\nGet the name of the owner of the current PHP script
get_declared_classes()\nReturns an array of all declared classes.
get_declared_interfaces()\nReturns an array of all declared interfaces.
get_defined_constants(void)\nReturn an array containing the names and values of all defined constants
get_defined_functions(void)\nReturns an array of all defined functions
get_defined_vars(void)\nReturns an associative array of names and values of all currently defined variable names (variables in the current scope)
get_extension_funcs(string extension_name)\nReturns an array with the names of functions belonging to the named extension
get_headers(string url)\nfetches all the headers sent by the server in response to a HTTP request
get_html_translation_table([int table [, int quote_style]])\nReturns the internal translation table used by htmlspecialchars and htmlentities
get_include_path(void)\nGet the current include_path configuration option
get_included_files(void)\nReturns an array with the file names that were include_once()'d
get_loaded_extensions(void)\nReturn an array containing names of loaded extensions
get_magic_quotes_gpc(void)\nGet the current active configuration setting of magic_quotes_gpc
get_magic_quotes_runtime(void)\nGet the current active configuration setting of magic_quotes_runtime
get_meta_tags(string filename [, bool use_include_path])\nExtracts all meta tag content attributes from a file and returns an array
get_object_vars(object obj)\nReturns an array of object properties
get_parent_class(mixed object)\nRetrieves the parent class name for object or class.
get_resource_type(resource res)\nGet the resource type name for a given resource
getallheaders(void)\nFetch all HTTP request headers
getcwd(void)\nGets the current directory
getdate([int timestamp])\nGet date/time information
getenv(string varname)\nGet the value of an environment variable
gethostbyaddr(string ip_address)\nGet the Internet host name corresponding to a given IP address
gethostbyname(string hostname)\nGet the IP address corresponding to a given Internet host name
gethostbynamel(string hostname)\nReturn a list of IP addresses that a given hostname resolves to.
getimagesize(string imagefile [, array info])\nGet the size of an image as 4-element array
getlastmod(void)\nGet time of last page modification
getmygid(void)\nGet PHP script owner's GID
getmyinode(void)\nGet the inode of the current script being parsed
getmypid(void)\nGet current process ID
getmyuid(void)\nGet PHP script owner's UID
getopt(string options [, array longopts])\nGet options from the command line argument list
getprotobyname(string name)\nReturns protocol number associated with name as per /etc/protocols
getprotobynumber(int proto)\nReturns protocol name associated with protocol number proto
getrandmax(void)\nReturns the maximum value a random number can have
getrusage([int who])\nReturns an array of usage statistics
getservbyname(string service, string protocol)\nReturns port associated with service. Protocol must be "tcp" or "udp"
getservbyport(int port, string protocol)\nReturns service name associated with port. Protocol must be "tcp" or "udp"
gettext(string msgid)\nReturn the translation of msgid for the current domain, or msgid unaltered if a translation does not exist
gettimeofday(void)\nReturns the current time as array
gettype(mixed var)\nReturns the type of the variable
glob(string pattern [, int flags])\nFind pathnames matching a pattern
gmdate(string format [, int timestamp])\nFormat a GMT/UTC date/time
gmmktime(int hour, int min, int sec, int mon, int day, int year)\nGet UNIX timestamp for a GMT date
gmp_abs(resource a)\nCalculates absolute value
gmp_add(resource a, resource b)\nAdd a and b
gmp_and(resource a, resource b)\nCalculates logical AND of a and b
gmp_clrbit(resource &a, int index)\nClears bit in a
gmp_cmp(resource a, resource b)\nCompares two numbers
gmp_com(resource a)\nCalculates one's complement of a
gmp_div_q(resource a, resource b [, int round])\nDivide a by b, returns quotient only
gmp_div_qr(resource a, resource b [, int round])\nDivide a by b, returns quotient and reminder
gmp_div_r(resource a, resource b [, int round])\nDivide a by b, returns reminder only
gmp_divexact(resource a, resource b)\nDivide a by b using exact division algorithm
gmp_fact(int a)\nCalculates factorial function
gmp_gcd(resource a, resource b)\nComputes greatest common denominator (gcd) of a and b
gmp_gcdext(resource a, resource b)\nComputes G, S, and T, such that AS    \nBT = G = `gcd' (A, B)
gmp_hamdist(resource a, resource b)\nCalculates hamming distance between a and b
gmp_init(mixed number [, int base])\nInitializes GMP number
gmp_intval(resource gmpnumber)\nGets signed long value of GMP number
gmp_invert(resource a, resource b)\nComputes the inverse of a modulo b
gmp_jacobi(resource a, resource b)\nComputes Jacobi symbol
gmp_legendre(resource a, resource b)\nComputes Legendre symbol
gmp_mod(resource a, resource b)\nComputes a modulo b
gmp_mul(resource a, resource b)\nMultiply a and b
gmp_neg(resource a)\nNegates a number
gmp_or(resource a, resource b)\nCalculates logical OR of a and b
gmp_perfect_square(resource a)\nChecks if a is an exact square
gmp_popcount(resource a)\nCalculates the population count of a
gmp_pow(resource base, int exp)\nRaise base to power exp
gmp_powm(resource base, resource exp, resource mod)\nRaise base to power exp and take result modulo mod
gmp_prob_prime(resource a[, int reps])\nChecks if a is "probably prime"
gmp_random([int limiter])\nGets random number
gmp_scan0(resource a, int start)\nFinds first zero bit
gmp_scan1(resource a, int start)\nFinds first non-zero bit
gmp_setbit(resource &a, int index[, bool set_clear])\nSets or clear bit in a
gmp_sign(resource a)\nGets the sign of the number
gmp_sqrt(resource a)\nTakes integer part of square root of a
gmp_sqrtrem(resource a)\nSquare root with remainder
gmp_strval(resource gmpnumber [, int base])\nGets string representation of GMP number
gmp_sub(resource a, resource b)\nSubtract b from a
gmp_xor(resource a, resource b)\nCalculates logical exclusive OR of a and b
gmstrftime(string format [, int timestamp])\nFormat a GMT/UCT time/date according to locale settings
gregoriantojd(int month, int day, int year)\nConverts a gregorian calendar date to julian day count
gzcompress(string data [, int level])\n Gzip-compress a string
gzdeflate(string data [, int level])\n Gzip-compress a string
gzencode(string data [, int level [, int encoding_mode]])\nGZ encode a string
gzfile(string filename [, int use_include_path])\nRead und uncompress entire .gz-file into an array
gzinflate(string data [, int length])\n Unzip a gzip-compressed string
gzopen(string filename, string mode [, int use_include_path])\nOpen a .gz-file and return a .gz-file pointer
gzuncompress(string data [, int length])\n Unzip a gzip-compressed string
header(string header [, bool replace, [int http_response_code]])\nSends a raw HTTP header
headers_list(void)\nReturn list of headers to be sent / already sent
headers_sent([string &$file [, int &$line]])\nReturns true if headers have already been sent, false otherwise
hebrev(string str [, int max_chars_per_line])\nConverts logical Hebrew text to visual text
hebrevc(string str [, int max_chars_per_line])\nConverts logical Hebrew text to visual text with newline conversion
hexdec(string hexadecimal_number)\nReturns the decimal equivalent of the hexadecimal number
highlight_file(string file_name [, bool return] )\nSyntax highlight a source file
highlight_string(string string [, bool return] )\nSyntax highlight a string or optionally return it
html_entity_decode(string string [, int quote_style][, string charset])\nConvert all HTML entities to their applicable characters
htmlentities(string string [, int quote_style][, string charset])\nConvert all applicable characters to HTML entities
htmlspecialchars(string string [, int quote_style][, string charset])\nConvert special characters to HTML entities
http_build_query(mixed formdata [, string prefix])\nGenerates a form-encoded query string from an associative array or object.
hypot(float num1, float num2)\nReturns sqrt(num1*num1    \nnum2*num2)
ibase_add_user(string server, string dba_user_name, string dba_password, string user_name, string password [, string first_name [, string middle_name [, string last_name]]])\nAdd an user to security database (only for IB6 or later)
ibase_affected_rows( [ resource link_identifier ] )\nReturns the number of rows affected by the previous INSERT, UPDATE or DELETE statement
ibase_blob_add(resource blob_handle, string data)\nAdd data into created blob
ibase_blob_cancel(resource blob_handle)\nCancel creating blob
ibase_blob_close(resource blob_handle)\nClose blob
ibase_blob_create([resource link_identifier])\nCreate blob for adding data
ibase_blob_echo([ resource link_identifier, ] string blob_id)\nOutput blob contents to browser
ibase_blob_get(resource blob_handle, int len)\nGet len bytes data from open blob
ibase_blob_import([resource link_identifier, ] int file_id)\nCreate blob, copy file in it, and close it
ibase_blob_info([ resource link_identifier, ] string blob_id)\nReturn blob length and other useful info
ibase_blob_open([ resource link_identifier, ] string blob_id)\nOpen blob for retrieving data parts
ibase_close([resource link_identifier])\nClose an InterBase connection
ibase_commit( resource link_identifier )\nCommit transaction
ibase_commit_ret( resource link_identifier )\nCommit transaction and retain the transaction context
ibase_connect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]])\nOpen a connection to an InterBase database
ibase_delete_user(string server, string dba_user_name, string dba_password, string username)\nDelete an user from security database (only for IB6 or later)
ibase_drop_db([resource link_identifier])\nDrop an InterBase database
ibase_errcode(void)\n Return error code
ibase_errmsg(void)\n Return error message
ibase_execute(resource query [, mixed bind_arg [, mixed bind_arg [, ...]]])\nExecute a previously prepared query
ibase_fetch_assoc(resource result [, int fetch_flags])\nFetch a row\nfrom the results of a query
ibase_fetch_object(resource result [, int fetch_flags])\nFetch a object from the results of a query
ibase_fetch_row(resource result [, int fetch_flags])\nFetch a row\nfrom the results of a query
ibase_field_info(resource query_result, int field_number)\nGet information about a field
ibase_free_event_handler(resource event)\nFrees the event handler set by ibase_set_event_handler()
ibase_free_query(resource query)\nFree memory used by a query
ibase_free_result(resource result)\nFree the memory used by a result
ibase_gen_id([ resource link_identifier, ] string generator [, int increment ])\nIncrements the named generator and returns its new value
ibase_modify_user(string server, string dba_user_name, string dba_password, string user_name, string password [, string first_name [, string middle_name [, string last_name]]])\nModify an user in security database (only for IB6 or later)
ibase_name_result(resource result, string name)\nAssign a name to a result for use with ... WHERE CURRENT OF <name> statements
ibase_num_fields(resource query_result)\nGet the number of fields in result
ibase_num_params(resource query)\nGet the number of params in a prepared query
ibase_num_rows( resource result_identifier )
ibase_param_info(resource query, int field_number)\nGet information about a parameter
ibase_pconnect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]])\nOpen a persistent connection to an InterBase database
ibase_prepare([resource link_identifier, ] string query)\nPrepare a query for later execution
ibase_query([resource link_identifier, [ resource link_identifier, ]] string query [, mixed bind_arg [, mixed bind_arg [, ...]]])\nExecute a query
ibase_rollback( resource link_identifier )\nRollback transaction
ibase_rollback_ret( resource link_identifier )\nRollback transaction and retain the transaction context
ibase_set_event_handler([resource link_identifier,] callback handler, string event [, string event [, ...]])\nRegister the callback for handling each of the named events
ibase_timefmt(string format)\nSets the format of timestamp, date and time columns returned from queries
ibase_trans([int trans_args [, resource link_identifier [, ... ], int trans_args [, resource link_identifier [, ... ]] [, ...]]])\nStart a transaction over one or several databases
ibase_wait_event([resource link_identifier,] string event [, string event [, ...]])\nWaits for any one of the passed Interbase events to be posted by the database, and returns its name
iconv(string in_charset, string out_charset, string str)\nReturns str converted to the out_charset character set
iconv_get_encoding([string type])\nGet internal encoding and output encoding for ob_iconv_handler()
iconv_mime_decode(string encoded_string [, int mode, string charset])\nDecodes a mime header field
iconv_mime_decode_headers(string headers [, int mode, string charset])\nDecodes multiple mime header fields
iconv_mime_encode(string field_name, string field_value, [, array preference])\nComposes a mime header field with field_name and field_value in a specified scheme
iconv_set_encoding(string type, string charset)\nSets internal encoding and output encoding for ob_iconv_handler()
iconv_strlen(string str [, string charset])\nReturns the character count of str
iconv_strpos(string haystack, string needle, int offset [, string charset])\nFinds position of first occurrence of needle within part of haystack beginning with offset
iconv_strrpos(string haystack, string needle [, string charset])\nFinds position of last occurrence of needle within part of haystack beginning with offset
iconv_substr(string str, int offset, [int length, string charset])\nReturns specified part of a string
idate(string format [, int timestamp])\nFormat a local time/date as integer
ifx_affected_rows(resource resultid)\nReturns the number of rows affected by query identified by resultid
ifx_blobinfile_mode(int mode)\nSets the default blob-mode for all select-queries
ifx_byteasvarchar(int mode)\nSets the default byte-mode for all select-queries
ifx_close([resource connid])\nClose informix connection
ifx_connect([string database [, string userid [, string password]]])\nConnects to database using userid/password, returns connection id
ifx_copy_blob(int bid)\nDuplicates the given blob-object
ifx_create_blob(int type, int mode, string param)\nCreates a blob-object
ifx_create_char(string param)\nCreates a char-object
ifx_do(resource resultid)\nExecutes a previously prepared query or opens a cursor for it
ifx_error([resource connection_id])\nReturns the Informix error codes (SQLSTATE & SQLCODE)
ifx_errormsg([int errorcode])\nReturns the Informix errormessage associated with
ifx_fetch_row(resource resultid [, mixed position])\nFetches the next row or <position> row if using a scroll cursor
ifx_fieldproperties(resource resultid)\nReturns an associative for query <resultid> array with fieldnames as key
ifx_fieldtypes(resource resultid)\nReturns an associative array with fieldnames as key for query <resultid>
ifx_free_blob(int bid)\nDeletes the blob-object
ifx_free_char(int bid)\nDeletes the char-object
ifx_free_result(resource resultid)\nReleases resources for query associated with resultid
ifx_get_blob(int bid)\nReturns the content of the blob-object
ifx_get_char(int bid)\nReturns the content of the char-object
ifx_getsqlca(resource resultid)\nReturns the sqlerrd[] fields of the sqlca struct for query resultid
ifx_htmltbl_result(resource resultid [, string htmltableoptions])\nFormats all rows of the resultid query into a html table
ifx_nullformat(int mode)\nSets the default return value of a NULL-value on a fetch-row
ifx_num_fields(resource resultid)\nReturns the number of columns in query resultid
ifx_num_rows(resource resultid)\nReturns the number of rows already fetched for query identified by resultid
ifx_pconnect([string database [, string userid [, string password]]])\nConnects to database using userid/password, returns connection id
ifx_prepare(string query, resource connid [, int cursortype] [, array idarray])\nPrepare a query on a given connection
ifx_query(string query, resource connid [, int cursortype] [, array idarray])\nPerform a query on a given connection
ifx_textasvarchar(int mode)\nSets the default text-mode for all select-queries
ifx_update_blob(int bid, string content)\nUpdates the content of the blob-object
ifx_update_char(int bid, string content)\nUpdates the content of the char-object
ifxus_close_slob(int bid)\nDeletes the slob-object
ifxus_create_slob(int mode)\nCreates a slob-object and opens it
ifxus_free_slob(int bid)\nDeletes the slob-object
ifxus_open_slob(int bid, int mode)\nOpens an slob-object
ifxus_read_slob(int bid, int nbytes)\nReads nbytes of the slob-object
ifxus_seek_slob(int bid, int mode, long offset)\nSets the current file or seek position of an open slob-object
ifxus_tell_slob(int bid)\nReturns the current file or seek position of an open slob-object
ifxus_write_slob(int bid, string content)\nWrites a string into the slob-object
ignore_user_abort(bool value)\nSet whether we want to ignore a user abort event or not
image_type_to_extension(int imagetype [, bool include_dot])\nGet file extension for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype
image_type_to_mime_type(int imagetype)\nGet Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype
image2wbmp(resource im [, string filename [, int threshold]])\nOutput WBMP image to browser or file
imagealphablending(resource im, bool on)\nTurn alpha blending mode on or off for the given image
imageantialias(resource im, bool on)\nShould antialiased functions used or not
imagearc(resource im, int cx, int cy, int w, int h, int s, int e, int col)\nDraw a partial ellipse
imagechar(resource im, int font, int x, int y, string c, int col)\nDraw a character
imagecharup(resource im, int font, int x, int y, string c, int col)\nDraw a character rotated 90 degrees counter-clockwise
imagecolorallocate(resource im, int red, int green, int blue)\nAllocate a color for an image
imagecolorallocatealpha(resource im, int red, int green, int blue, int alpha)\nAllocate a color with an alpha level.\nWorks for true color and palette based images
imagecolorat(resource im, int x, int y)\nGet the index of the color of a pixel
imagecolorclosest(resource im, int red, int green, int blue)\nGet the index of the closest color to the specified color
imagecolorclosestalpha(resource im, int red, int green, int blue, int alpha)\nFind the closest matching colour with alpha transparency
imagecolorclosesthwb(resource im, int red, int green, int blue)\nGet the index of the color which has the hue, white and blackness nearest to the given color
imagecolordeallocate(resource im, int index)\nDe-allocate a color for an image
imagecolorexact(resource im, int red, int green, int blue)\nGet the index of the specified color
imagecolorexactalpha(resource im, int red, int green, int blue, int alpha)\nFind exact match for colour with transparency
imagecolormatch(resource im1, resource im2)\nMakes the colors of the palette version of an image more closely match the true color version
imagecolorresolve(resource im, int red, int green, int blue)\nGet the index of the specified color or its closest possible alternative
imagecolorresolvealpha(resource im, int red, int green, int blue, int alpha)\nResolve/Allocate a colour with an alpha level.\nWorks for true colour and palette based images
imagecolorset(resource im, int col, int red, int green, int blue)\nSet the color for the specified palette index
imagecolorsforindex(resource im, int col)\nGet the colors for an index
imagecolorstotal(resource im)\nFind out the number of colors in an image's palette
imagecolortransparent(resource im [, int col])\nDefine a color as transparent
imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)\nCopy part of an image
imagecopymerge(resource src_im, resource dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)\nMerge one part of an image with another
imagecopymergegray(resource src_im, resource dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)\nMerge one part of an image with another
imagecopyresampled(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)\nCopy and resize part of an image using resampling to help ensure clarity
imagecopyresized(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)\nCopy and resize part of an image
imagecreate(int x_size, int y_size)\nCreate a new image
imagecreatefromgd(string filename)\nCreate a new image from GD file or URL
imagecreatefromgd2(string filename)\nCreate a new image from GD2 file or URL
imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height)\nCreate a new image from a given part of GD2 file or URL
imagecreatefromgif(string filename)\nCreate a new image from GIF file or URL
imagecreatefromjpeg(string filename)\nCreate a new image from JPEG file or URL
imagecreatefrompng(string filename)\nCreate a new image from PNG file or URL
imagecreatefromstring(string image)\nCreate a new image from the image stream in the string
imagecreatefromwbmp(string filename)\nCreate a new image from WBMP file or URL
imagecreatefromxbm(string filename)\nCreate a new image from XBM file or URL
imagecreatefromxpm(string filename)\nCreate a new image from XPM file or URL
imagecreatetruecolor(int x_size, int y_size)\nCreate a new true color image
imagedashedline(resource im, int x1, int y1, int x2, int y2, int col)\nDraw a dashed line
imagedestroy(resource im)\nDestroy an image
imageellipse(resource im, int cx, int cy, int w, int h, int color)\nDraw an ellipse
imagefill(resource im, int x, int y, int col)\nFlood fill
imagefilledarc(resource im, int cx, int cy, int w, int h, int s, int e, int col, int style)\nDraw a filled partial ellipse
imagefilledellipse(resource im, int cx, int cy, int w, int h, int color)\nDraw an ellipse
imagefilledpolygon(resource im, array point, int num_points, int col)\nDraw a filled polygon
imagefilledrectangle(resource im, int x1, int y1, int x2, int y2, int col)\nDraw a filled rectangle
imagefilltoborder(resource im, int x, int y, int border, int col)\nFlood fill to specific color
imagefilter(resource src_im, int filtertype, [args] )\nApplies Filter an image using a custom angle
imagefontheight(int font)\nGet font height
imagefontwidth(int font)\nGet font width
imageftbbox(int size, int angle, string font_file, string text[, array extrainfo])\nGive the bounding box of a text using fonts via freetype2
imagefttext(resource im, int size, int angle, int x, int y, int col, string font_file, string text, [array extrainfo])\nWrite text to the image using fonts via freetype2
imagegammacorrect(resource im, float inputgamma, float outputgamma)\nApply a gamma correction to a GD image
imagegd(resource im [, string filename])\nOutput GD image to browser or file
imagegd2(resource im [, string filename, [, int chunk_size, [, int type]]])\nOutput GD2 image to browser or file
imagegif(resource im [, string filename])\nOutput GIF image to browser or file
imageinterlace(resource im [, int interlace])\nEnable or disable interlace
imageistruecolor(resource im)\nreturn true if the image uses truecolor
imagejpeg(resource im [, string filename [, int quality]])\nOutput JPEG image to browser or file
imagelayereffect(resource im, int effect)\nSet the alpha blending flag to use the bundled libgd layering effects
imageline(resource im, int x1, int y1, int x2, int y2, int col)\nDraw a line
imageloadfont(string filename)\nLoad a new font
imagepalettecopy(resource dst, resource src)\nCopy the palette from the src image onto the dst image
imagepng(resource im [, string filename])\nOutput PNG image to browser or file
imagepolygon(resource im, array point, int num_points, int col)\nDraw a polygon
imagepsbbox(string text, resource font, int size [, int space, int tightness, int angle])\nReturn the bounding box needed by a string if rasterized
imagepscopyfont(int font_index)\nMake a copy of a font for purposes like extending or reenconding
imagepsencodefont(resource font_index, string filename)\nTo change a fonts character encoding vector
imagepsextendfont(resource font_index, float extend)\nExtend or or condense (if extend < 1) a font
imagepsfreefont(resource font_index)\nFree memory used by a font
imagepsloadfont(string pathname)\nLoad a new font from specified file
imagepsslantfont(resource font_index, float slant)\nSlant a font
imagepstext(resource image, string text, resource font, int size, int xcoord, int ycoord [, int space, int tightness, float angle, int antialias])\nRasterize a string over an image
imagerectangle(resource im, int x1, int y1, int x2, int y2, int col)\nDraw a rectangle
imagerotate(resource src_im, float angle, int bgdcolor)\nRotate an image using a custom angle
imagesavealpha(resource im, bool on)\nInclude alpha channel to a saved image
imagesetbrush(resource image, resource brush)\nSet the brush image to $brush when filling $image with the "IMG_COLOR_BRUSHED" color
imagesetpixel(resource im, int x, int y, int col)\nSet a single pixel
imagesetstyle(resource im, array styles)\nSet the line drawing styles for use with imageline and IMG_COLOR_STYLED.
imagesetthickness(resource im, int thickness)\nSet line thickness for drawing lines, ellipses, rectangles, polygons etc.
imagesettile(resource image, resource tile)\nSet the tile image to $tile when filling $image with the "IMG_COLOR_TILED" color
imagestring(resource im, int font, int x, int y, string str, int col)\nDraw a string horizontally
imagestringup(resource im, int font, int x, int y, string str, int col)\nDraw a string vertically - rotated 90 degrees counter-clockwise
imagesx(resource im)\nGet image width
imagesy(resource im)\nGet image height
imagetruecolortopalette(resource im, bool ditherFlag, int colorsWanted)\nConvert a true colour image to a palette based image with a number of colours, optionally using dithering.
imagettfbbox(int size, int angle, string font_file, string text)\nGive the bounding box of a text using TrueType fonts
imagettftext(resource im, int size, int angle, int x, int y, int col, string font_file, string text)\nWrite text to the image using a TrueType font
imagetypes(void)\nReturn the types of images supported in a bitfield - 1=GIF, 2=JPEG, 4=PNG, 8=WBMP, 16=XPM
imagewbmp(resource im [, string filename, [, int foreground]])\nOutput WBMP image to browser or file
imagexbm(int im, string filename [, int foreground])\nOutput XBM image to browser or file
imap_8bit(string text)\nConvert an 8-bit string to a quoted-printable string
imap_alerts(void)\nReturns an array of all IMAP alerts that have been generated since the last page load or since the last imap_alerts() call, whichever came last. The alert stack is cleared after imap_alerts() is called.
imap_append(resource stream_id, string folder, string message [, string options])\nAppend a new message to a specified mailbox
imap_base64(string text)\nDecode BASE64 encoded text
imap_binary(string text)\nConvert an 8bit string to a base64 string
imap_body(resource stream_id, int msg_no [, int options])\nRead the message body
imap_bodystruct(resource stream_id, int msg_no, int section)\nRead the structure of a specified body section of a specific message
imap_check(resource stream_id)\nGet mailbox properties
imap_clearflag_full(resource stream_id, string sequence, string flag [, int options])\nClears flags on messages
imap_close(resource stream_id [, int options])\nClose an IMAP stream
imap_createmailbox(resource stream_id, string mailbox)\nCreate a new mailbox
imap_delete(resource stream_id, int msg_no [, int options])\nMark a message for deletion
imap_deletemailbox(resource stream_id, string mailbox)\nDelete a mailbox
imap_errors(void)\nReturns an array of all IMAP errors generated since the last page load, or since the last imap_errors() call, whichever came last. The error stack is cleared after imap_errors() is called.
imap_expunge(resource stream_id)\nPermanently delete all messages marked for deletion
imap_fetch_overview(resource stream_id, int msg_no [, int options])\nRead an overview of the information in the headers of the given message sequence
imap_fetchbody(resource stream_id, int msg_no, int section [, int options])\nGet a specific body section
imap_fetchheader(resource stream_id, int msg_no [, int options])\nGet the full unfiltered header for a message
imap_fetchstructure(resource stream_id, int msg_no [, int options])\nRead the full structure of a message
imap_get_quota(resource stream_id, string qroot)\nReturns the quota set to the mailbox account qroot
imap_get_quotaroot(resource stream_id, string mbox)\nReturns the quota set to the mailbox account mbox
imap_getacl(resource stream_id, string mailbox)\nGets the ACL for a given mailbox
imap_getmailboxes(resource stream_id, string ref, string pattern)\nReads the list of mailboxes and returns a full array of objects containing name, attributes, and delimiter
imap_getsubscribed(resource stream_id, string ref, string pattern)\nReturn a list of subscribed mailboxes, in the same format as imap_getmailboxes()
imap_headerinfo(resource stream_id, int msg_no [, int from_length [, int subject_length [, string default_host]]])\nRead the headers of the message
imap_headers(resource stream_id)\nReturns headers for all messages in a mailbox
imap_last_error(void)\n Returns the last error that was generated by an IMAP function. The error stack is NOT cleared after this call.
imap_list(resource stream_id, string ref, string pattern)\nRead the list of mailboxes
imap_lsub(resource stream_id, string ref, string pattern)\nReturn a list of subscribed mailboxes
imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]])\nSend an email message
imap_mail_compose(array envelope, array body)\nCreate a MIME message based on given envelope and body sections
imap_mail_copy(resource stream_id, int msg_no, string mailbox [, int options])\nCopy specified message to a mailbox
imap_mail_move(resource stream_id, int msg_no, string mailbox [, int options])\nMove specified message to a mailbox
imap_mailboxmsginfo(resource stream_id)\nReturns info about the current mailbox
imap_mime_header_decode(string str)\nDecode mime header element in accordance with RFC 2047 and return array of objects containing 'charset' encoding and decoded 'text'
imap_msgno(resource stream_id, int unique_msg_id)\nGet the sequence number associated with a UID
imap_num_msg(resource stream_id)\nGives the number of messages in the current mailbox
imap_num_recent(resource stream_id)\nGives the number of recent messages in current mailbox
imap_open(string mailbox, string user, string password [, int options])\nOpen an IMAP stream to a mailbox
imap_ping(resource stream_id)\nCheck if the IMAP stream is still active
imap_qprint(string text)\nConvert a quoted-printable string to an 8-bit string
imap_renamemailbox(resource stream_id, string old_name, string new_name)\nRename a mailbox
imap_reopen(resource stream_id, string mailbox [, int options])\nReopen an IMAP stream to a new mailbox
imap_rfc822_parse_adrlist(string address_string, string default_host)\nParses an address string
imap_rfc822_parse_headers(string headers [, string default_host])\nParse a set of mail headers contained in a string, and return an object similar to imap_headerinfo()
imap_rfc822_write_address(string mailbox, string host, string personal)\nReturns a properly formatted email address given the mailbox, host, and personal info
imap_scan(resource stream_id, string ref, string pattern, string content)\nRead list of mailboxes containing a certain string
imap_search(resource stream_id, string criteria [, int options [, string charset]])\nReturn a list of messages matching the given criteria
imap_set_quota(resource stream_id, string qroot, int mailbox_size)\nWill set the quota for qroot mailbox
imap_setacl(resource stream_id, string mailbox, string id, string rights)\nSets the ACL for a given mailbox
imap_setflag_full(resource stream_id, string sequence, string flag [, int options])\nSets flags on messages
imap_sort(resource stream_id, int criteria, int reverse [, int options [, string search_criteria [, string charset]]])\nSort an array of message headers, optionally including only messages that meet specified criteria.
imap_status(resource stream_id, string mailbox, int options)\nGet status info from a mailbox
imap_subscribe(resource stream_id, string mailbox)\nSubscribe to a mailbox
imap_thread(resource stream_id [, int options])\nReturn threaded by REFERENCES tree
imap_timeout(int timeout_type [, int timeout])\nSet or fetch imap timeout
imap_uid(resource stream_id, int msg_no)\nGet the unique message id associated with a standard sequential message number
imap_undelete(resource stream_id, int msg_no)\nRemove the delete flag from a message
imap_unsubscribe(resource stream_id, string mailbox)\nUnsubscribe from a mailbox
imap_utf7_decode(string buf)\nDecode a modified UTF-7 string
imap_utf7_encode(string buf)\nEncode a string in modified UTF-7
imap_utf8(string mime_encoded_text)\nConvert a mime-encoded text to UTF-8
implode([string glue,] array pieces)\nJoins array elements placing glue string between items and return one string
import_request_variables(string types [, string prefix])\nImport GET/POST/Cookie variables into the global scope
in_array(mixed needle, array haystack [, bool strict])\nChecks if the given value exists in the array
ingres_autocommit([resource link])\nSwitch autocommit on or off
ingres_close([resource link])\nClose an Ingres II database connection
ingres_commit([resource link])\nCommit a transaction
ingres_connect([string database [, string username [, string password]]])\nOpen a connection to an Ingres II database the syntax of database is [node_id::]dbname[/svr_class]
ingres_fetch_array([int result_type [, resource link]])\nFetch a row of result into an array result_type can be II_NUM for enumerated array, II_ASSOC for associative array, or II_BOTH (default)
ingres_fetch_object([int result_type [, resource link]])\nFetch a row of result into an object result_type can be II_NUM for enumerated object, II_ASSOC for associative object, or II_BOTH (default)
ingres_fetch_row([resource link])\nFetch a row of result into an enumerated array
ingres_field_length(int index [, resource link])\nReturn the length of a field in a query result index must be >0 and <= ingres_num_fields()
ingres_field_name(int index [, resource link])\nReturn the name of a field in a query result index must be >0 and <= ingres_num_fields()
ingres_field_nullable(int index [, resource link])\nReturn true if the field is nullable and false otherwise index must be >0 and <= ingres_num_fields()
ingres_field_precision(int index [, resource link])\nReturn the precision of a field in a query result index must be >0 and <= ingres_num_fields()
ingres_field_scale(int index [, resource link])\nReturn the scale of a field in a query result index must be >0 and <= ingres_num_fields()
ingres_field_type(int index [, resource link])\nReturn the type of a field in a query result index must be >0 and <= ingres_num_fields()
ingres_num_fields([resource link])\nReturn the number of fields returned by the last query
ingres_num_rows([resource link])\nReturn the number of rows affected/returned by the last query
ingres_pconnect([string database [, string username [, string password]]])\nOpen a persistent connection to an Ingres II database the syntax of database is [node_id::]dbname[/svr_class]
ingres_query(string query [, resource link])\nSend a SQL query to Ingres II
ingres_rollback([resource link])\nRoll back a transaction
ini_get(string varname)\nGet a configuration option
ini_get_all([string extension])\nGet all configuration options
ini_restore(string varname)\nRestore the value of a configuration option specified by varname
ini_set(string varname, string newvalue)\nSet a configuration option, returns false on error and the old value of the configuration option on success
int Reflection_Class::getEndLine()\nReturns the line this class' declaration ends at
int Reflection_Class::getModifiers()\nReturns a bitfield of the access modifiers for this class
int Reflection_Class::getStartLine()\nReturns the line this class' declaration starts at
int Reflection_Function::getEndLine()\nReturns the line this function's declaration ends at
int Reflection_Function::getStartLine()\nReturns the line this function's declaration starts at
int Reflection_Method::getModifiers()\nReturns a bitfield of the access modifiers for this method
int Reflection_Property::getModifiers()\nReturns a bitfield of the access modifiers for this property
intval(mixed var [, int base])\nGet the integer value of a variable using the optional base for the conversion
ip2long(string ip_address)\nConverts a string containing an (IPv4) Internet Protocol dotted address into a proper address
iptcembed(string iptcdata, string jpeg_file_name [, int spool])\nEmbed binary IPTC data into a JPEG image.
iptcparse(string iptcdata)\nParse binary IPTC-data into associative array
ircg_channel_mode(int connection, string channel, string mode_spec, string nick)\nSets channel mode flags for user
ircg_disconnect(int connection, string reason)\nTerminate IRC connection
ircg_eval_ecmascript_params(string params)\nDecodes a list of JS-encoded parameters into a native array
ircg_fetch_error_msg(int connection)\nReturns the error from previous ircg operation
ircg_get_username(int connection)\nGets username for connection
ircg_html_encode(string html_text)\nEncodes HTML preserving output
ircg_ignore_add(resource connection, string nick)\nAdds a user to your ignore list on a server
ircg_ignore_del(int connection, string nick)\nRemoves a user from your ignore list
ircg_invite(int connection, string channel, string nickname)\nINVITEs nickname to channel
ircg_is_conn_alive(int connection)\nChecks connection status
ircg_join(int connection, string channel [, string chan-key])\nJoins a channel on a connected server
ircg_kick(int connection, string channel, string nick, string reason)\nKicks user from channel
ircg_list(int connection, string channel)\nList topic/user count of channel(s)
ircg_lookup_format_messages(string name)\nSelects a set of format strings for display of IRC messages
ircg_lusers(int connection)\nIRC network statistics
ircg_msg(int connection, string recipient, string message [,bool loop-suppress])\nDelivers a message to the IRC network
ircg_names( int connection, string channel [, string target])\nQueries visible usernames
ircg_nick(int connection, string newnick)\nChanges the nickname
ircg_nickname_escape(string nick)\n Escapes special characters in nickname to be IRC-compliant
ircg_nickname_unescape(string nick)\nDecodes encoded nickname
ircg_notice(int connection, string recipient, string message)\nSends a one-way communication NOTICE to a target
ircg_oper(int connection, string name, string password)\nElevates privileges to IRC OPER
ircg_part(int connection, string channel)\nLeaves a channel
ircg_pconnect(string username [, string server [, int port [, string format-msg-set-name [, array ctcp-set [, array user-details [, bool bailout-on-trivial]]]]]])\nCreate a persistent IRC connection
ircg_register_format_messages(string name, array messages)\nRegisters a set of format strings for display of IRC messages
ircg_set_current(int connection)\nSets current connection for output
ircg_set_file(int connection, string path)\nSets logfile for connection
ircg_set_on_die(int connection, string host, int port, string data)\n Sets hostaction to be executed when connection dies
ircg_set_on_read_data(int connection, string host, int port, string data)\n Set action to be executed when data is received from a HTTP client
ircg_topic(int connection, string channel, string topic)\nSets topic for channel
ircg_who(int connection, string mask [, bool ops_only])\nQueries server for WHO information
ircg_whois( int connection, string nick)\nQueries user information for nick on server
is_a(object object, string class_name)\nReturns true if the object is of this class or has this class as one of its parents
is_array(mixed var)\nReturns true if variable is an array
is_bool(mixed var)\nReturns true if variable is a boolean
is_callable(mixed var [, bool syntax_only [, string callable_name]])\n Returns true if var is callable.
is_dir(string filename)\nReturns true if file is directory
is_executable(string filename)\nReturns true if file is executable
is_file(string filename)\nReturns true if file is a regular file
is_finite(float val)\nReturns whether argument is finite
is_float(mixed var)\nReturns true if variable is float point
is_infinite(float val)\nReturns whether argument is infinite
is_link(string filename)\nReturns true if file is symbolic link
is_long(mixed var)\nReturns true if variable is a long (integer)
is_nan(float val)\nReturns whether argument is not a number
is_null(mixed var)\nReturns true if variable is null
is_numeric(mixed value)\nReturns true if value is a number or a numeric string
is_object(mixed var)\nReturns true if variable is an object
is_readable(string filename)\nReturns true if file can be read
is_resource(mixed var)\nReturns true if variable is a resource
is_scalar(mixed value)\nReturns true if value is a scalar
is_string(mixed var)\nReturns true if variable is a string
is_subclass_of(object object, string class_name)\nReturns true if the object has this class as one of its parents
is_uploaded_file(string path)\nCheck if file was created by rfc1867 upload
is_writable(string filename)\nReturns true if file can be written
jddayofweek(int juliandaycount [, int mode])\nReturns name or number of day of week from julian day count
jdmonthname(int juliandaycount, int mode)\nReturns name of month for julian day count
jdtofrench(int juliandaycount)\nConverts a julian day count to a french republic calendar date
jdtogregorian(int juliandaycount)\nConverts a julian day count to a gregorian calendar date
jdtojewish(int juliandaycount [, bool hebrew [, int fl]])\nConverts a julian day count to a jewish calendar date
jdtojulian(int juliandaycount)\nConvert a julian day count to a julian calendar date
jdtounix(int jday)\nConvert Julian Day to UNIX timestamp
jewishtojd(int month, int day, int year)\nConverts a jewish calendar date to a julian day count
join(array src, string glue)\nAn alias for implode
jpeg2wbmp (string f_org, string f_dest, int d_height, int d_width, int threshold)\nConvert JPEG image to WBMP image
juliantojd(int month, int day, int year)\nConverts a julian calendar date to julian day count
json_encode ( mixed $value [, int $options = 0 ] ) Returns a string containing the JSON representation of value .
json_decode ( string $json [, bool $assoc = false [, int $depth = 512 ]] ) Takes a JSON encoded string and converts it into a PHP variable.
key(array array_arg)\nReturn the key of the element currently pointed to by the internal array pointer
krsort(array array_arg [, int sort_flags])\nSort an array by key value in reverse order
ksort(array array_arg [, int sort_flags])\nSort an array by key
lcg_value()\nReturns a value from the combined linear congruential generator
ldap_8859_to_t61(string value)\nTranslate 8859 characters to t61 characters
ldap_add(resource link, string dn, array entry)\nAdd entries to LDAP directory
ldap_bind(resource link [, string dn, string password])\nBind to LDAP directory
ldap_compare(resource link, string dn, string attr, string value)\nDetermine if an entry has a specific value for one of its attributes
ldap_connect([string host [, int port]])\nConnect to an LDAP server
ldap_count_entries(resource link, resource result)\nCount the number of entries in a search result
ldap_delete(resource link, string dn)\nDelete an entry from a directory
ldap_dn2ufn(string dn)\nConvert DN to User Friendly Naming format
ldap_err2str(int errno)\nConvert error number to error string
ldap_errno(resource link)\nGet the current ldap error number
ldap_error(resource link)\nGet the current ldap error string
ldap_explode_dn(string dn, int with_attrib)\nSplits DN into its component parts
ldap_first_attribute(resource link, resource result_entry, int ber)\nReturn first attribute
ldap_first_entry(resource link, resource result)\nReturn first result id
ldap_first_reference(resource link, resource result)\nReturn first reference
ldap_free_result(resource result)\nFree result memory
ldap_get_attributes(resource link, resource result_entry)\nGet attributes from a search result entry
ldap_get_dn(resource link, resource result_entry)\nGet the DN of a result entry
ldap_get_entries(resource link, resource result)\nGet all result entries
ldap_get_option(resource link, int option, mixed retval)\nGet the current value of various session-wide parameters
ldap_get_values(resource link, resource result_entry, string attribute)\nGet all values from a result entry
ldap_get_values_len(resource link, resource result_entry, string attribute)\nGet all values with lengths from a result entry
ldap_list(resource link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])\nSingle-level search
ldap_mod_add(resource link, string dn, array entry)\nAdd attribute values to current
ldap_mod_del(resource link, string dn, array entry)\nDelete attribute values
ldap_mod_replace(resource link, string dn, array entry)\nReplace attribute values with new ones
ldap_next_attribute(resource link, resource result_entry, resource ber)\nGet the next attribute in result
ldap_next_entry(resource link, resource result_entry)\nGet next result entry
ldap_next_reference(resource link, resource reference_entry)\nGet next reference
ldap_parse_reference(resource link, resource reference_entry, array referrals)\nExtract information from reference entry
ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals)\nExtract information from result
ldap_read(resource link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])\nRead an entry
ldap_rename(resource link, string dn, string newrdn, string newparent, bool deleteoldrdn);\nModify the name of an entry
ldap_sasl_bind(resource link)\nBind to LDAP directory using SASL
ldap_search(resource link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])\nSearch LDAP tree under base_dn
ldap_set_option(resource link, int option, mixed newval)\nSet the value of various session-wide parameters
ldap_set_rebind_proc(resource link, string callback)\nSet a callback function to do re-binds on referral chasing.
ldap_sort(resource link, resource result, string sortfilter)\nSort LDAP result entries
ldap_start_tls(resource link)\nStart TLS
ldap_t61_to_8859(string value)\nTranslate t61 characters to 8859 characters
ldap_unbind(resource link)\nUnbind from LDAP directory
leak(int num_bytes=3)\nCause an intentional memory leak, for testing/debugging purposes
levenshtein(string str1, string str2)\nCalculate Levenshtein distance between two strings
libxml_set_streams_context(resource streams_context)\n Set the streams context for the next libxml document load or write
link(string target, string link)\nCreate a hard link
linkinfo(string filename)\nReturns the st_dev field of the UNIX C stat structure describing the link
localeconv(void)\nReturns numeric formatting information based on the current locale
localtime([int timestamp [, bool associative_array]])\nReturns the results of the C system call localtime as an associative array if the associative_array argument is set to 1 other wise it is a regular array
log(float number, [float base])\nReturns the natural logarithm of the number, or the base log if base is specified
log10(float number)\nReturns the base-10 logarithm of the number
log1p(float number)\nReturns log(1    \nnumber), computed in a way that accurate even when the value of number is close to zero
long2ip(int proper_address)\nConverts an (IPv4) Internet network address into a string in Internet standard dotted format
lstat(string filename)\nGive information about a file or symbolic link
ltrim(string str [, string character_mask])\nStrips whitespace from the beginning of a string
mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])\nSend an email message
max(mixed arg1 [, mixed arg2 [, mixed ...]])\nReturn the highest value in an array or a series of arguments
mb_convert_case(string sourcestring, int mode [, string encoding])\nReturns a case-folded version of sourcestring
mb_convert_encoding(string str, string to-encoding [, mixed from-encoding])\nReturns converted string in desired encoding
mb_convert_kana(string str [, string option] [, string encoding])\nConversion between full-width character and half-width character (Japanese)
mb_convert_variables(string to-encoding, mixed from-encoding [, mixed ...])\nConverts the string resource in variables to desired encoding
mb_decode_mimeheader(string string)\nDecodes the MIME "encoded-word" in the string
mb_decode_numericentity(string string, array convmap [, string encoding])\nConverts HTML numeric entities to character code
mb_detect_encoding(string str [, mixed encoding_list [, bool strict]])\nEncodings of the given string is returned (as a string)
mb_detect_order([mixed encoding-list])\nSets the current detect_order or Return the current detect_order as a array
mb_encode_mimeheader(string str [, string charset [, string transfer-encoding [, string linefeed]]])\nConverts the string to MIME "encoded-word" in the format of =?charset?(B|Q)?encoded_string?=
mb_encode_numericentity(string string, array convmap [, string encoding])\nConverts specified characters to HTML numeric entities
mb_ereg(string pattern, string string [, array registers])\nRegular expression match for multibyte string
mb_ereg_match(string pattern, string string [,string option])\nRegular expression match for multibyte string
mb_ereg_replace(string pattern, string replacement, string string [, string option])\nReplace regular expression for multibyte string
mb_ereg_search([string pattern[, string option]])\nRegular expression search for multibyte string
mb_ereg_search_getpos(void)\nGet search start position
mb_ereg_search_getregs(void)\nGet matched substring of the last time
mb_ereg_search_init(string string [, string pattern[, string option]])\nInitialize string and regular expression for search.
mb_ereg_search_pos([string pattern[, string option]])\nRegular expression search for multibyte string
mb_ereg_search_regs([string pattern[, string option]])\nRegular expression search for multibyte string
mb_ereg_search_setpos(int position)\nSet search start position
mb_eregi(string pattern, string string [, array registers])\nCase-insensitive regular expression match for multibyte string
mb_eregi_replace(string pattern, string replacement, string string)\nCase insensitive replace regular expression for multibyte string
mb_get_info([string type])\nReturns the current settings of mbstring
mb_http_input([string type])\nReturns the input encoding
mb_http_output([string encoding])\nSets the current output_encoding or returns the current output_encoding as a string
mb_internal_encoding([string encoding])\nSets the current internal encoding or Returns the current internal encoding as a string
mb_language([string language])\nSets the current language or Returns the current language as a string
mb_output_handler(string contents, int status)\nReturns string in output buffer converted to the http_output encoding
mb_parse_str(string encoded_string [, array result])\nParses GET/POST/COOKIE data and sets global variables
mb_preferred_mime_name(string encoding)\nReturn the preferred MIME name (charset) as a string
mb_regex_encoding([string encoding])\nReturns the current encoding for regex as a string.
mb_regex_set_options([string options])\nSet or get the default options for mbregex functions
mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])\n*\nSends an email message with MIME scheme
mb_split(string pattern, string string [, int limit])\nsplit multibyte string into array by regular expression
mb_strcut(string str, int start [, int length [, string encoding]])\nReturns part of a string
mb_strimwidth(string str, int start, int width [, string trimmarker [, string encoding]])\nTrim the string in terminal width
mb_strlen(string str [, string encoding])\nGet character numbers of a string
mb_strpos(string haystack, string needle [, int offset [, string encoding]])\nFind position of first occurrence of a string within another
mb_strrpos(string haystack, string needle [, string encoding])\nFind the last occurrence of a character in a string within another
mb_strtolower(string sourcestring [, string encoding])\n*\nReturns a lowercased version of sourcestring
mb_strtoupper(string sourcestring [, string encoding])\n*\nReturns a uppercased version of sourcestring
mb_strwidth(string str [, string encoding])\nGets terminal width of a string
mb_substitute_character([mixed substchar])\nSets the current substitute_character or returns the current substitute_character
mb_substr(string str, int start [, int length [, string encoding]])\nReturns part of a string
mb_substr_count(string haystack, string needle [, string encoding])\nCount the number of substring occurrences
mcrypt_cbc(int cipher, string key, string data, int mode, string iv)\nCBC crypt/decrypt data using key key with cipher cipher starting with iv
mcrypt_cfb(int cipher, string key, string data, int mode, string iv)\nCFB crypt/decrypt data using key key with cipher cipher starting with iv
mcrypt_create_iv(int size, int source)\nCreate an initialization vector (IV)
mcrypt_decrypt(string cipher, string key, string data, string mode, string iv)\nOFB crypt/decrypt data using key key with cipher cipher starting with iv
mcrypt_ecb(int cipher, string key, string data, int mode, string iv)\nECB crypt/decrypt data using key key with cipher cipher starting with iv
mcrypt_enc_get_algorithms_name(resource td)\nReturns the name of the algorithm specified by the descriptor td
mcrypt_enc_get_block_size(resource td)\nReturns the block size of the cipher specified by the descriptor td
mcrypt_enc_get_iv_size(resource td)\nReturns the size of the IV in bytes of the algorithm specified by the descriptor td
mcrypt_enc_get_key_size(resource td)\nReturns the maximum supported key size in bytes of the algorithm specified by the descriptor td
mcrypt_enc_get_modes_name(resource td)\nReturns the name of the mode specified by the descriptor td
mcrypt_enc_get_supported_key_sizes(resource td)\nThis function decrypts the crypttext
mcrypt_enc_is_block_algorithm(resource td)\nReturns TRUE if the alrogithm is a block algorithms
mcrypt_enc_is_block_algorithm_mode(resource td)\nReturns TRUE if the mode is for use with block algorithms
mcrypt_enc_is_block_mode(resource td)\nReturns TRUE if the mode outputs blocks
mcrypt_enc_self_test(resource td)\nThis function runs the self test on the algorithm specified by the descriptor td
mcrypt_encrypt(string cipher, string key, string data, string mode, string iv)\nOFB crypt/decrypt data using key key with cipher cipher starting with iv
mcrypt_generic(resource td, string data)\nThis function encrypts the plaintext
mcrypt_generic_deinit(resource td)\nThis function terminates encrypt specified by the descriptor td
mcrypt_generic_end(resource td)\nThis function terminates encrypt specified by the descriptor td
mcrypt_generic_init(resource td, string key, string iv)\nThis function initializes all buffers for the specific module
mcrypt_get_block_size(string cipher, string module)\nGet the key size of cipher
mcrypt_get_cipher_name(string cipher)\nGet the key size of cipher
mcrypt_get_iv_size(string cipher, string module)\nGet the IV size of cipher (Usually the same as the blocksize)
mcrypt_get_key_size(string cipher, string module)\nGet the key size of cipher
mcrypt_list_algorithms([string lib_dir])\nList all algorithms in "module_dir"
mcrypt_list_modes([string lib_dir])\nList all modes "module_dir"
mcrypt_module_close(resource td)\nFree the descriptor td
mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir])\nReturns the block size of the algorithm
mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir])\nReturns the maximum supported key size of the algorithm
mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir])\nThis function decrypts the crypttext
mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir])\nReturns TRUE if the algorithm is a block algorithm
mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir])\nReturns TRUE if the mode is for use with block algorithms
mcrypt_module_is_block_mode(string mode [, string lib_dir])\nReturns TRUE if the mode outputs blocks of bytes
mcrypt_module_open(string cipher, string cipher_directory, string mode, string mode_directory)\nOpens the module of the algorithm and the mode to be used
mcrypt_module_self_test(string algorithm [, string lib_dir])\nDoes a self test of the module "module"
mcrypt_ofb(int cipher, string key, string data, int mode, string iv)\nOFB crypt/decrypt data using key key with cipher cipher starting with iv
mcve_adduser(resource conn, string admin_password, int usersetup)\nAdd an MCVE user using usersetup structure
mcve_adduserarg(resource usersetup, int argtype, string argval)\nAdd a value to user configuration structure
mcve_bt(resource conn, string username, string password)\nGet unsettled batch totals
mcve_checkstatus(resource conn, int identifier)\nCheck to see if a transaction has completed
mcve_chkpwd(resource conn, string username, string password)\nVerify Password
mcve_chngpwd(resource conn, string admin_password, string new_password)\nChange the system administrator's password
mcve_completeauthorizations(resource conn, int &array)\nNumber of complete authorizations in queue, returning an array of their identifiers
mcve_connect(resource conn)\nEstablish the connection to MCVE
mcve_connectionerror(resource conn)\nGet a textual representation of why a connection failed
mcve_deleteresponse(resource conn, int identifier)\nDelete specified transaction from MCVE_CONN structure
mcve_deletetrans(resource conn, int identifier)\nDelete specified transaction from MCVE_CONN structure
mcve_deleteusersetup(resource usersetup)\nDeallocate data associated with usersetup structure
mcve_deluser(resource conn, string admin_password, string username)\nDelete an MCVE user account
mcve_destroyconn(resource conn)\nDestroy the connection and MCVE_CONN structure
mcve_destroyengine(void)\nFree memory associated with IP/SSL connectivity
mcve_disableuser(resource conn, string admin_password, string username)\nDisable an active MCVE user account
mcve_edituser(resource conn, string admin_password, int usersetup)\nEdit MCVE user using usersetup structure
mcve_enableuser(resource conn, string admin_password, string username)\nEnable an inactive MCVE user account
mcve_getcell(resource conn, int identifier, string column, int row)\nGet a specific cell from a comma delimited response by column name
mcve_getcellbynum(resource conn, int identifier, int column, int row)\nGet a specific cell from a comma delimited response by column number
mcve_getcommadelimited(resource conn, int identifier)\nGet the RAW comma delimited data returned from MCVE
mcve_getheader(resource conn, int identifier, int column_num)\nGet the name of the column in a comma-delimited response
mcve_getuserarg(resource usersetup, int argtype)\nGrab a value from usersetup structure
mcve_getuserparam(resource conn, long identifier, int key)\nGet a user response parameter
mcve_gft(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)\nAudit MCVE for Failed transactions
mcve_gl(int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)\nAudit MCVE for settled transactions
mcve_gut(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)\nAudit MCVE for Unsettled Transactions
mcve_initconn(void)\nCreate and initialize an MCVE_CONN structure
mcve_initengine(string location)\nReady the client for IP/SSL Communication
mcve_initusersetup(void)\nInitialize structure to store user data
mcve_iscommadelimited(resource conn, int identifier)\nChecks to see if response is comma delimited
mcve_liststats(resource conn, string admin_password)\nList statistics for all users on MCVE system
mcve_listusers(resource conn, string admin_password)\nList all users on MCVE system
mcve_maxconntimeout(resource conn, int secs)\nThe maximum amount of time the API will attempt a connection to MCVE
mcve_monitor(resource conn)\nPerform communication with MCVE (send/receive data)\n Non-blocking
mcve_numcolumns(resource conn, int identifier)\nNumber of columns returned in a comma delimited response
mcve_numrows(resource conn, int identifier)\nNumber of rows returned in a comma delimited response
mcve_parsecommadelimited(resource conn, int identifier)\nParse the comma delimited response so mcve_getcell, etc will work
mcve_ping(resource conn)\nSend a ping request to MCVE
mcve_preauth(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments,
mcve_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum)\nComplete a PREAUTHORIZATION... Ready it for settlement
mcve_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum)\nAudit MCVE for a list of transactions in the outgoing queue
mcve_responseparam(resource conn, long identifier, string key)\nGet a custom response parameter
mcve_return(int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum)\nIssue a RETURN or CREDIT to MCVE
mcve_returncode(resource conn, int identifier)\nGrab the exact return code from the transaction
mcve_returnstatus(resource conn, int identifier)\nCheck to see if the transaction was successful
mcve_sale(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)\nSend a SALE to MCVE
mcve_setblocking(resource conn, int tf)\nSet blocking/non-blocking mode for connection
mcve_setdropfile(resource conn, string directory)\nSet the connection method to Drop-File
mcve_setip(resource conn, string host, int port)\nSet the connection method to IP
mcve_setssl(resource conn, string host, int port)\nSet the connection method to SSL
mcve_setssl_files(string sslkeyfile, string sslcertfile)\nSet certificate key files and certificates if server requires client certificate  \n verification
mcve_settimeout(resource conn, int seconds)\nSet maximum transaction time (per trans)
mcve_settle(resource conn, string username, string password, string batch)\nIssue a settlement command to do a batch deposit
mcve_text_avs(string code)\nGet a textual representation of the return_avs
mcve_text_code(string code)\nGet a textual representation of the return_code
mcve_text_cv(int code)\nGet a textual representation of the return_cv
mcve_transactionauth(resource conn, int identifier)\nGet the authorization number returned for the transaction (alpha-numeric)
mcve_transactionavs(resource conn, int identifier)\nGet the Address Verification return status
mcve_transactionbatch(resource conn, int identifier)\nGet the batch number associated with the transaction
mcve_transactioncv(resource conn, int identifier)\nGet the CVC2/CVV2/CID return status
mcve_transactionid(resource conn, int identifier)\nGet the unique system id for the transaction
mcve_transactionitem(resource conn, int identifier)\nGet the ITEM number in the associated batch for this transaction
mcve_transactionssent(resource conn)\nCheck to see if outgoing buffer is clear
mcve_transactiontext(resource conn, int identifier)\nGet verbiage (text) return from MCVE or processing institution
mcve_transinqueue(resource conn)\nNumber of transactions in client-queue
mcve_transnew(resource conn)\nStart a new transaction
mcve_transparam(resource conn, long identifier, int key, ...)\nAdd a parameter to a transaction
mcve_transsend(resource conn, long identifier)\nFinalize and send the transaction
mcve_ub(resource conn, string username, string password)\nGet a list of all Unsettled batches
mcve_uwait(long microsecs)\nWait x microsecs
mcve_verifyconnection(resource conn, int tf)\nSet whether or not to PING upon connect to verify connection
mcve_verifysslcert(resource conn, int tf)\nSet whether or not to verify the server ssl certificate
mcve_void(resource conn, string username, string password, int sid, int ptrannum)\nVOID a transaction in the settlement queue
md5(string str, [ bool raw_output])\nCalculate the md5 hash of a string
md5_file(string filename [, bool raw_output])\nCalculate the md5 hash of given filename
mdecrypt_generic(resource td, string data)\nThis function decrypts the plaintext
memory_get_usage()\nReturns the allocated by PHP memory
metaphone(string text, int phones)\nBreak english phrases down into their phonemes
method_exists(object object, string method)\nChecks if the class method exists
mhash(int hash, string data [, string key])\nHash data with hash
mhash_count(void)\nGets the number of available hashes
mhash_get_block_size(int hash)\nGets the block size of hash
mhash_get_hash_name(int hash)\nGets the name of hash
mhash_keygen_s2k(int hash, string input_password, string salt, int bytes)\nGenerates a key using hash functions
microtime([bool get_as_float])\nReturns either a string or a float containing the current time in seconds and microseconds
mime_content_type(string filename|resource stream)\nReturn content-type for file
min(mixed arg1 [, mixed arg2 [, mixed ...]])\nReturn the lowest value in an array or a series of arguments
ming_setcubicthreshold (int threshold)\nSet cubic threshold (?)
ming_setscale(int scale)\nSet scale (?)
ming_useconstants(int use)\nUse constant pool (?)
ming_useswfversion(int version)\nUse SWF version (?)
mixed Reflection_Class::getConstant(string name)\nReturns the class' constant specified by its name
mixed Reflection_Function::invoke(mixed* args)\nInvokes the function
mixed Reflection_Method::invoke(mixed object, mixed* args)\nInvokes the function. Pass a
mixed Reflection_Property::getValue(stdclass object)\nReturns this property's value
mkdir(string pathname [, int mode [, bool recursive [, resource context]]])\nCreate a directory
mktime(int hour, int min, int sec, int mon, int day, int year)\nGet UNIX timestamp for a date
money_format(string format , float value)\nConvert monetary value(s) to string
move_uploaded_file(string path, string new_path)\nMove a file if and only if it was created by an upload
msession_call(string fn_name, [, string param1 ], ... [,string param4])\nCall the plugin function named fn_name
msession_connect(string host, string port)\nConnect to msession sever
msession_count(void)\nGet session count
msession_create(string session)\nCreate a session
msession_ctl(string name)\nLock a session
msession_destroy(string name)\nDestroy a session
msession_disconnect(void)\nDisconnect from msession server
msession_exec(string cmdline)\nexecutes a program on msession system
msession_find(string name, string value)\nFind all sessions with name and value
msession_get(string session, string name, string default_value)\nGet value from session
msession_get_array(string session)\nGet array of msession variables
msession_get_data(string session)\nGet data session unstructured data. (PHP sessions use this)
msession_inc(string session, string name)\n Increment value in session
msession_list(void)\nList all sessions
msession_listvar(string name)\nreturn associative array of value:session for all sessions with a variable named 'name'
msession_lock(string name)\nLock a session
msession_ping(void)\nreturns non-zero if msession is alive
msession_plugin(string session, string val [, string param ])\nCall the personality plugin escape function
msession_randstr(int num_chars)\nGet random string
msession_set(string session, string name, string value)\nSet value in session
msession_set_array(string session, array tuples)\nSet msession variables from an array
msession_set_data(string session, string value)\nSet data session unstructured data. (PHP sessions use this)
msession_timeout(string session [, int param ])\nSet/get session timeout
msession_uniq(int num_chars)\nGet uniq id
msession_unlock(string session, int key)\nUnlock a session
msg_get_queue(int key [, int perms])\nAttach to a message queue
msg_receive(resource queue, int desiredmsgtype, int &msgtype, int maxsize, mixed message [, bool unserialize=true [, int flags=0 [, int errorcode]]])\nSend a message of type msgtype (must be > 0) to a message queue
msg_remove_queue(resource queue)\nDestroy the queue
msg_send(resource queue, int msgtype, mixed message [, bool serialize=true [, bool blocking=true [, int errorcode]]])\nSend a message of type msgtype (must be > 0) to a message queue
msg_set_queue(resource queue, array data)\nSet information for a message queue
msg_stat_queue(resource queue)\nReturns information about a message queue
msql_affected_rows(resource query)\nReturn number of affected rows
msql_close([resource link_identifier])\nClose an mSQL connection
msql_connect([string hostname[:port]] [, string username] [, string password])\nOpen a connection to an mSQL Server
msql_create_db(string database_name [, resource link_identifier])\nCreate an mSQL database
msql_data_seek(resource query, int row_number)\nMove internal result pointer
msql_db_query(string database_name, string query [, resource link_identifier])\nSend an SQL query to mSQL
msql_drop_db(string database_name [, resource link_identifier])\nDrop (delete) an mSQL database
msql_error(void)\nReturns the text of the error message from previous mSQL operation
msql_fetch_array(resource query [, int result_type])\nFetch a result row as an associative array
msql_fetch_field(resource query [, int field_offset])\nGet column information from a result and return as an object
msql_fetch_object(resource query [, resource result_type])\nFetch a result row as an object
msql_fetch_row(resource query)\nGet a result row as an enumerated array
msql_field_flags(resource query, int field_offset)\nGet the flags associated with the specified field in a result
msql_field_len(int query, int field_offet)\nReturns the length of the specified field
msql_field_name(resource query, int field_index)\nGet the name of the specified field in a result
msql_field_seek(resource query, int field_offset)\nSet result pointer to a specific field offset
msql_field_table(resource query, int field_offset)\nGet name of the table the specified field is in
msql_field_type(resource query, int field_offset)\nGet the type of the specified field in a result
msql_free_result(resource query)\nFree result memory
msql_list_dbs([resource link_identifier])\nList databases available on an mSQL server
msql_list_fields(string database_name, string table_name [, resource link_identifier])\nList mSQL result fields
msql_list_tables(string database_name [, resource link_identifier])\nList tables in an mSQL database
msql_num_fields(resource query)\nGet number of fields in a result
msql_num_rows(resource query)\nGet number of rows in a result
msql_pconnect([string hostname[:port]] [, string username] [, string password])\nOpen a persistent connection to an mSQL Server
msql_query(string query [, resource link_identifier])\nSend an SQL query to mSQL
msql_result(int query, int row [, mixed field])\nGet result data
msql_select_db(string database_name [, resource link_identifier])\nSelect an mSQL database
mssql_bind(resource stmt, string param_name, mixed var, int type\n [, int is_output[, int is_null[, int maxlen]]])  \n Adds a parameter to a stored procedure or a remote stored procedure
mssql_close([resource conn_id])\nCloses a connection to a MS-SQL server
mssql_connect([string servername [, string username [, string password]]])\nEstablishes a connection to a MS-SQL server
mssql_data_seek(resource result_id, int offset)\nMoves the internal row pointer of the MS-SQL result associated with the specified result identifier to pointer to the specified row number
mssql_execute(resource stmt [, bool skip_results = false])\nExecutes a stored procedure on a MS-SQL server database
mssql_fetch_array(resource result_id [, int result_type])\nReturns an associative array of the current row in the result set specified by result_id
mssql_fetch_assoc(resource result_id)\nReturns an associative array of the current row in the result set specified by result_id
mssql_fetch_batch(resource result_index)\nReturns the next batch of records
mssql_fetch_field(resource result_id [, int offset])\nGets information about certain fields in a query result
mssql_fetch_object(resource result_id [, int result_type])\nReturns a psuedo-object of the current row in the result set specified by result_id
mssql_fetch_row(resource result_id)\nReturns an array of the current row in the result set specified by result_id
mssql_field_length(resource result_id [, int offset])\nGet the length of a MS-SQL field
mssql_field_name(resource result_id [, int offset])\nReturns the name of the field given by offset in the result set given by result_id
mssql_field_seek(int result_id, int offset)\nSeeks to the specified field offset
mssql_field_type(resource result_id [, int offset])\nReturns the type of a field
mssql_free_result(resource result_index)\nFree a MS-SQL result index
mssql_free_statement(resource result_index)\nFree a MS-SQL statement index
mssql_get_last_message(void)\nGets the last message from the MS-SQL server
mssql_guid_string(string binary [,int short_format])\nConverts a 16 byte binary GUID to a string
mssql_init(string sp_name [, resource conn_id])\nInitializes a stored procedure or a remote stored procedure
mssql_min_error_severity(int severity)\nSets the lower error severity
mssql_min_message_severity(int severity)\nSets the lower message severity
mssql_next_result(resource result_id)\nMove the internal result pointer to the next result
mssql_num_fields(resource mssql_result_index)\nReturns the number of fields fetched in from the result id specified
mssql_num_rows(resource mssql_result_index)\nReturns the number of rows fetched in from the result id specified
mssql_pconnect([string servername [, string username [, string password]]])\nEstablishes a persistent connection to a MS-SQL server
mssql_query(string query [, resource conn_id [, int batch_size]])\nPerform an SQL query on a MS-SQL server database
mssql_result(resource result_id, int row, mixed field)\nReturns the contents of one cell from a MS-SQL result set
mssql_rows_affected(resource conn_id)\nReturns the number of records affected by the query
mssql_select_db(string database_name [, resource conn_id])\nSelect a MS-SQL database
mt_getrandmax(void)\nReturns the maximum value a random number from Mersenne Twister can have
mt_rand([int min, int max])\nReturns a random number from Mersenne Twister
mt_srand([int seed])\nSeeds Mersenne Twister random number generator
mysql_affected_rows([int link_identifier])\nGets number of affected rows in previous MySQL operation
mysql_client_encoding([int link_identifier])\nReturns the default character set for the current connection
mysql_close([int link_identifier])\nClose a MySQL connection
mysql_connect([string hostname[:port][:/path/to/socket] [, string username [, string password [, bool new [, int flags]]]]])\nOpens a connection to a MySQL Server
mysql_create_db(string database_name [, int link_identifier])\nCreate a MySQL database
mysql_data_seek(resource result, int row_number)\nMove internal result pointer
mysql_db_query(string database_name, string query [, int link_identifier])\nSends an SQL query to MySQL
mysql_drop_db(string database_name [, int link_identifier])\nDrops (delete) a MySQL database
mysql_errno([int link_identifier])\nReturns the number of the error message from previous MySQL operation
mysql_error([int link_identifier])\nReturns the text of the error message from previous MySQL operation
mysql_escape_string(string to_be_escaped)\nEscape string for mysql query
mysql_fetch_array(resource result [, int result_type])\nFetch a result row as an array (associative, numeric or both)
mysql_fetch_assoc(resource result)\nFetch a result row as an associative array
mysql_fetch_field(resource result [, int field_offset])\nGets column information from a result and return as an object
mysql_fetch_lengths(resource result)\nGets max data size of each column in a result
mysql_fetch_object(resource result [, string class_name [, NULL|array ctor_params]])\nFetch a result row as an object
mysql_fetch_row(resource result)\nGets a result row as an enumerated array
mysql_field_flags(resource result, int field_offset)\nGets the flags associated with the specified field in a result
mysql_field_len(resource result, int field_offset)\nReturns the length of the specified field
mysql_field_name(resource result, int field_index)\nGets the name of the specified field in a result
mysql_field_seek(resource result, int field_offset)\nSets result pointer to a specific field offset
mysql_field_table(resource result, int field_offset)\nGets name of the table the specified field is in
mysql_field_type(resource result, int field_offset)\nGets the type of the specified field in a result
mysql_free_result(resource result)\nFree result memory
mysql_get_client_info(void)\nReturns a string that represents the client library version
mysql_get_host_info([int link_identifier])\nReturns a string describing the type of connection in use, including the server host name
mysql_get_proto_info([int link_identifier])\nReturns the protocol version used by current connection
mysql_get_server_info([int link_identifier])\nReturns a string that represents the server version number
mysql_info([int link_identifier])\nReturns a string containing information about the most recent query
mysql_insert_id([int link_identifier])\nGets the ID generated from the previous INSERT operation
mysql_list_dbs([int link_identifier])\nList databases available on a MySQL server
mysql_list_fields(string database_name, string table_name [, int link_identifier])\nList MySQL result fields
mysql_list_processes([int link_identifier])\nReturns a result set describing the current server threads
mysql_list_tables(string database_name [, int link_identifier])\nList tables in a MySQL database
mysql_num_fields(resource result)\nGets number of fields in a result
mysql_num_rows(resource result)\nGets number of rows in a result
mysql_pconnect([string hostname[:port][:/path/to/socket] [, string username [, string password [, int flags]]]])\nOpens a persistent connection to a MySQL Server
mysql_ping([int link_identifier])\nPing a server connection. If no connection then reconnect.
mysql_query(string query [, int link_identifier])\nSends an SQL query to MySQL
mysql_real_escape_string(string to_be_escaped [, int link_identifier])\nEscape special characters in a string for use in a SQL statement, taking into account the current charset of the connection
mysql_result(resource result, int row [, mixed field])\nGets result data
mysql_select_db(string database_name [, int link_identifier])\nSelects a MySQL database
mysql_stat([int link_identifier])\nReturns a string containing status information
mysql_thread_id([int link_identifier])\nReturns the thread id of current connection
mysql_unbuffered_query(string query [, int link_identifier])\nSends an SQL query to MySQL, without fetching and buffering the result rows
mysqli_affected_rows(object link)\nGet number of affected rows in previous MySQL operation
mysqli_autocommit(object link, bool mode)\nTurn auto commit on or of
mysqli_bind_param(object stmt, array types, mixed variable [,mixed,....])\nBind variables to a prepared statement as parameters
mysqli_bind_result(object stmt, mixed var, [,mixed, ...])\nBind variables to a prepared statement for result storage
mysqli_change_user(object link, string user, string password, string database)\nChange logged-in user of the active connection
mysqli_character_set_name(object link)\nReturns the name of the character set used for this connection
mysqli_close(object link)\nClose connection
mysqli_commit(object link)\nCommit outstanding actions and close transaction
mysqli_connect([string hostname [,string username [,string passwd [,string dbname [,int port [,string socket]]]]]])\nOpen a connection to a mysql server
mysqli_connect_errno()\nReturns the numerical value of the error message from last connect command
mysqli_connect_error()\nReturns the text of the error message from previous MySQL operation
mysqli_data_seek(object result, int offset)\nMove internal result pointer
mysqli_debug(string debug)
mysqli_disable_reads_from_master(object link)
mysqli_disable_rpl_parse(object link)
mysqli_dump_debug_info(object link)
mysqli_embedded_connect(void)\nOpen a connection to a embedded mysql server
mysqli_enable_reads_from_master(object link)
mysqli_enable_rpl_parse(object link)
mysqli_errno(object link)\nReturns the numerical value of the error message from previous MySQL operation
mysqli_error(object link)\nReturns the text of the error message from previous MySQL operation
mysqli_execute(object stmt)\nExecute a prepared statement
mysqli_fetch(object stmt)\nFetch results from a prepared statement into the bound variables
mysqli_fetch_array (object result [,int resulttype])\nFetch a result row as an associative array, a numeric array, or both
mysqli_fetch_assoc (object result)\nFetch a result row as an associative array
mysqli_fetch_field (object result)\nGet column information from a result and return as an object
mysqli_fetch_field_direct (object result, int offset)\nFetch meta-data for a single field
mysqli_fetch_fields (object result)\nReturn array of objects containing field meta-data
mysqli_fetch_lengths (object result)\nGet the length of each output in a result
mysqli_fetch_object (object result [, string class_name [, NULL|array ctor_params]])\nFetch a result row as an object
mysqli_fetch_row (object result)\nGet a result row as an enumerated array
mysqli_field_count(object link)\nFetch the number of fields returned by the last query for the given link
mysqli_field_seek(object result, int fieldnr)\nSet result pointer to a specified field offset
mysqli_field_tell(object result)\nGet current field offset of result pointer
mysqli_free_result(object result)\nFree query result memory for the given result handle
mysqli_get_client_info(void)\n Get MySQL client info
mysqli_get_host_info (object link)\n Get MySQL host info
mysqli_get_metadata(object stmt)\nreturn result set from statement
mysqli_get_proto_info(object link)\nGet MySQL protocol information
mysqli_get_server_info(object link)\n Get MySQL server info
mysqli_get_server_version(object link)\n Return the MySQL version for the server referenced by the given link
mysqli_info(object link)\nGet information about the most recent query
mysqli_init(void)\nInitialize mysqli and return a resource for use with mysql_real_connect
mysqli_insert_id(object link)\nGet the ID generated from the previous INSERT operation
mysqli_kill(object link, int processid)\nKill a mysql process on the server
mysqli_master_query(object link, string query)\nEnforce execution of a query on the master in a master/slave setup
mysqli_more_results(object link)\ncheck if there any more query results from a multi query
mysqli_multi_query(object link, string query)\nBinary-safe version of mysql_query()
mysqli_next_result(object link)\nread next result from multi_query
mysqli_num_fields(object result)\nGet number of fields in result
mysqli_num_rows(object result)\nGet number of rows in result
mysqli_options(object link, int flags, mixed values)\nSet options
mysqli_param_count(object stmt) {\nReturn the number of parameter for the given statement
mysqli_ping(object link)\nPing a server connection or reconnect if there is no connection
mysqli_prepare(object link, string query)\nPrepare a SQL statement for execution
mysqli_query(object link, string query [,int resultmode])
mysqli_real_connect(object link [,string hostname [,string username [,string passwd [,string dbname [,int port [,string socket [,int flags]]]]]]])\nOpen a connection to a mysql server
mysqli_real_escape_string(object link, string escapestr)\n Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection
mysqli_real_query(object link, string query)\nBinary-safe version of mysql_query()
mysqli_rollback(object link)\nUndo actions from current transaction
mysqli_rpl_parse_enabled(object link)
mysqli_rpl_probe(object link)
mysqli_rpl_query_type(string query)
mysqli_select_db(object link, string dbname)\nSelect a MySQL database
mysqli_send_long_data(object stmt, int param_nr, string data)
mysqli_send_query(object link, string query)
mysqli_server_end(void)
mysqli_server_init(void)\ninitialize embedded server
mysqli_slave_query(object link, string query)\nEnforce execution of a query on a slave in a master/slave setup
mysqli_sqlstate(object link)\nReturns the SQLSTATE error from previous MySQL operation
mysqli_ssl_set(object link ,string key ,string cert ,string ca ,string capath ,string cipher])
mysqli_stat(object link)\n Get current system status
mysqli_stmt_affected_rows(object stmt)\nReturn the number of rows affected in the last query for the given link
mysqli_stmt_close(object stmt)\n Close statement
mysqli_stmt_data_seek(object stmt, int offset)\nMove internal result pointer
mysqli_stmt_errno(object stmt)
mysqli_stmt_error(object stmt)
mysqli_stmt_num_rows(object stmt)\nReturn the number of rows in statements result set
mysqli_stmt_sqlstate(object stmt)
mysqli_stmt_store_result(stmt)
mysqli_store_result(object link)\nBuffer result set on client
mysqli_thread_id(object link)\nReturn the current thread ID
mysqli_thread_safe(void)\nReturn whether thread safety is given or not
mysqli_use_result(object link)\nDirectly retrieve query results - do not buffer results on client side
mysqli_warning_count (object link)\nReturn number of warnings from the last query for the given link
natcasesort(array array_arg)\nSort an array using case-insensitive natural sort
natsort(array array_arg)\nSort an array using natural sort
ncurses_addch(int ch)\nAdds character at current position and advance cursor
ncurses_addchnstr(string s, int n)\nAdds attributed string with specified length at current position
ncurses_addchstr(string s)\nAdds attributed string at current position
ncurses_addnstr(string s, int n)\nAdds string with specified length at current position
ncurses_addstr(string text)\nOutputs text at current position
ncurses_assume_default_colors(int fg, int bg)\nDefines default colors for color 0
ncurses_attroff(int attributes)\nTurns off the given attributes
ncurses_attron(int attributes)\nTurns on the given attributes
ncurses_attrset(int attributes)\nSets given attributes
ncurses_baudrate(void)\nReturns baudrate of terminal
ncurses_beep(void)\nLet the terminal beep
ncurses_bkgd(int attrchar)\nSets background property for terminal screen
ncurses_bkgdset(int attrchar)\nControls screen background
ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)\nDraws a border around the screen using attributed characters
ncurses_bottom_panel(resource panel)\nMoves a visible panel to the bottom of the stack
ncurses_can_change_color(void)\nChecks if we can change terminals colors
ncurses_cbreak(void)\nSwitches of input buffering
ncurses_clear(void)\nClears screen
ncurses_clrtobot(void)\nClears screen from current position to bottom
ncurses_clrtoeol(void)\nClears screen from current position to end of line
ncurses_color_content(int color, int &r, int &g, int &b)\nGets the RGB value for color
ncurses_color_set(int pair)\nSets fore- and background color
ncurses_curs_set(int visibility)\nSets cursor state
ncurses_def_prog_mode(void)\nSaves terminals (program) mode
ncurses_def_shell_mode(void)\nSaves terminal (shell) mode
ncurses_define_key(string definition, int keycode)\nDefines a keycode
ncurses_del_panel(resource panel)\nRemove panel from the stack and delete it (but not the associated window)
ncurses_delay_output(int milliseconds)\nDelays output on terminal using padding characters
ncurses_delch(void)\nDeletes character at current position, move rest of line left
ncurses_deleteln(void)\nDeletes line at current position, move rest of screen up
ncurses_delwin(resource window)\nDeletes a ncurses window
ncurses_doupdate(void)\nWrites all prepared refreshes to terminal
ncurses_echo(void)\nActivates keyboard input echo
ncurses_echochar(int character)\nSingle character output including refresh
ncurses_end(void)\nStops using ncurses, clean up the screen
ncurses_erase(void)\nErases terminal screen
ncurses_erasechar(void)\nReturns current erase character
ncurses_filter(void)
ncurses_flash(void)\nFlashes terminal screen (visual bell)
ncurses_flushinp(void)\nFlushes keyboard input buffer
ncurses_getch(void)\nReads a character from keyboard
ncurses_getmaxyx(resource window, int &y, int &x)\nReturns the size of a window
ncurses_getmouse(array &mevent)\nReads mouse event from queue. The content of mevent is cleared before new data is added.
ncurses_getyx(resource window, int &y, int &x)\nReturns the current cursor position for a window
ncurses_halfdelay(int tenth)\nPuts terminal into halfdelay mode
ncurses_has_colors(void)\nChecks if terminal has colors
ncurses_has_ic(void)\nChecks for insert- and delete-capabilities
ncurses_has_il(void)\nChecks for line insert- and delete-capabilities
ncurses_has_key(int keycode)\nChecks for presence of a function key on terminal keyboard
ncurses_hide_panel(resource panel)\nRemove panel from the stack, making it invisible
ncurses_hline(int charattr, int n)\nDraws a horizontal line at current position using an attributed character and max. n characters long
ncurses_inch(void)\nGets character and attribute at current position
ncurses_init(void)\nInitializes ncurses
ncurses_init_color(int color, int r, int g, int b)\nSets new RGB value for color
ncurses_init_pair(int pair, int fg, int bg)\nAllocates a color pair
ncurses_insch(int character)\nInserts character moving rest of line including character at current position
ncurses_insdelln(int count)\nInserts lines before current line scrolling down (negative numbers delete and scroll up)
ncurses_insertln(void)\nInserts a line, move rest of screen down
ncurses_insstr(string text)\nInserts string at current position, moving rest of line right
ncurses_instr(string &buffer)\nReads string from terminal screen
ncurses_isendwin(void)\nNcurses is in endwin mode, normal screen output may be performed
ncurses_keyok(int keycode, int enable)\nEnables or disable a keycode
ncurses_keypad(resource window, bool bf)\nTurns keypad on or off
ncurses_killchar(void)\nReturns current line kill character
ncurses_longname(void)\nReturns terminal description
ncurses_meta(resource window, bool 8bit)\nEnables/Disable 8-bit meta key information
ncurses_mouse_trafo(int &y, int &x, bool toscreen)\nTransforms coordinates
ncurses_mouseinterval(int milliseconds)\nSets timeout for mouse button clicks
ncurses_mousemask(int newmask, int &oldmask)\nReturns and sets mouse options
ncurses_move(int y, int x)\nMoves output position
ncurses_move_panel(resource panel, int startx, int starty)\nMoves a panel so that it's upper-left corner is at [startx, starty]
ncurses_mvaddch(int y, int x, int c)\nMoves current position and add character
ncurses_mvaddchnstr(int y, int x, string s, int n)\nMoves position and add attrributed string with specified length
ncurses_mvaddchstr(int y, int x, string s)\nMoves position and add attributed string
ncurses_mvaddnstr(int y, int x, string s, int n)\nMoves position and add string with specified length
ncurses_mvaddstr(int y, int x, string s)\nMoves position and add string
ncurses_mvcur(int old_y,int old_x, int new_y, int new_x)\nMoves cursor immediately
ncurses_mvdelch(int y, int x)\nMoves position and delete character, shift rest of line left
ncurses_mvgetch(int y, int x)\nMoves position and get character at new position
ncurses_mvhline(int y, int x, int attrchar, int n)\nSets new position and draw a horizontal line using an attributed character and max. n characters long
ncurses_mvinch(int y, int x)\nMoves position and get attributed character at new position
ncurses_mvvline(int y, int x, int attrchar, int n)\nSets new position and draw a vertical line using an attributed character and max. n characters long
ncurses_mvwaddstr(resource window, int y, int x, string text)\nAdds string at new position in window
ncurses_napms(int milliseconds)\nSleep
ncurses_new_panel(resource window)\nCreate a new panel and associate it with window
ncurses_newpad(int rows, int cols)\nCreates a new pad (window)
ncurses_newwin(int rows, int cols, int y, int x)\nCreates a new window
ncurses_nl(void)\nTranslates newline and carriage return / line feed
ncurses_nocbreak(void)\nSwitches terminal to cooked mode
ncurses_noecho(void)\nSwitches off keyboard input echo
ncurses_nonl(void)\nDo not ranslate newline and carriage return / line feed
ncurses_noqiflush(void)\nDo not flush on signal characters
ncurses_noraw(void)\nSwitches terminal out of raw mode
ncurses_pair_content(int pair, int &f, int &b)\nGets the RGB value for color
ncurses_panel_above(resource panel)\nReturns the panel above panel. If panel is null, returns the bottom panel in the stack
ncurses_panel_below(resource panel)\nReturns the panel below panel. If panel is null, returns the top panel in the stack
ncurses_panel_window(resource panel)\nReturns the window associated with panel
ncurses_pnoutrefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)\nCopys a region from a pad into the virtual screen
ncurses_prefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)\nCopys a region from a pad into the virtual screen
ncurses_putp(string text)
ncurses_qiflush(void)\nFlushes on signal characters
ncurses_raw(void)\nSwitches terminal into raw mode
ncurses_refresh(int ch)\nRefresh screen
ncurses_replace_panel(resource panel, resource window)\nReplaces the window associated with panel
ncurses_reset_prog_mode(void)\nResets the prog mode saved by def_prog_mode
ncurses_reset_shell_mode(void)\nResets the shell mode saved by def_shell_mode
ncurses_resetty(void)\nRestores saved terminal state
ncurses_savetty(void)\nSaves terminal state
ncurses_scr_dump(string filename)\nDumps screen content to file
ncurses_scr_init(string filename)\nInitializes screen from file dump
ncurses_scr_restore(string filename)\nRestores screen from file dump
ncurses_scr_set(string filename)\nInherits screen from file dump
ncurses_scrl(int count)\nScrolls window content up or down without changing current position
ncurses_show_panel(resource panel)\nPlaces an invisible panel on top of the stack, making it visible
ncurses_slk_attr(void)\nReturns current soft label keys attribute
ncurses_slk_attroff(int intarg)
ncurses_slk_attron(int intarg)
ncurses_slk_attrset(int intarg)
ncurses_slk_clear(void)\nClears soft label keys from screen
ncurses_slk_color(int intarg)\nSets color for soft label keys
ncurses_slk_init(int intarg)\nInits soft label keys
ncurses_slk_noutrefresh(void)\nCopies soft label keys to virtual screen
ncurses_slk_refresh(void)\nCopies soft label keys to screen
ncurses_slk_restore(void)\nRestores soft label keys
ncurses_slk_set(int labelnr, string label, int format)\nSets function key labels
ncurses_slk_touch(void)\nForces output when ncurses_slk_noutrefresh is performed
ncurses_standend(void)\nStops using 'standout' attribute
ncurses_standout(void)\nStarts using 'standout' attribute
ncurses_start_color(void)\nStarts using colors
ncurses_termattrs(void)\nReturns a logical OR of all attribute flags supported by terminal
ncurses_termname(void)\nReturns terminal name
ncurses_timeout(int millisec)\nSets timeout for special key sequences
ncurses_top_panel(resource panel)\nMoves a visible panel to the top of the stack
ncurses_typeahead(int fd)\nSpecifys different filedescriptor for typeahead checking
ncurses_ungetch(int keycode)\nPuts a character back into the input stream
ncurses_ungetmouse(array mevent)\nPushes mouse event to queue
ncurses_update_panels(void)\nRefreshes the virtual screen to reflect the relations between panels in the stack.
ncurses_use_default_colors(void)\nAssigns terminal default colors to color id -1
ncurses_use_env(int flag)\nControls use of environment information about terminal size
ncurses_use_extended_names(bool flag)\nControls use of extended names in terminfo descriptions
ncurses_vidattr(int intarg)
ncurses_vline(int charattr, int n)\nDraws a vertical line at current position using an attributed character and max. n characters long
ncurses_waddch(resource window, int ch)\nAdds character at current position in a window and advance cursor
ncurses_waddstr(resource window, string str [, int n])\nOutputs text at current postion in window
ncurses_wattroff(resource window, int attrs)\nTurns off attributes for a window
ncurses_wattron(resource window, int attrs)\nTurns on attributes for a window
ncurses_wattrset(resource window, int attrs)\nSet the attributes for a window
ncurses_wborder(resource window, int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)\nDraws a border around the window using attributed characters
ncurses_wclear(resource window)\nClears window
ncurses_wcolor_set(resource window, int color_pair)\nSets windows color pairings
ncurses_werase(resource window)\nErase window contents
ncurses_wgetch(resource window)\nReads a character from keyboard (window)
ncurses_whline(resource window, int charattr, int n)\nDraws a horizontal line in a window at current position using an attributed character and max. n characters long
ncurses_wmouse_trafo(resource window, int &y, int &x, bool toscreen)\nTransforms window/stdscr coordinates
ncurses_wmove(resource window, int y, int x)\nMoves windows output position
ncurses_wnoutrefresh(resource window)\nCopies window to virtual screen
ncurses_wrefresh(resource window)\nRefreshes window on terminal screen
ncurses_wstandend(resource window)\nEnd standout mode for a window
ncurses_wstandout(resource window)\nEnter standout mode for a window
ncurses_wvline(resource window, int charattr, int n)\nDraws a vertical line in a window at current position using an attributed character and max. n characters long
next(array array_arg)\nMove array argument's internal pointer to the next element and return it
ngettext(string MSGID1, string MSGID2, int N)\nPlural version of gettext()
nl_langinfo(int item)\nQuery language and locale information
nl2br(string str)\nConverts newlines to HTML line breaks
nsapi_request_headers(void)\nGet all headers from the request
nsapi_response_headers(void)\nGet all headers from the response
nsapi_virtual(string uri)\nPerform an NSAPI sub-request
number_format(float number [, int num_decimal_places [, string dec_seperator, string thousands_seperator]])\nFormats a number with grouped thousands
ob_clean(void)\nClean (delete) the current output buffer
ob_end_clean(void)\nClean the output buffer, and delete current output buffer
ob_end_flush(void)\nFlush (send) the output buffer, and delete current output buffer
ob_flush(void)\nFlush (send) contents of the output buffer. The last buffer content is sent to next buffer
ob_get_clean(void)\nGet current buffer contents and delete current output buffer
ob_get_contents(void)\nReturn the contents of the output buffer
ob_get_flush(void)\nGet current buffer contents, flush (send) the output buffer, and delete current output buffer
ob_get_length(void)\nReturn the length of the output buffer
ob_get_level(void)\nReturn the nesting level of the output buffer
ob_get_status([bool full_status])\nReturn the status of the active or all output buffers
ob_gzhandler(string str, int mode)\nEncode str based on accept-encoding setting - designed to be called from ob_start()
ob_iconv_handler(string contents, int status)\nReturns str in output buffer converted to the iconv.output_encoding character set
ob_implicit_flush([int flag])\nTurn implicit flush on/off and is equivalent to calling flush() after every output call
ob_list_handlers()\n*\nList all output_buffers in an array
ob_start([ string|array user_function [, int chunk_size [, bool erase]]])\nTurn on Output Buffering (specifying an optional output handler).
oci_bind_by_name(resource stmt, string name, mixed &var, [, int maxlength [, int type]])\nBind a PHP variable to an Oracle placeholder by name
oci_cancel(resource stmt)\nCancel reading from a cursor
oci_close(resource conn)\nDisconnect from database
oci_collection_append(string value)\nAppend an object to the collection
oci_collection_assign(object from)\nAssign a collection from another existing collection
oci_collection_element_assign(int index, string val)\nAssign element val to collection at index ndx
oci_collection_element_get(int ndx)\nRetrieve the value at collection index ndx
oci_collection_max()\nReturn the max value of a collection. For a varray this is the maximum length of the array
oci_collection_size()\nReturn the size of a collection
oci_collection_trim(int num)\nTrim num elements from the end of a collection
oci_commit(resource conn)\nCommit the current context
oci_connect(string user, string pass [, string db])\nConnect to an Oracle database and log on. Returns a new session.
oci_define_by_name(resource stmt, string name, mixed &var [, int type])\nDefine a PHP variable to an Oracle column by name
oci_error([resource stmt|conn|global])\nReturn the last error of stmt|conn|global. If no error happened returns false.
oci_execute(resource stmt [, int mode])\nExecute a parsed statement
oci_fetch(resource stmt)\nPrepare a new row of data for reading
oci_fetch_all(resource stmt, array &output[, int skip[, int maxrows[, int flags]]])\nFetch all rows of result data into an array
oci_fetch_array( resource stmt [, int mode ])\nFetch a result row as an array
oci_fetch_assoc( resource stmt )\nFetch a result row as an associative array
oci_fetch_object( resource stmt )\nFetch a result row as an object
oci_fetch_row( resource stmt )\nFetch a result row as an enumerated array
oci_field_is_null(resource stmt, int col)\nTell whether a column is NULL
oci_field_name(resource stmt, int col)\nTell the name of a column
oci_field_precision(resource stmt, int col)\nTell the precision of a column
oci_field_scale(resource stmt, int col)\nTell the scale of a column
oci_field_size(resource stmt, int col)\nTell the maximum data size of a column
oci_field_type(resource stmt, int col)\nTell the data type of a column
oci_field_type_raw(resource stmt, int col)\nTell the raw oracle data type of a column
oci_free_collection()\nDeletes collection object
oci_free_descriptor()\nDeletes large object description
oci_free_statement(resource stmt)\nFree all resources associated with a statement
oci_internal_debug(int onoff)\nToggle internal debugging output for the OCI extension
oci_lob_append( object lob )\nAppends data from a LOB to another LOB
oci_lob_close()\nCloses lob descriptor
oci_lob_copy( object lob_to, object lob_from [, int length ] )\nCopies data from a LOB to another LOB
oci_lob_eof()\nChecks if EOF is reached
oci_lob_erase( [ int offset [, int length ] ] )\nErases a specified portion of the internal LOB, starting at a specified offset
oci_lob_export([string filename [, int start [, int length]]])\nWrites a large object into a file
oci_lob_flush( [ int flag ] )\nFlushes the LOB buffer
oci_lob_import( string filename )\nSaves a large object to file
oci_lob_is_equal( object lob1, object lob2 )\nTests to see if two LOB/FILE locators are equal
oci_lob_load()\nLoads a large object
oci_lob_read( int length )\nReads particular part of a large object
oci_lob_rewind()\nRewind pointer of a LOB
oci_lob_save( string data [, int offset ])\nSaves a large object
oci_lob_seek( int offset [, int whence ])\nMoves the pointer of a LOB
oci_lob_size()\nReturns size of a large object
oci_lob_tell()\nTells LOB pointer position
oci_lob_truncate( [ int length ])\nTruncates a LOB
oci_lob_write( string string [, int length ])\nWrites data to current position of a LOB
oci_lob_write_temporary(string var [, int lob_type])\nWrites temporary blob
oci_new_collection(resource connection, string tdo [, string schema])\nInitialize a new collection
oci_new_connect(string user, string pass [, string db])\nConnect to an Oracle database and log on. Returns a new session.
oci_new_cursor(resource conn)\nReturn a new cursor (Statement-Handle) - use this to bind ref-cursors!
oci_new_descriptor(resource connection [, int type])\nInitialize a new empty descriptor LOB/FILE (LOB is default)
oci_num_fields(resource stmt)\nReturn the number of result columns in a statement
oci_num_rows(resource stmt)\nReturn the row count of an OCI statement
oci_parse(resource conn, string query)\nParse a query and return a statement
oci_password_change(resource conn, string username, string old_password, string new_password)\nChanges the password of an account
oci_pconnect(string user, string pass [, string db])\nConnect to an Oracle database using a persistent connection and log on. Returns a new session.
oci_result(resource stmt, mixed column)\nReturn a single column of result data
oci_rollback(resource conn)\nRollback the current context
oci_server_version(resource conn)\nReturn a string containing server version information
oci_set_prefetch(resource stmt, int prefetch_rows)\nSets the number of rows to be prefetched on execute to prefetch_rows for stmt
oci_statement_type(resource stmt)\nReturn the query type of an OCI statement
ocifetchinto(resource stmt, array &output [, int mode])\nFetch a row of result data into an array
ocigetbufferinglob()\nReturns current state of buffering for a LOB
ocisetbufferinglob( boolean flag )\nEnables/disables buffering for a LOB
octdec(string octal_number)\nReturns the decimal equivalent of an octal string
odbc_autocommit(resource connection_id [, int OnOff])\nToggle autocommit mode or get status
odbc_binmode(int result_id, int mode)\nHandle binary column data
odbc_close(resource connection_id)\nClose an ODBC connection
odbc_close_all(void)\nClose all ODBC connections
odbc_columnprivileges(resource connection_id, string catalog, string schema, string table, string column)\nReturns a result identifier that can be used to fetch a list of columns and associated privileges for the specified table
odbc_columns(resource connection_id, string qualifier, string owner, string table_name, string column_name)\nReturns a result identifier that can be used to fetch a list of column names in specified tables
odbc_commit(resource connection_id)\nCommit an ODBC transaction
odbc_connect(string DSN, string user, string password [, int cursor_option])\nConnect to a datasource
odbc_cursor(resource result_id)\nGet cursor name
odbc_data_source(resource connection_id, int fetch_type)\nReturn information about the currently connected data source
odbc_error([resource connection_id])\nGet the last error code
odbc_errormsg([resource connection_id])\nGet the last error message
odbc_exec(resource connection_id, string query [, int flags])\nPrepare and execute an SQL statement
odbc_execute(resource result_id [, array parameters_array])\nExecute a prepared statement
odbc_fetch_array(int result [, int rownumber])\nFetch a result row as an associative array
odbc_fetch_into(resource result_id, array result_array, [, int rownumber])\nFetch one result row into an array
odbc_fetch_object(int result [, int rownumber])\nFetch a result row as an object
odbc_fetch_row(resource result_id [, int row_number])\nFetch a row
odbc_field_len(resource result_id, int field_number)\nGet the length (precision) of a column
odbc_field_name(resource result_id, int field_number)\nGet a column name
odbc_field_num(resource result_id, string field_name)\nReturn column number
odbc_field_scale(resource result_id, int field_number)\nGet the scale of a column
odbc_field_type(resource result_id, int field_number)\nGet the datatype of a column
odbc_free_result(resource result_id)\nFree resources associated with a result
odbc_gettypeinfo(resource connection_id [, int data_type])\nReturns a result identifier containing information about data types supported by the data source
odbc_longreadlen(int result_id, int length)\nHandle LONG columns
odbc_next_result(resource result_id)\nChecks if multiple results are avaiable
odbc_num_fields(resource result_id)\nGet number of columns in a result
odbc_num_rows(resource result_id)\nGet number of rows in a result
odbc_pconnect(string DSN, string user, string password [, int cursor_option])\nEstablish a persistent connection to a datasource
odbc_prepare(resource connection_id, string query)\nPrepares a statement for execution
odbc_primarykeys(resource connection_id, string qualifier, string owner, string table)\nReturns a result identifier listing the column names that comprise the primary key for a table
odbc_procedures(resource connection_id [, string qualifier, string owner, string name])\nReturns a result identifier containg the list of procedure names in a datasource
odbc_result(resource result_id, mixed field)\nGet result data
odbc_result_all(resource result_id [, string format])\nPrint result as HTML table
odbc_rollback(resource connection_id)\nRollback a transaction
odbc_setoption(resource conn_id|result_id, int which, int option, int value)\nSets connection or statement options
odbc_statistics(resource connection_id, string qualifier, string owner, string name, int unique, int accuracy)\nReturns a result identifier that contains statistics about a single table and the indexes associated with the table
odbc_tableprivileges(resource connection_id, string qualifier, string owner, string name)\nReturns a result identifier containing a list of tables and the privileges associated with each table
odbc_tables(resource connection_id [, string qualifier, string owner, string name, string table_types])\nCall the SQLTables function
opendir(string path)\nOpen a directory and return a dir_handle
openlog(string ident, int option, int facility)\nOpen connection to system logger
openssl_csr_export(resource csr, string &out [, bool notext=true])\nExports a CSR to file or a var
openssl_csr_export_to_file(resource csr, string outfilename [, bool notext=true])\nExports a CSR to file
openssl_csr_new(array dn, resource &privkey [, array configargs, array extraattribs])\nGenerates a privkey and CSR
openssl_csr_sign(mixed csr, mixed x509, mixed priv_key, long days [, array config_args [, long serial]])\nSigns a cert with another CERT
openssl_error_string(void)\nReturns a description of the last error, and alters the index of the error messages. Returns false when the are no more messages
openssl_open(string data, &string opendata, string ekey, mixed privkey)\nOpens data
openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [, long flags [, long cipher]])\nEncrypts the message in the file named infile with the certificates in recipcerts and output the result to the file named outfile
openssl_pkcs7_verify(string filename, long flags [, string signerscerts [, array cainfo [, string extracerts]]])\nVerifys that the data block is intact, the signer is who they say they are, and returns the CERTs of the signers
openssl_pkey_export(mixed key, &mixed out [, string passphrase [, array config_args]])\nGets an exportable representation of a key into a string or file
openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase, array config_args)\nGets an exportable representation of a key into a file
openssl_pkey_free(int key)\nFrees a key
openssl_pkey_get_private(string key [, string passphrase])\nGets private keys
openssl_pkey_get_public(mixed cert)\nGets public key from X.509 certificate
openssl_pkey_new([array configargs])\nGenerates a new private key
openssl_private_decrypt(string data, string decrypted, mixed key [, int padding])\nDecrypts data with private key
openssl_private_encrypt(string data, string crypted, mixed key [, int padding])\nEncrypts data with private key
openssl_public_decrypt(string data, string crypted, resource key [, int padding])\nDecrypts data with public key
openssl_public_encrypt(string data, string crypted, mixed key [, int padding])\nEncrypts data with public key
openssl_seal(string data, &string sealdata, &array ekeys, array pubkeys)\nSeals data
openssl_sign(string data, &string signature, mixed key)\nSigns data
openssl_verify(string data, string signature, mixed key)\nVerifys data
openssl_x509_check_private_key(mixed cert, mixed key)\nChecks if a private key corresponds to a CERT
openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile])\nChecks the CERT to see if it can be used for the purpose in purpose. cainfo holds information about trusted CAs
openssl_x509_export(mixed x509, string &out [, bool notext = true])\nExports a CERT to file or a var
openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext = true])\nExports a CERT to file or a var
openssl_x509_free(resource x509)\nFrees X.509 certificates
openssl_x509_parse(mixed x509 [, bool shortnames=true])\nReturns an array of the fields/values of the CERT
openssl_x509_read(mixed cert)\nReads X.509 certificates
ora_bind(resource cursor, string php_variable_name, string sql_parameter_name, int length [, int type])\nBind a PHP variable to an Oracle parameter
ora_close(resource cursor)\nClose an Oracle cursor
ora_columnname(resource cursor, int column)\nGet the name of an Oracle result column
ora_columnsize(int cursor, int column)\nReturn the size of the column
ora_columntype(resource cursor, int column)\nGet the type of an Oracle result column
ora_commit(resource connection)\nCommit an Oracle transaction
ora_commitoff(resource connection)\nDisable automatic commit
ora_commiton(resource connection)\nEnable automatic commit
ora_do(resource connection, resource cursor)\nParse and execute a statement and fetch first result row
ora_error(resource cursor_or_connection)\nGet an Oracle error message
ora_errorcode(resource cursor_or_connection)\nGet an Oracle error code
ora_exec(resource cursor)\nExecute a parsed statement
ora_fetch(resource cursor)\nFetch a row of result data from a cursor
ora_fetch_into(resource cursor, array result [, int flags])\nFetch a row into the specified result array
ora_getcolumn(resource cursor, int column)\nGet data from a fetched row
ora_logoff(resource connection)\nClose an Oracle connection
ora_logon(string user, string password)\nOpen an Oracle connection
ora_numcols(resource cursor)\nReturns the numbers of columns in a result
ora_numrows(resource cursor)\nReturns the number of rows in a result
ora_open(resource connection)\nOpen an Oracle cursor
ora_parse(resource cursor, string sql_statement [, int defer])\nParse an Oracle SQL statement
ora_plogon(string user, string password)\nOpen a persistent Oracle connection
ora_rollback(resource connection)\nRoll back an Oracle transaction
ord(string character)\nReturns ASCII value of character
output_add_rewrite_var(string name, string value)\nAdd URL rewriter values
output_reset_rewrite_vars(void)\nReset(clear) URL rewriter values
ovrimos_autocommit(int connection_id, int OnOff)\nToggle autocommit mode  \n There can be problems with pconnections!
ovrimos_close(int connection)\nClose a connection
ovrimos_commit(int connection_id)\nCommit an ovrimos transaction
ovrimos_connect(string host, string db, string user, string password)\nConnect to an Ovrimos database
ovrimos_cursor(int result_id)\nGet cursor name
ovrimos_exec(int connection_id, string query)\nPrepare and execute an SQL statement
ovrimos_execute(int result_id [, array parameters_array])\nExecute a prepared statement
ovrimos_fetch_into(int result_id, array result_array [, string how [, int rownumber]])\nFetch one result row into an array  \n how: 'Next' (default), 'Prev', 'First', 'Last', 'Absolute'
ovrimos_fetch_row(int result_id [, int how [, int row_number]])\nhow: 'Next' (default), 'Prev', 'First', 'Last', 'Absolute'  \n Fetch a row
ovrimos_field_len(int result_id, int field_number)\nGet the length of a column
ovrimos_field_name(int result_id, int field_number)\nGet a column name
ovrimos_field_num(int result_id, string field_name)\nReturn column number
ovrimos_field_type(int result_id, int field_number)\nGet the datatype of a column
ovrimos_free_result(int result_id)\nFree resources associated with a result
ovrimos_longreadlen(int result_id, int length)\nHandle LONG columns
ovrimos_num_fields(int result_id)\nGet number of columns in a result
ovrimos_num_rows(int result_id)\nGet number of rows in a result
ovrimos_prepare(int connection_id, string query)\nPrepares a statement for execution
ovrimos_result(int result_id, mixed field)\nGet result data
ovrimos_result_all(int result_id [, string format])\nPrint result as HTML table
ovrimos_rollback(int connection_id)\nRollback a transaction
ovrimos_setoption(int conn_id|result_id, int which, int option, int value)\nSets connection or statement options
pack(string format, mixed arg1 [, mixed arg2 [, mixed ...]])\nTakes one or more arguments and packs them into a binary string according to the format argument
parse_ini_file(string filename [, bool process_sections])\nParse configuration file
parse_str(string encoded_string [, array result])\nParses GET/POST/COOKIE data and sets global variables
parse_url(string url)\nParse a URL and return its components
passthru(string command [, int &return_value])\nExecute an external program and display raw output
pathinfo(string path)\nReturns information about a certain string
pclose(resource fp)\nClose a file pointer opened by popen()
pcntl_alarm(int seconds)\nSet an alarm clock for delivery of a signal
pcntl_exec(string path [, array args [, array envs]])\nExecutes specified program in current process space as defined by exec(2)
pcntl_fork(void)\nForks the currently running process following the same behavior as the UNIX fork() system call
pcntl_getpriority([int pid [, int process_identifier]])\nGet the priority of any process
pcntl_setpriority(int priority [, int pid [, int process_identifier]])\nChange the priority of any process
pcntl_signal(int signo, callback handle [, bool restart_syscalls])\nAssigns a system signal handler to a PHP function
pcntl_wait(int &status)\nWaits on or returns the status of a forked child as defined by the waitpid() system call
pcntl_waitpid(int pid, int &status, int options)\nWaits on or returns the status of a forked child as defined by the waitpid() system call
pcntl_wexitstatus(int status)\n Returns the status code of a child's exit
pcntl_wifexited(int status)\n Returns true if the child status code represents a successful exit
pcntl_wifsignaled(int status)\n Returns true if the child status code represents a process that was terminated due to a signal
pcntl_wifstopped(int status)\n Returns true if the child status code represents a stopped process (WUNTRACED must have been used with waitpid)
pcntl_wstopsig(int status)\n Returns the number of the signal that caused the process to stop who's status code is passed
pcntl_wtermsig(int status)\n Returns the number of the signal that terminated the process who's status code is passed
pdf_add_annotation(resource pdfdoc, float xll, float yll, float xur, float xur, string title, string text)\nSets annotation (depreciated use pdf_add_note instead)
pdf_add_bookmark(resource pdfdoc, string text [, int parent [, int open]])\nAdds bookmark for current page
pdf_add_launchlink(resource pdfdoc, float llx, float lly, float urx, float ury, string filename)\nAdds link to web resource
pdf_add_locallink(resource pdfdoc, float llx, float lly, float urx, float ury, int page, string dest)\nAdds link to local resource
pdf_add_note(resource pdfdoc, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)\nSets annotation
pdf_add_pdflink(resource pdfdoc, float llx, float lly, float urx, float ury, string filename, int page, string dest)\nAdds link to PDF document
pdf_add_thumbnail(resource pdf, int image);\n* Add an existing image as thumbnail for the current page.
pdf_add_weblink(resource pdfdoc, float llx, float lly, float urx, float ury, string url)\nAdds link to web resource
pdf_arc(resource pdfdoc, float x, float y, float radius, float start, float end)\nDraws an arc
pdf_arcn(resource pdf, float x, float y, float r, float alpha, float beta);\n* Draw a clockwise circular arc from alpha to beta degrees.
pdf_begin_page(resource pdfdoc, float width, float height)\nStarts page
pdf_begin_pattern(resource pdf, float width, float height, float xstep, float ystep, int painttype);\n* Start a new pattern definition.
pdf_begin_template(resource pdf, float width, float height);\n* Start a new template definition.
pdf_circle(resource pdfdoc, float x, float y, float radius)\nDraws a circle
pdf_clip(resource pdfdoc)\nClips to current path
pdf_close(resource pdfdoc)\nCloses the pdf document
pdf_close_image(resource pdf, int pdfimage)\nCloses the PDF image
pdf_close_pdi(resource pdf, int doc);\n* Close all open page handles, and close the input PDF document.
pdf_close_pdi_page(resource pdf, int page);\n* Close the page handle, and free all page-related resources.
pdf_closepath(resource pdfdoc)\nClose path
pdf_closepath_fill_stroke(resource pdfdoc)\nClose, fill and stroke current path
pdf_closepath_stroke(resource pdfdoc)\nClose path and draw line along path
pdf_concat(resource pdf, float a, float b, float c, float d, float e, float f)\nConcatenates a matrix to the current transformation matrix for text and graphics
pdf_continue_text(resource pdfdoc, string text)\nOutput text in next line
pdf_curveto(resource pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3)\nDraws a curve
pdf_delete(resource pdfdoc)\nDeletes the PDF object
pdf_end_page(resource pdfdoc)\nEnds page
pdf_end_pattern(resource pdf);\n* Finish the pattern definition.
pdf_end_template(resource pdf);\n* Finish the template definition.
pdf_endpath(resource pdfdoc)\nEnds current path
pdf_fill(resource pdfdoc)\nFill current path
pdf_fill_stroke(resource pdfdoc)\nFill and stroke current path
pdf_findfont(resource pdfdoc, string fontname, string encoding [, int embed])\nPrepares the font fontname for later use with pdf_setfont()
pdf_get_buffer(resource pdfdoc)\nFetches the full buffer containig the generated PDF data
pdf_get_font(resource pdfdoc)\nGets the current font
pdf_get_fontname(resource pdfdoc)\nGets the current font name
pdf_get_fontsize(resource pdfdoc)\nGets the current font size
pdf_get_image_height(resource pdf, int pdfimage)\nReturns the height of an image
pdf_get_image_width(resource pdf, int pdfimage)\nReturns the width of an image
pdf_get_majorversion()\nReturns the major version number of the PDFlib
pdf_get_minorversion()\nReturns the minor version number of the PDFlib
pdf_get_parameter(resource pdfdoc, string key, mixed modifier)\nGets arbitrary parameters
pdf_get_pdi_parameter(resource pdf, string key, int doc, int page, int index);\n* Get the contents of some PDI document parameter with string type.
pdf_get_pdi_value(resource pdf, string key, int doc, int page, int index);\n* Get the contents of some PDI document parameter with numerical type.
pdf_get_value(resource pdfdoc, string key, float modifier)\nGets arbitrary value
pdf_initgraphics(resource pdf);\n* Reset all implicit color and graphics state parameters to their defaults.
pdf_lineto(resource pdfdoc, float x, float y)\nDraws a line
pdf_makespotcolor(resource pdf, string spotname);\n* Make a named spot color from the current color.
pdf_moveto(resource pdfdoc, float x, float y)\nSets current point
pdf_new()\nCreates a new PDF object
pdf_open([resource filedesc])\nOpens a new pdf document. If filedesc is NULL, document is created in memory. This is the old interface, only for compatibility use pdf_new    \npdf_open_file instead
pdf_open_ccitt(resource pdf, string filename, int width, int height, int bitreverse, int k, int blackls1)\nOpens an image file with raw CCITT G3 or G4 compresed bitmap data
pdf_open_file(resource pdfdoc [, string filename])\nOpens a new PDF document. If filename is NULL, document is created in memory. This is not yet fully supported
pdf_open_gif(resource pdf, string giffile)\nOpens a GIF file and returns an image for placement in a pdf object
pdf_open_image(resource pdf, string type, string source, string data, long length, int width, int height, int components, int bpc, string params)\nOpens an image of the given type and returns an image for placement in a PDF document
pdf_open_image_file(resource pdf, string type, string file [, string stringparam, int intparam])\nOpens an image file of the given type and returns an image for placement in a PDF document
pdf_open_jpeg(resource pdf, string jpegfile)\nOpens a JPEG file and returns an image for placement in a PDF document
pdf_open_memory_image(resource pdf, resource image)\nTakes an GD image and returns an image for placement in a PDF document
pdf_open_pdi(resource pdf, string filename, string stringparam, int intparam);\n* Open an existing PDF document and prepare it for later use.
pdf_open_pdi_page(resource pdf, int doc, int page, string label);\n* Prepare a page for later use with PDF_place_image().
pdf_open_png(resource pdf, string pngfile)\nOpens a PNG file and returns an image for placement in a PDF document
pdf_open_tiff(resource pdf, string tifffile)\nOpens a TIFF file and returns an image for placement in a PDF document
pdf_place_image(resource pdf, int pdfimage, float x, float y, float scale)\nPlaces image in the PDF document
pdf_place_pdi_page(resource pdf, int page, float x, float y, float sx, float sy)\n* Place a PDF page with the lower left corner at (x, y), and scale it.
pdf_rect(resource pdfdoc, float x, float y, float width, float height)\nDraws a rectangle
pdf_restore(resource pdfdoc)\nRestores formerly saved enviroment
pdf_rotate(resource pdfdoc, float angle)\nSets rotation
pdf_save(resource pdfdoc)\nSaves current enviroment
pdf_scale(resource pdfdoc, float x_scale, float y_scale)\nSets scaling
pdf_set_border_color(resource pdfdoc, float red, float green, float blue)\nSets color of box surounded all kinds of annotations and links
pdf_set_border_dash(resource pdfdoc, float black, float white)\nSets the border dash style of all kinds of annotations and links
pdf_set_border_style(resource pdfdoc, string style, float width)\nSets style of box surounding all kinds of annotations and link
pdf_set_char_spacing(resource pdfdoc, float space)\nSets character spacing
pdf_set_duration(resource pdfdoc, float duration)\nSets duration between pages
pdf_set_font(resource pdfdoc, string font, float size, string encoding [, int embed])\nSelect the current font face, size and encoding
pdf_set_horiz_scaling(resource pdfdoc, float scale)\nSets horizontal scaling of text
pdf_set_info(resource pdfdoc, string fieldname, string value)\nFills an info field of the document
pdf_set_info_author(resource pdfdoc, string author)\nFills the author field of the document
pdf_set_info_creator(resource pdfdoc, string creator)\nFills the creator field of the document
pdf_set_info_keywords(resource pdfdoc, string keywords)\nFills the keywords field of the document
pdf_set_info_subject(resource pdfdoc, string subject)\nFills the subject field of the document
pdf_set_info_title(resource pdfdoc, string title)\nFills the title field of the document
pdf_set_leading(resource pdfdoc, float distance)\nSets distance between text lines
pdf_set_parameter(resource pdfdoc, string key, string value)\nSets arbitrary parameters
pdf_set_text_pos(resource pdfdoc, float x, float y)\nSets the position of text for the next pdf_show call
pdf_set_text_rendering(resource pdfdoc, int mode)\nDetermines how text is rendered
pdf_set_text_rise(resource pdfdoc, float value)\nSets the text rise
pdf_set_transition(resource pdfdoc, int transition)\nSets transition between pages
pdf_set_value(resource pdfdoc, string key, float value)\nSets arbitrary value
pdf_set_word_spacing(resource pdfdoc, float space)\nSets spacing between words
pdf_setcolor(resource pdf, string type, string colorspace, float c1 [, float c2 [, float c3 [, float c4]]]);\n* Set the current color space and color.
pdf_setdash(resource pdfdoc, float black, float white)\nSets dash pattern
pdf_setflat(resource pdfdoc, float value)\nSets flatness
pdf_setfont(resource pdfdoc, int font, float fontsize)\nSets the current font in the fiven fontsize
pdf_setgray(resource pdfdoc, float value)\nSets drawing and filling color to gray value
pdf_setgray_fill(resource pdfdoc, float value)\nSets filling color to gray value
pdf_setgray_stroke(resource pdfdoc, float value)\nSets drawing color to gray value
pdf_setlinecap(resource pdfdoc, int value)\nSets linecap parameter
pdf_setlinejoin(resource pdfdoc, int value)\nSets linejoin parameter
pdf_setlinewidth(resource pdfdoc, float width)\nSets line width
pdf_setmatrix(resource pdf, float a, float b, float c, float d, float e, float f)\nExplicitly set the current transformation matrix.
pdf_setmiterlimit(resource pdfdoc, float value)\nSets miter limit
pdf_setpolydash(resource pdfdoc, float darray)\nSets more complicated dash pattern
pdf_setrgbcolor(resource pdfdoc, float red, float green, float blue)\nSets drawing and filling color to RGB color value
pdf_setrgbcolor_fill(resource pdfdoc, float red, float green, float blue)\nSets filling color to RGB color value
pdf_setrgbcolor_stroke(resource pdfdoc, float red, float green, float blue)\nSets drawing color to RGB color value
pdf_show(resource pdfdoc, string text)\nOutput text at current position
pdf_show_boxed(resource pdfdoc, string text, float x_koor, float y_koor, float width, float height, string mode [, string feature])\nOutput text formated in a boxed
pdf_show_xy(resource pdfdoc, string text, float x_koor, float y_koor)\nOutput text at position
pdf_skew(resource pdfdoc, float xangle, float yangle)\nSkew the coordinate system
pdf_stringwidth(resource pdfdoc, string text [, int font, float size])\nReturns width of text in current font
pdf_stroke(resource pdfdoc)\nDraw line along path path
pdf_translate(resource pdfdoc, float x, float y)\nSets origin of coordinate system
pfpro_cleanup()\nShuts down the Payflow Pro library
pfpro_init()\nInitializes the Payflow Pro library
pfpro_process(array parmlist [, string hostaddress [, int port, [, int timeout [, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]])\nPayflow Pro transaction processing using arrays
pfpro_process_raw(string parmlist [, string hostaddress [, int port, [, int timeout [, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]])\nRaw Payflow Pro transaction processing
pfpro_version()\nReturns the version of the Payflow Pro library
pfsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]])\nOpen persistent Internet or Unix domain socket connection
pg_affected_rows(resource result)\nReturns the number of affected tuples
pg_cancel_query(resource connection)\nCancel request
pg_client_encoding([resource connection])\nGet the current client encoding
pg_close([resource connection])\nClose a PostgreSQL connection
pg_connect(string connection_string[, int connect_type] | [string host, string port [, string options [, string tty,]]] string database)\nOpen a PostgreSQL connection
pg_connection_busy(resource connection)\nGet connection is busy or not
pg_connection_reset(resource connection)\nReset connection (reconnect)
pg_connection_status(resource connnection)\nGet connection status
pg_convert(resource db, string table, array values[, int options])\nCheck and convert values for PostgreSQL SQL statement
pg_copy_from(resource connection, string table_name , array rows [, string delimiter [, string null_as]])\nCopy table from array
pg_copy_to(resource connection, string table_name [, string delimiter [, string null_as]])\nCopy table to array
pg_dbname([resource connection])\nGet the database name
pg_delete(resource db, string table, array ids[, int options])\nDelete records has ids (id=>value)
pg_end_copy([resource connection])\nSync with backend. Completes the Copy command
pg_escape_bytea(string data)\nEscape binary for bytea type
pg_escape_string(string data)\nEscape string for text/char type
pg_fetch_all(resource result)\nFetch all rows into array
pg_fetch_array(resource result [, int row [, int result_type]])\nFetch a row as an array
pg_fetch_assoc(resource result [, int row])\nFetch a row as an assoc array
pg_fetch_object(resource result [, string class_name [, NULL|array ctor_params]])\nFetch a row as an object
pg_fetch_result(resource result, [int row_number,] mixed field_name)\nReturns values from a result identifier
pg_fetch_row(resource result [, int row [, int result_type]])\nGet a row as an enumerated array
pg_field_is_null(resource result, [int row,] mixed field_name_or_number)\nTest if a field is NULL
pg_field_name(resource result, int field_number)\nReturns the name of the field
pg_field_num(resource result, string field_name)\nReturns the field number of the named field
pg_field_prtlen(resource result, [int row,] mixed field_name_or_number)\nReturns the printed length
pg_field_size(resource result, int field_number)\nReturns the internal size of the field
pg_field_type(resource result, int field_number)\nReturns the type name for the given field
pg_free_result(resource result)\nFree result memory
pg_get_notify([resource connection[, result_type]])\nGet asynchronous notification
pg_get_pid([resource connection)\nGet backend(server) pid
pg_get_result(resource connection)\nGet asynchronous query result
pg_host([resource connection])\nReturns the host name associated with the connection
pg_insert(resource db, string table, array values[, int options])\nInsert values (filed=>value) to table
pg_last_error([resource connection])\nGet the error message string
pg_last_notice(resource connection)\nReturns the last notice set by the backend
pg_last_oid(resource result)\nReturns the last object identifier
pg_lo_close(resource large_object)\nClose a large object
pg_lo_create([resource connection])\nCreate a large object
pg_lo_export([resource connection, ] int objoid, string filename)\nExport large object direct to filesystem
pg_lo_import([resource connection, ] string filename)\nImport large object direct from filesystem
pg_lo_open([resource connection,] int large_object_oid, string mode)\nOpen a large object and return fd
pg_lo_read(resource large_object [, int len])\nRead a large object
pg_lo_read_all(resource large_object)\nRead a large object and send straight to browser
pg_lo_seek(resource large_object, int offset [, int whence])\nSeeks position of large object
pg_lo_tell(resource large_object)\nReturns current position of large object
pg_lo_unlink([resource connection,] string large_object_oid)\nDelete a large object
pg_lo_write(resource large_object, string buf [, int len])\nWrite a large object
pg_meta_data(resource db, string table)\nGet meta_data
pg_num_fields(resource result)\nReturn the number of fields in the result
pg_num_rows(resource result)\nReturn the number of rows in the result
pg_options([resource connection])\nGet the options associated with the connection
pg_parameter_status([resource connection,] string param_name)\nReturns the value of a server parameter
pg_pconnect(string connection_string | [string host, string port [, string options [, string tty,]]] string database)\nOpen a persistent PostgreSQL connection
pg_ping([resource connection])\nPing database. If connection is bad, try to reconnect.
pg_port([resource connection])\nReturn the port number associated with the connection
pg_put_line([resource connection,] string query)\nSend null-terminated string to backend server
pg_query([resource connection,] string query)\nExecute a query
pg_result_error(resource result)\nGet error message associated with result
pg_result_seek(resource result, int offset)\nSet internal row offset
pg_result_status(resource result[, long result_type])\nGet status of query result
pg_select(resource db, string table, array ids[, int options])\nSelect records that has ids (id=>value)
pg_send_query(resource connection, string qeury)\nSend asynchronous query
pg_set_client_encoding([resource connection,] string encoding)\nSet client encoding
pg_trace(string filename [, string mode [, resource connection]])\nEnable tracing a PostgreSQL connection
pg_tty([resource connection])\nReturn the tty name associated with the connection
pg_unescape_bytea(string data)\nUnescape binary for bytea type
pg_untrace([resource connection])\nDisable tracing of a PostgreSQL connection
pg_update(resource db, string table, array fields, array ids[, int options])\nUpdate table using values (field=>value) and ids (id=>value)
pg_version([resource connection])\nReturns an array with client, protocol and server version (when available)
php_check_syntax(string file_name [, &$error_message])\nCheck the syntax of the specified file.
php_egg_logo_guid(void)\nReturn the special ID used to request the PHP logo in phpinfo screens
php_ini_scanned_files(void)\nReturn comma-separated string of .ini files parsed from the additional ini dir
php_logo_guid(void)\nReturn the special ID used to request the PHP logo in phpinfo screens
php_real_logo_guid(void)\nReturn the special ID used to request the PHP logo in phpinfo screens
php_sapi_name(void)\nReturn the current SAPI module name
php_strip_whitespace(string file_name)\nReturn source with stripped comments and whitespace
php_uname(void)\nReturn information about the system PHP was built on
phpcredits([int flag])\nPrints the list of people who've contributed to the PHP project
phpinfo([int what])\nOutput a page of useful information about PHP and the current request
phpversion([string extension])\nReturn the current PHP version
pi(void)\nReturns an approximation of pi
png2wbmp (string f_org, string f_dest, int d_height, int d_width, int threshold)\nConvert PNG image to WBMP image
popen(string command, string mode)\nExecute a command and open either a read or a write pipe to it
posix_ctermid(void)\nGenerate terminal path name (POSIX.1, 4.7.1)
posix_get_last_error(void)\nRetrieve the error number set by the last posix function which failed.
posix_getcwd(void)\nGet working directory pathname (POSIX.1, 5.2.2)
posix_getegid(void)\nGet the current effective group id (POSIX.1, 4.2.1)
posix_geteuid(void)\nGet the current effective user id (POSIX.1, 4.2.1)
posix_getgid(void)\nGet the current group id (POSIX.1, 4.2.1)
posix_getgrgid(long gid)\n Group database access (POSIX.1, 9.2.1)
posix_getgrnam(string groupname)\nGroup database access (POSIX.1, 9.2.1)
posix_getgroups(void)\nGet supplementary group id's (POSIX.1, 4.2.3)
posix_getlogin(void)\n Get user name (POSIX.1, 4.2.4)
posix_getpgid(void)\nGet the process group id of the specified process (This is not a POSIX function, but a SVR4ism, so we compile conditionally)
posix_getpgrp(void)\nGet current process group id (POSIX.1, 4.3.1)
posix_getpid(void)\nGet the current process id (POSIX.1, 4.1.1)
posix_getppid(void)\nGet the parent process id (POSIX.1, 4.1.1)
posix_getpwnam(string groupname)\n User database access (POSIX.1, 9.2.2)
posix_getpwuid(long uid)\n User database access (POSIX.1, 9.2.2)
posix_getrlimit(void)\nGet system resource consumption limits (This is not a POSIX function, but a BSDism and a SVR4ism. We compile conditionally)
posix_getsid(void)\nGet process group id of session leader (This is not a POSIX function, but a SVR4ism, so be compile conditionally)
posix_getuid(void)\nGet the current user id (POSIX.1, 4.2.1)
posix_isatty(int fd)\nDetermine if filedesc is a tty (POSIX.1, 4.7.1)
posix_kill(int pid, int sig)\nSend a signal to a process (POSIX.1, 3.3.2)
posix_mkfifo(string pathname, int mode)\nMake a FIFO special file (POSIX.1, 5.4.2)
posix_setegid(long uid)\nSet effective group id
posix_seteuid(long uid)\nSet effective user id
posix_setgid(int uid)\nSet group id (POSIX.1, 4.2.2)
posix_setpgid(int pid, int pgid)\nSet process group id for job control (POSIX.1, 4.3.3)
posix_setsid(void)\nCreate session and set process group id (POSIX.1, 4.3.2)
posix_setuid(long uid)\nSet user id (POSIX.1, 4.2.2)
posix_strerror(int errno)\nRetrieve the system error message associated with the given errno.
posix_times(void)\nGet process times (POSIX.1, 4.5.2)
posix_ttyname(int fd)\nDetermine terminal device name (POSIX.1, 4.7.2)
posix_uname(void)\nGet system name (POSIX.1, 4.4.1)
pow(number base, number exponent)\nReturns base raised to the power of exponent. Returns integer result when possible
preg_grep(string regex, array input)\nSearches array and returns entries which match regex
preg_match(string pattern, string subject [, array subpatterns [, int flags [, int offset]]])\nPerform a Perl-style regular expression match
preg_match_all(string pattern, string subject, array subpatterns [, int flags [, int offset]])\nPerform a Perl-style global regular expression match
preg_quote(string str, string delim_char)\nQuote regular expression characters plus an optional character
preg_replace(mixed regex, mixed replace, mixed subject [, int limit])\nPerform Perl-style regular expression replacement.
preg_replace_callback(mixed regex, mixed callback, mixed subject [, int limit])\nPerform Perl-style regular expression replacement using replacement callback.
preg_split(string pattern, string subject [, int limit [, int flags]])\n Split string into an array using a perl-style regular expression as a delimiter
prev(array array_arg)\nMove array argument's internal pointer to the previous element and return it
print_r(mixed var [, bool return])\nPrints out or returns information about the specified variable
printf(string format [, mixed arg1 [, mixed ...]])\nOutput a formatted string
proc_close(resource process)\nclose a process opened by proc_open
proc_get_status(resource process)\nget information about a process opened by proc_open
proc_nice(int priority)\nChange the priority of the current process
proc_open(string command, array descriptorspec, array &pipes [, string cwd [, array env [, array other_options]]])\nRun a process with more control over it's file descriptors
proc_terminate(resource process [, long signal])\nkill a process opened by proc_open
pspell_add_to_personal(int pspell, string word)\nAdds a word to a personal list
pspell_add_to_session(int pspell, string word)\nAdds a word to the current session
pspell_check(int pspell, string word)\nReturns true if word is valid
pspell_clear_session(int pspell)\nClears the current session
pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]])\nCreate a new config to be used later to create a manager
pspell_config_ignore(int conf, int ignore)\nIgnore words <= n chars
pspell_config_mode(int conf, long mode)\nSelect mode for config (PSPELL_FAST, PSPELL_NORMAL or PSPELL_BAD_SPELLERS)
pspell_config_personal(int conf, string personal)\nUse a personal dictionary for this config
pspell_config_repl(int conf, string repl)\nUse a personal dictionary with replacement pairs for this config
pspell_config_runtogether(int conf, bool runtogether)\nConsider run-together words as valid components
pspell_config_save_repl(int conf, bool save)\nSave replacement pairs when personal list is saved for this config
pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]])\nLoad a dictionary
pspell_new_config(int config)\nLoad a dictionary based on the given config
pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]])\nLoad a dictionary with a personal wordlist
pspell_save_wordlist(int pspell)\nSaves the current (personal) wordlist
pspell_store_replacement(int pspell, string misspell, string correct)\nNotify the dictionary of a user-selected replacement
pspell_suggest(int pspell, string word)\nReturns array of suggestions
putenv(string setting)\nSet the value of an environment variable
quoted_printable_decode(string str)\nConvert a quoted-printable string to an 8 bit string
quotemeta(string str)\nQuotes meta characters
rad2deg(float number)\nConverts the radian number to the equivalent number in degrees
rand([int min, int max])\nReturns a random number
range(mixed low, mixed high[, int step])\nCreate an array containing the range of integers or characters from low to high (inclusive)
rawurldecode(string str)\nDecodes URL-encodes string
rawurlencode(string str)\nURL-encodes string
readdir([resource dir_handle])\nRead directory entry from dir_handle
readfile(string filename [, bool use_include_path[, resource context]])\nOutput a file or a URL
readgzfile(string filename [, int use_include_path])\nOutput a .gz-file
readline([string prompt])\n Reads a line
readline_add_history([string prompt])\n Adds a line to the history
readline_clear_history(void)\n Clears the history
readline_completion_function(string funcname)\n Readline completion function?
readline_info([string varname] [, string newvalue])\n Gets/sets various internal readline variables.
readline_list_history(void)\n Lists the history
readline_read_history([string filename] [, int from] [,int to])\n Reads the history
readline_write_history([string filename])\n Writes the history
readlink(string filename)\nReturn the target of a symbolic link
realpath(string path)\nReturn the resolved path
recode_file(string request, resource input, resource output)\nRecode file input into file output according to request
recode_string(string request, string str)\nRecode string str according to request string
RecursiveDirectoryIterator::hasChildren([bool $allow_links = false])\nReturns whether current entry is a directory and not '.' or '..'
RecursiveDirectoryIterator::key()\nReturn path and filename of current dir entry
RecursiveDirectoryIterator::next()\nMove to next entry
RecursiveDirectoryIterator::rewind()\nRewind dir back to the start
Reflection_Class Reflection_Class::getParentClass()\nReturns the class' parent class, or, if none exists, FALSE
Reflection_Class Reflection_Method::getDeclaringClass()\nGet the declaring class
Reflection_Class Reflection_Parameter::getClass()\nReturns this parameters's class hint or NULL if there is none
Reflection_Class Reflection_Property::getDeclaringClass()\nGet the declaring class
Reflection_Class::__construct(mixed argument) throws Exception\nConstructor. Takes a string or an instance as an argument
Reflection_Class[] Reflection_Class::getInterfaces()\nReturns an array of interfaces this class implements
Reflection_Extension::__construct(string name)\nConstructor. Throws an Exception in case the given extension does not exist
Reflection_Function::__construct(string name)\nConstructor. Throws an Exception in case the given function does not exist
Reflection_Function[] Reflection_Extension::getFunctions()\nReturns an array of this extension's fuctions
Reflection_Method Reflection_Class::getConstructor()\nReturns the class' constructor if there is one, NULL otherwise
Reflection_Method Reflection_Class::getMethod(string name)\nReturns the class' method specified by it's name
Reflection_Method::__construct(mixed class, string name)\nConstructor. Throws an Exception in case the given method does not exist
Reflection_Method[] Reflection_Class::getMethods()\nReturns an array of this class' methods
Reflection_Object::__construct(mixed argument) throws Exception\nConstructor. Takes an instance as an argument
Reflection_Parameter::__construct(mixed function, mixed parameter)\nConstructor. Throws an Exception in case the given method does not exist
Reflection_Parameter[] Reflection_Function::getParameters()\nReturns an array of parameter objects for this function
Reflection_Property Reflection_Class::getProperty(string name)\nReturns the class' property specified by it's name
Reflection_Property::__construct(mixed class, string name)\nConstructor. Throws an Exception in case the given property does not exist
Reflection_Property[] Reflection_Class::getProperties()\nReturns an array of this class' properties
register_shutdown_function(string function_name)\nRegister a user-level function to be called on request termination
register_tick_function(string function_name [, mixed arg [, mixed ... ]])\nRegisters a tick callback function
rename(string old_name, string new_name[, resource context])\nRename a file
reset(array array_arg)\nSet array argument's internal pointer to the first element and return it
restore_error_handler(void)\nRestores the previously defined error handler function
restore_exception_handler(void)\nRestores the previously defined exception handler function
restore_include_path()\nRestore the value of the include_path configuration option
rewind(resource fp)\nRewind the position of a file pointer
rewinddir([resource dir_handle])\nRewind dir_handle back to the start
rmdir(string dirname[, resource context])\nRemove a directory
round(float number [, int precision])\nReturns the number rounded to specified precision
rsort(array array_arg [, int sort_flags])\nSort an array in reverse order
rtrim(string str [, string character_mask])\nRemoves trailing whitespace
scandir(string dir [, int sorting_order])\nList files & directories inside the specified path
sem_acquire(resource id)\nAcquires the semaphore with the given id, blocking if necessary
sem_get(int key [, int max_acquire [, int perm [, int auto_release]])\nReturn an id for the semaphore with the given key, and allow max_acquire (default 1) processes to acquire it simultaneously
sem_release(resource id)\nReleases the semaphore with the given id
sem_remove(resource id)\nRemoves semaphore from Unix systems
serialize(mixed variable)\nReturns a string representation of variable (which can later be unserialized)
session_cache_expire([int new_cache_expire])\nReturn the current cache expire. If new_cache_expire is given, the current cache_expire is replaced with new_cache_expire
session_cache_limiter([string new_cache_limiter])\nReturn the current cache limiter. If new_cache_limited is given, the current cache_limiter is replaced with new_cache_limiter
session_decode(string data)\nDeserializes data and reinitializes the variables
session_destroy(void)\nDestroy the current session and all data associated with it
session_encode(void)\nSerializes the current setup and returns the serialized representation
session_get_cookie_params(void)\nReturn the session cookie parameters
session_id([string newid])\nReturn the current session id. If newid is given, the session id is replaced with newid
session_is_registered(string varname)\nChecks if a variable is registered in session
session_module_name([string newname])\nReturn the current module name used for accessing session data. If newname is given, the module name is replaced with newname
session_name([string newname])\nReturn the current session name. If newname is given, the session name is replaced with newname
session_regenerate_id()\nUpdate the current session id with a newly generated one.
session_register(mixed var_names [, mixed ...])\nAdds varname(s) to the list of variables which are freezed at the session end
session_save_path([string newname])\nReturn the current save path passed to module_name. If newname is given, the save path is replaced with newname
session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]])\nSet session cookie parameters
session_set_save_handler(string open, string close, string read, string write, string destroy, string gc)\nSets user-level functions
session_start(void)\nBegin session - reinitializes freezed variables, registers browsers etc
session_unregister(string varname)\nRemoves varname from the list of variables which are freezed at the session end
session_unset(void)\nUnset all registered variables
session_write_close(void)\nWrite session data and end session
set_error_handler(string error_handler [, int error_types])\nSets a user-defined error handler function.\nReturns the previously defined error handler, or false on error
set_exception_handler(string exception_handler)\nSets a user-defined exception handler function.\nReturns the previously defined exception handler, or false on error
set_include_path(string $new_include_path )\nSets the include_path configuration option
set_magic_quotes_runtime(int new_setting)\nSet the current active configuration setting of magic_quotes_runtime and return previous
set_socket_blocking(resource socket, int mode)\nSet blocking/non-blocking mode on a socket
set_time_limit(int seconds)\nSets the maximum time a script can run
setcookie(string name [, string value [, int expires [, string path [, string domain [, bool secure]]]]])\nSend a cookie
setlocale(mixed category, string locale [, string ...])\nSet locale information
setrawcookie(string name [, string value [, int expires [, string path [, string domain [, bool secure]]]]])\nSend a cookie with no url encoding of the value
settype(mixed var, string type)\nSet the type of the variable
sha1(string str [, bool raw_output])\nCalculate the sha1 hash of a string
sha1_file(string filename [, bool raw_output])\nCalculate the sha1 hash of given filename
shell_exec(string cmd)\nExecute command via shell and return complete output as string
shm_attach(int key [, int memsize [, int perm]])\nCreates or open a shared memory segment
shm_detach(int shm_identifier)\nDisconnects from shared memory segment
shm_get_var(int id, int variable_key)\nReturns a variable from shared memory
shm_put_var(int shm_identifier, int variable_key, mixed variable)\nInserts or updates a variable in shared memory
shm_remove(int shm_identifier)\nRemoves shared memory from Unix systems
shm_remove_var(int id, int variable_key)\nRemoves variable from shared memory
shmop_close (int shmid)\ncloses a shared memory segment
shmop_delete (int shmid)\nmark segment for deletion
shmop_open (int key, string flags, int mode, int size)\ngets and attaches a shared memory segment
shmop_read (int shmid, int start, int count)\nreads from a shm segment
shmop_size (int shmid)\nreturns the shm size
shmop_write (int shmid, string data, int offset)\nwrites to a shared memory segment
shuffle(array array_arg)\nRandomly shuffle the contents of an array
similar_text(string str1, string str2 [, float percent])\nCalculates the similarity between two strings
simplexml_import_dom(domNode node [, string class_name])\nGet a simplexml_element object from dom to allow for processing
simplexml_load_file(string filename [, string class_name])\nLoad a filename and return a simplexml_element object to allow for processing
simplexml_load_string(string data [, string class_name])\nLoad a string and return a simplexml_element object to allow for processing
sin(float number)\nReturns the sine of the number in radians
sinh(float number)\nReturns the hyperbolic sine of the number, defined as (exp(number) - exp(-number))/2
sleep(int seconds)\nDelay for a given number of seconds
smfi_addheader(string headerf, string headerv)\nAdds a header to the current message.
smfi_addrcpt(string rcpt)\nAdd a recipient to the message envelope.
smfi_chgheader(string headerf, string headerv)\nChanges a header's value for the current message.
smfi_delrcpt(string rcpt)\nRemoves the named recipient from the current message's envelope.
smfi_getsymval(string macro)\nReturns the value of the given macro or NULL if the macro is not defined.
smfi_replacebody(string body)\nReplaces the body of the current message. If called more than once,  \n subsequent calls result in data being appended to the new body.
smfi_setflags(long flags)\nSets the flags describing the actions the filter may take.
smfi_setreply(string rcode, string xcode, string message)\nDirectly set the SMTP error reply code for this connection.  \n This code will be used on subsequent error replies resulting from actions taken by this filter.
smfi_settimeout(long timeout)\nSets the number of seconds libmilter will wait for an MTA connection before timing out a socket.
snmp_get_quick_print(void)\nReturn the current status of quick_print
snmp_get_valueretrieval()\nReturn the method how the SNMP values will be returned
snmp_read_mib(string filename)\nReads and parses a MIB file into the active MIB tree.
snmp_set_enum_print(int enum_print)\nReturn all values that are enums with their enum value instead of the raw integer
snmp_set_oid_numeric_print(int oid_numeric_print)\nReturn all objects including their respective object id withing the specified one
snmp_set_quick_print(int quick_print)\nReturn all objects including their respective object id withing the specified one
snmp_set_valueretrieval(int method)\nSpecify the method how the SNMP values will be returned
snmp3_get(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])\nFetch the value of a SNMP object
snmp3_getnext(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])\nFetch the value of a SNMP object
snmp3_real_walk(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])\nFetch the value of a SNMP object
snmp3_walk(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])\nFetch the value of a SNMP object
snmpget(string host, string community, string object_id [, int timeout [, int retries]])\n Fetch a SNMP object
snmpgetnext(string host, string community, string object_id [, int timeout [, int retries]])\n Fetch a SNMP object
snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]])\nReturn all objects including their respective object id withing the specified one
snmpset(string host, string community, string object_id, string type, mixed value [, int timeout [, int retries]])\n Set the value of a SNMP object
snmpwalk(string host, string community, string object_id [, int timeout [, int retries]])\n Return all objects under the specified object id
socket_accept(resource socket)\nAccepts a connection on the listening socket fd
socket_bind(resource socket, string addr [, int port])\nBinds an open socket to a listening port, port is only specified in AF_INET family.
socket_clear_error([resource socket])\nClears the error on the socket or the last error code.
socket_close(resource socket)\nCloses a file descriptor
socket_connect(resource socket, string addr [, int port])\nOpens a connection to addr:port on the socket specified by socket
socket_create(int domain, int type, int protocol)\nCreates an endpoint for communication in the domain specified by domain, of type specified by type
socket_create_listen(int port[, int backlog])\nOpens a socket on port to accept connections
socket_create_pair(int domain, int type, int protocol, array &fd)\nCreates a pair of indistinguishable sockets and stores them in fds.
socket_get_option(resource socket, int level, int optname)\nGets socket options for the socket
socket_getpeername(resource socket, string &addr[, int &port])\nQueries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type.
socket_getsockname(resource socket, string &addr[, int &port])\nQueries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type.
socket_last_error([resource socket])\nReturns the last socket error (either the last used or the provided socket resource)
socket_listen(resource socket[, int backlog])\nSets the maximum number of connections allowed to be waited for on the socket specified by fd
socket_read(resource socket, int length [, int type])\nReads a maximum of length bytes from socket
socket_recv(resource socket, string &buf, int len, int flags)\nReceives data from a connected socket
socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port])\nReceives data from a socket, connected or not
socket_select(array &read_fds, array &write_fds, &array except_fds, int tv_sec[, int tv_usec])\nRuns the select() system call on the sets mentioned with a timeout specified by tv_sec and tv_usec
socket_send(resource socket, string buf, int len, int flags)\nSends data to a connected socket
socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port])\nSends a message to a socket, whether it is connected or not
socket_set_block(resource socket)\nSets blocking mode on a socket resource
socket_set_nonblock(resource socket)\nSets nonblocking mode on a socket resource
socket_set_option(resource socket, int level, int optname, int|array optval)\nSets socket options for the socket
socket_shutdown(resource socket[, int how])\nShuts down a socket for receiving, sending, or both.
socket_strerror(int errno)\nReturns a string describing an error
socket_write(resource socket, string buf[, int length])\nWrites the buffer to the socket resource, length is optional
solid_fetch_prev(resource result_id)
sort(array array_arg [, int sort_flags])\nSort an array
soundex(string str)\nCalculate the soundex key of a string
split(string pattern, string string [, int limit])\nSplit string into array by regular expression
spliti(string pattern, string string [, int limit])\nSplit string into array by regular expression case-insensitive
sprintf(string format [, mixed arg1 [, mixed ...]])\nReturn a formatted string
sql_regcase(string string)\nMake regular expression for case insensitive match
sqlite_array_query(resource db, string query [ , int result_type [, bool decode_binary]])\nExecutes a query against a given database and returns an array of arrays.
sqlite_busy_timeout(resource db, int ms)\nSet busy timeout duration. If ms <= 0, all busy handlers are disabled.
sqlite_changes(resource db)\nReturns the number of rows that were changed by the most recent SQL statement.
sqlite_close(resource db)\nCloses an open sqlite database.
sqlite_column(resource result, mixed index_or_name [, bool decode_binary])\nFetches a column from the current row of a result set.
sqlite_create_aggregate(resource db, string funcname, mixed step_func, mixed finalize_func[, long num_args])\nRegisters an aggregate function for queries.
sqlite_create_function(resource db, string funcname, mixed callback[, long num_args])\nRegisters a "regular" function for queries.
sqlite_current(resource result [, int result_type [, bool decode_binary]])\nFetches the current row from a result set as an array.
sqlite_error_string(int error_code)\nReturns the textual description of an error code.
sqlite_escape_string(string item)\nEscapes a string for use as a query parameter.
sqlite_factory(string filename [, int mode [, string &error_message]])\nOpens a SQLite database and creates an object for it. Will create the database if it does not exist.
sqlite_fetch_all(resource result [, int result_type [, bool decode_binary]])\nFetches all rows from a result set as an array of arrays.
sqlite_fetch_array(resource result [, int result_type [, bool decode_binary]])\nFetches the next row from a result set as an array.
sqlite_fetch_column_types(string table_name, resource db)\nReturn an array of column types from a particular table.
sqlite_fetch_object(resource result [, string class_name [, NULL|array ctor_params [, bool decode_binary]]])\nFetches the next row from a result set as an object.
sqlite_fetch_single(resource result [, bool decode_binary])\nFetches the first column of a result set as a string.
sqlite_field_name(resource result, int field_index)\nReturns the name of a particular field of a result set.
sqlite_has_more(resource result)\nReturns whether more rows are available.
sqlite_has_prev(resource result)\n* Returns whether a previous row is available.
sqlite_last_error(resource db)\nReturns the error code of the last error for a database.
sqlite_last_insert_rowid(resource db)\nReturns the rowid of the most recently inserted row.
sqlite_libencoding()\nReturns the encoding (iso8859 or UTF-8) of the linked SQLite library.
sqlite_libversion()\nReturns the version of the linked SQLite library.
sqlite_next(resource result)\nSeek to the next row number of a result set.
sqlite_num_fields(resource result)\nReturns the number of fields in a result set.
sqlite_num_rows(resource result)\nReturns the number of rows in a buffered result set.
sqlite_open(string filename [, int mode [, string &error_message]])\nOpens a SQLite database. Will create the database if it does not exist.
sqlite_popen(string filename [, int mode [, string &error_message]])\nOpens a persistent handle to a SQLite database. Will create the database if it does not exist.
sqlite_prev(resource result)\n* Seek to the previous row number of a result set.
sqlite_query(string query, resource db [, int result_type ])\nExecutes a query against a given database and returns a result handle.
sqlite_rewind(resource result)\nSeek to the first row number of a buffered result set.
sqlite_seek(resource result, int row)\nSeek to a particular row number of a buffered result set.
sqlite_single_query(resource db, string query [, bool first_row_only [, bool decode_binary]])\nExecutes a query and returns either an array for one single column or the value of the first row.
sqlite_udf_decode_binary(string data)\nDecode binary encoding on a string parameter passed to an UDF.
sqlite_udf_encode_binary(string data)\nApply binary encoding (if required) to a string to return from an UDF.
sqlite_unbuffered_query(string query, resource db [ , int result_type ])\nExecutes a query that does not prefetch and buffer all data.
sqrt(float number)\nReturns the square root of the number
srand([int seed])\nSeeds random number generator
sscanf(string str, string format [, string ...])\nImplements an ANSI C compatible sscanf
stat(string filename)\nGive information about a file
static array Reflection::getModifierNames(int modifiers)\nReturns an array of modifier names
static mixed Reflection::export(Reflector r [, bool return])\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Class::export(mixed argument, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Extension::export(string name, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Function::export(string name, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Method::export(mixed class, string name, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Object::export(mixed argument, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Parameter::export(mixed function, mixed parameter, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
static mixed Reflection_Property::export(mixed class, string name, [, bool return]) throws Exception\nExports a reflection object. Returns the output if TRUE is specified for return, printing it otherwise.
str_ireplace(mixed search, mixed replace, mixed subject [, int &replace_count])\nReplaces all occurrences of search in haystack with replace / case-insensitive
str_pad(string input, int pad_length [, string pad_string [, int pad_type]])\nReturns input string padded on the left or right to specified length with pad_string
str_repeat(string input, int mult)\nReturns the input string repeat mult times
str_replace(mixed search, mixed replace, mixed subject [, int &replace_count])\nReplaces all occurrences of search in haystack with replace
str_rot13(string str)\nPerform the rot13 transform on a string
str_shuffle(string str)\nShuffles string. One permutation of all possible is created
str_split(string str [, int split_length])\nConvert a string to an array. If split_length is specified, break the string down into chunks each split_length characters long.
str_word_count(string str, [int format])\nCounts the number of words inside a string. If format of 1 is specified,
strcasecmp(string str1, string str2)\nBinary safe case-insensitive string comparison
strchr(string haystack, string needle)\nAn alias for strstr
strcmp(string str1, string str2)\nBinary safe string comparison
strcoll(string str1, string str2)\nCompares two strings using the current locale
strcspn(string str, string mask [, start [, len]])\nFinds length of initial segment consisting entirely of characters not found in mask. If start or/and length is provide works like strcspn(substr($s,$start,$len),$bad_chars)
stream_bucket_append(resource brigade, resource bucket)\nAppend bucket to brigade
stream_bucket_make_writeable(resource brigade)\nReturn a bucket object from the brigade for operating on
stream_bucket_new(resource stream, string buffer)\nCreate a new bucket for use on the current stream
stream_bucket_prepend(resource brigade, resource bucket)\nPrepend bucket to brigade
stream_context_create([array options])\nCreate a file context and optionally set parameters
stream_context_get_options(resource context|resource stream)\nRetrieve options for a stream/wrapper/context
stream_context_set_option(resource context|resource stream, string wrappername, string optionname, mixed value)\nSet an option for a wrapper
stream_context_set_params(resource context|resource stream, array options)\nSet parameters for a file context
stream_copy_to_stream(resource source, resource dest [, long maxlen ])\nReads up to maxlen bytes from source stream and writes them to dest stream.
stream_filter_append(resource stream, string filtername[, int read_write[, string filterparams]])\nAppend a filter to a stream
stream_filter_prepend(resource stream, string filtername[, int read_write[, string filterparams]])\nPrepend a filter to a stream
stream_filter_register(string filtername, string classname)\nRegisters a custom filter handler class
stream_get_contents(resource source [, long maxlen ])\nReads all remaining bytes (or up to maxlen bytes) from a stream and returns them as a string.
stream_get_filters(void)\nReturns a list of registered filters
stream_get_line(resource stream, int maxlen, string ending)\nRead up to maxlen bytes from a stream or until the ending string is found
stream_get_meta_data(resource fp)\nRetrieves header/meta data from streams/file pointers
stream_get_transports()\nRetrieves list of registered socket transports
stream_get_wrappers()\nRetrieves list of registered stream wrappers
stream_select(array &read_streams, array &write_streams, array &except_streams, int tv_sec[, int tv_usec])\nRuns the select() system call on the sets of streams with a timeout specified by tv_sec and tv_usec
stream_set_blocking(resource socket, int mode)\nSet blocking/non-blocking mode on a socket or stream
stream_set_timeout(resource stream, int seconds, int microseconds)\nSet timeout on stream read to seconds    \nmicroseonds
stream_set_write_buffer(resource fp, int buffer)\nSet file write buffer
stream_socket_accept(resource serverstream, [ double timeout, string &peername ])\nAccept a client connection from a server socket
stream_socket_client(string remoteaddress [, long &errcode, string &errstring, double timeout, long flags, resource context])\nOpen a client connection to a remote address
stream_socket_get_name(resource stream, bool want_peer)\nReturns either the locally bound or remote name for a socket stream
stream_socket_recvfrom(resource stream, long amount [, long flags [, string &remote_addr]])\nReceives data from a socket stream
stream_socket_sendto(resouce stream, string data [, long flags [, string target_addr]])\nSend data to a socket stream.\nIf target_addr is specified it must be in dotted quad (or [ipv6]) format
stream_socket_server(string localaddress [, long &errcode, string &errstring, long flags, resource context])\nCreate a server socket bound to localaddress
stream_wrapper_register(string protocol, string classname)\nRegisters a custom URL protocol handler class
strftime(string format [, int timestamp])\nFormat a local time/date according to locale settings
string Reflection_Class::__toString()\nReturns a string representation
strip_tags(string str [, string allowable_tags])\nStrips HTML and PHP tags from a string
stripcslashes(string str)\nStrips backslashes from a string. Uses C-style conventions
stripos(string haystack, string needle [, int offset])\nFinds position of first occurrence of a string within another, case insensitive
stripslashes(string str)\nStrips backslashes from a string
stristr(string haystack, string needle)\nFinds first occurrence of a string within another, case insensitive
strlen(string str)\nGet string length
strnatcasecmp(string s1, string s2)\nReturns the result of case-insensitive string comparison using 'natural' algorithm
strnatcmp(string s1, string s2)\nReturns the result of string comparison using 'natural' algorithm
strncasecmp(string str1, string str2, int len)\nBinary safe string comparison
strncmp(string str1, string str2, int len)\nBinary safe string comparison
strpbrk(string haystack, string char_list)\nSearch a string for any of a set of characters
strpos(string haystack, string needle [, int offset])\nFinds position of first occurrence of a string within another
strrchr(string haystack, string needle)\nFinds the last occurrence of a character in a string within another
strrev(string str)\nReverse a string
strripos(string haystack, string needle [, int offset])\nFinds position of last occurrence of a string within another string
strrpos(string haystack, string needle [, int offset])\nFinds position of last occurrence of a string within another string
strspn(string str, string mask [, start [, len]])\nFinds length of initial segment consisting entirely of characters found in mask. If start or/and length is provided works like strspn(substr($s,$start,$len),$good_chars)
strstr(string haystack, string needle)\nFinds first occurrence of a string within another
strtok([string str,] string token)\nTokenize a string
strtolower(string str)\nMakes a string lowercase
strtotime(string time, int now)\nConvert string representation of date and time to a timestamp
strtoupper(string str)\nMakes a string uppercase
strtr(string str, string from, string to)\nTranslates characters in str using given translation tables
strval(mixed var)\nGet the string value of a variable
substr(string str, int start [, int length])\nReturns part of a string
substr_compare(string main_str, string str, int offset [, int length [, bool case_sensitivity]])\nBinary safe optionally case insensitive comparison of 2 strings from an offset, up to length characters
substr_count(string haystack, string needle)\nReturns the number of times a substring occurs in the string
substr_replace(mixed str, mixed repl, mixed start [, mixed length])\nReplaces part of a string with another string
swfaction_init(string)\nReturns a new SWFAction object, compiling the given script
swfbitmap_getHeight(void)\nReturns the height of this bitmap
swfbitmap_getWidth(void)\nReturns the width of this bitmap
swfbitmap_init(mixed file [, mixed maskfile])\nReturns a new SWFBitmap object from jpg (with optional mask) or dbl file
swfbutton_addAction(object SWFAction, int flags)\nSets the action to perform when conditions described in flags is met
swfbutton_addASound(SWFSound sound, int flags)\nassociates a sound with a button transition
swfbutton_addShape(object SWFCharacter, int flags)\nSets the character to display for the condition described in flags
swfbutton_init(void)\nReturns a new SWFButton object
swfbutton_keypress(string str)\nReturns the action flag for keyPress(char)
swfbutton_setAction(object SWFAction)\nSets the action to perform when button is pressed
swfbutton_setDown(object SWFCharacter)\nSets the character for this button's down state
swfbutton_setHit(object SWFCharacter)\nSets the character for this button's hit test state
swfbutton_setMenu(int flag)\nenable track as menu button behaviour
swfbutton_setOver(object SWFCharacter)\nSets the character for this button's over state
swfbutton_setUp(object SWFCharacter)\nSets the character for this button's up state
swfdisplayitem_addAction(object SWFAction, int flags)\nAdds this SWFAction to the given SWFSprite instance
swfdisplayitem_addColor(int r, int g, int b [, int a])\nSets the add color part of this SWFDisplayItem's CXform to (r, g, b [, a]), a defaults to 0
swfdisplayitem_endMask()\nanother way of defining a MASK layer
swfdisplayitem_move(float dx, float dy)\nDisplaces this SWFDisplayItem by (dx, dy) in movie coordinates
swfdisplayitem_moveTo(int x, int y)\nMoves this SWFDisplayItem to movie coordinates (x, y)
swfdisplayitem_multColor(float r, float g, float b [, float a])\nSets the multiply color part of this SWFDisplayItem's CXform to (r, g, b [, a]), a defaults to 1.0
swfdisplayitem_rotate(float degrees)\nRotates this SWFDisplayItem the given (clockwise) degrees from its current orientation
swfdisplayitem_rotateTo(float degrees)\nRotates this SWFDisplayItem the given (clockwise) degrees from its original orientation
swfdisplayitem_scale(float xScale, float yScale)\nMultiplies this SWFDisplayItem's current x scale by xScale, its y scale by yScale
swfdisplayitem_scaleTo(float xScale [, float yScale])\nScales this SWFDisplayItem by xScale in the x direction, yScale in the y, or both to xScale if only one arg
swfdisplayitem_setDepth(int depth)\nSets this SWFDisplayItem's z-depth to depth.\nItems with higher depth values are drawn on top of those with lower values
swfdisplayitem_setMaskLevel(int level)\ndefines a MASK layer at level
swfdisplayitem_setMatrix(float a, float b, float c, float d, float x, float y)\nSets the item's transform matrix
swfdisplayitem_setName(string name)\nSets this SWFDisplayItem's name to name
swfdisplayitem_setRatio(float ratio)\nSets this SWFDisplayItem's ratio to ratio.\nObviously only does anything if displayitem was created from an SWFMorph
swfdisplayitem_skewX(float xSkew)\nAdds xSkew to this SWFDisplayItem's x skew value
swfdisplayitem_skewXTo(float xSkew)\nSets this SWFDisplayItem's x skew value to xSkew
swfdisplayitem_skewY(float ySkew)\nAdds ySkew to this SWFDisplayItem's y skew value
swfdisplayitem_skewYTo(float ySkew)\nSets this SWFDisplayItem's y skew value to ySkew
swffill_init(void)\nReturns a new SWFFill object
swffill_moveTo(float x, float y)\nMoves this SWFFill to shape coordinates (x,y)
swffill_rotateTo(float degrees)\nRotates this SWFFill the given (clockwise) degrees from its original orientation
swffill_scaleTo(float xScale [, float yScale])\nScales this SWFFill by xScale in the x direction, yScale in the y, or both to xScale if only one arg
swffill_skewXTo(float xSkew)\nSets this SWFFill's x skew value to xSkew
swffill_skewYTo(float ySkew)\nSets this SWFFill's y skew value to ySkew
swffont_addChars(string)\nadds characters to a font required within textfields
swffont_getAscent(void)\nReturns the ascent of the font, or 0 if not available
swffont_getDescent(void)\nReturns the descent of the font, or 0 if not available
swffont_getLeading(void)\nReturns the leading of the font, or 0 if not available
swffont_getShape(code)\nReturns the glyph shape of a char as a text string
swffont_getUTF8Width(string)\nCalculates the width of the given string in this font at full height
swffont_getWideWidth(string)\nCalculates the width of the given string in this font at full height
swffont_getWidth(string str)\nCalculates the width of the given string in this font at full height
swffont_init(string filename)\nReturns a new SWFFont object from given file
swffontchar_addChars(string)\nadds characters to a font for exporting font
swfgradient_addEntry(float ratio, int r, int g, int b [, int a])\nAdds given entry to the gradient
swfgradient_init(void)\nReturns a new SWFGradient object
swfmorph_getShape1(void)\nReturn's this SWFMorph's start shape object
swfmorph_getShape2(void)\nReturn's this SWFMorph's start shape object
swfmorph_init(void)\nReturns a new SWFMorph object
swfmovie_add(object SWFBlock)
swfmovie_init(int version)\n Creates swfmovie object according to the passed version
swfmovie_labelframe(string label)\nLabels frame
swfmovie_nextframe(void)
swfmovie_output([int compression])
swfmovie_save(mixed where [, int compression])\nSaves the movie. 'where' can be stream and the movie will be saved there otherwise it is treated as string and written in file with that name
swfmovie_saveToFile(stream x [, int compression])
swfmovie_setBackground(int r, int g, int b)\nSets background color (r,g,b)
swfmovie_setDimension(float x, float y)\nSets movie dimension
swfmovie_setFrames(int frames)\nSets number of frames
swfmovie_setRate(float rate)\nSets movie rate
swfmovie_streamMp3(mixed file)\nSets sound stream of the SWF movie. The parameter can be stream or string.
swfshape_drawarc(float r, float startAngle, float endAngle)\nDraws an arc of radius r centered at the current location, from angle startAngle to angle endAngle measured counterclockwise from 12 o'clock
swfshape_drawcircle(float r)\nDraws a circle of radius r centered at the current location, in a counter-clockwise fashion
swfshape_drawcubic(float bx, float by, float cx, float cy, float dx, float dy)\nDraws a cubic bezier curve using the current position and the three given points as control points
swfshape_drawglyph(SWFFont font, string character [, int size])\nDraws the first character in the given string into the shape using the glyph definition from the given font
swfshape_drawline(float dx, float dy)\nDraws a line from the current pen position (x, y) to the point (x+dx, y+dy) in the current line style
swfshape_drawlineto(float x, float y)\nDraws a line from the current pen position to shape coordinates (x, y) in the current line style
swfshape_init(void)\nReturns a new SWFShape object
swfshape_movepen(float x, float y)\nMoves the pen from its current location by vector (x, y)
swfshape_movepento(float x, float y)\nMoves the pen to shape coordinates (x, y)
swfshape_setline(int width, int r, int g, int b [, int a])\nSets the current line style for this SWFShape
swfsound_init(string filename, int flags)\nReturns a new SWFSound object from given file
swfsprite_add(object SWFCharacter)\nAdds the character to the sprite, returns a displayitem object
swfsprite_init(void)\nReturns a new SWFSprite object
swfsprite_labelFrame(string label)\nLabels frame
swfsprite_nextFrame(void)\nMoves the sprite to the next frame
swfsprite_remove(object SWFDisplayItem)\nRemove the named character from the sprite's display list
swfsprite_setFrames(int frames)\nSets the number of frames in this SWFSprite
swftext_addString(string text)\nWrites the given text into this SWFText object at the current pen position, using the current font, height, spacing, and color
swftext_addUTF8String(string text)\nWrites the given text into this SWFText object at the current pen position,  \n using the current font, height, spacing, and color
swftext_addWideString(string text)\nWrites the given text into this SWFText object at the current pen position,  \n using the current font, height, spacing, and color
swftext_getAscent(void)\nReturns the ascent of the current font at its current size, or 0 if not available
swftext_getDescent(void)\nReturns the descent of the current font at its current size, or 0 if not available
swftext_getLeading(void)\nReturns the leading of the current font at its current size, or 0 if not available
swftext_getUTF8Width(string)\ncalculates the width of the given string in this text objects current font and size
swftext_getWideWidth(string)\ncalculates the width of the given string in this text objects current font and size
swftext_getWidth(string str)\nCalculates the width of the given string in this text objects current font and size
swftext_init(void)\nReturns new SWFText object
swftext_moveTo(float x, float y)\nMoves this SWFText object's current pen position to (x, y) in text coordinates
swftext_setColor(int r, int g, int b [, int a])\nSets this SWFText object's current color to the given color
swftext_setFont(object font)\nSets this SWFText object's current font to given font
swftext_setHeight(float height)\nSets this SWFText object's current height to given height
swftext_setSpacing(float spacing)\nSets this SWFText object's current letterspacing to given spacing
swftextfield_addChars(string)\nadds characters to a font that will be available within a textfield
swftextfield_addString(string str)\nAdds the given string to this textfield
swftextfield_align(int alignment)\nSets the alignment of this textfield
swftextfield_init([int flags])\nReturns a new SWFTextField object
swftextfield_setBounds(float width, float height)\nSets the width and height of this textfield
swftextfield_setColor(int r, int g, int b [, int a])\nSets the color of this textfield
swftextfield_setFont(object font)\nSets the font for this textfield
swftextfield_setHeight(float height)\nSets the font height of this textfield
swftextfield_setIndentation(float indentation)\nSets the indentation of the first line of this textfield
swftextfield_setLeftMargin(float margin)\nSets the left margin of this textfield
swftextfield_setLineSpacing(float space)\nSets the line spacing of this textfield
swftextfield_setMargins(float left, float right)\nSets both margins of this textfield
swftextfield_setName(string var_name)\nSets the variable name of this textfield
swftextfield_setPadding(float padding)\nSets the padding of this textfield
swftextfield_setRightMargin(float margin)\nSets the right margin of this textfield
sybase_affected_rows([int link_id])\nGet number of affected rows in last query
sybase_close([int link_id])\nClose Sybase connection
sybase_connect([string host [, string user [, string password [, string charset [, string appname]]]]])\nOpen Sybase server connection
sybase_data_seek(int result, int offset)\nMove internal row pointer
sybase_deadlock_retry_count(int retry_count)\nSets deadlock retry count
sybase_fetch_array(int result)\nFetch row as array
sybase_fetch_assoc(int result)\nFetch row as array without numberic indices
sybase_fetch_field(int result [, int offset])\nGet field information
sybase_fetch_object(int result [, mixed object])\nFetch row as object
sybase_fetch_row(int result)\nGet row as enumerated array
sybase_field_seek(int result, int offset)\nSet field offset
sybase_free_result(int result)\nFree result memory
sybase_get_last_message(void)\nReturns the last message from server (over min_message_severity)
sybase_min_client_severity(int severity)\nSets minimum client severity
sybase_min_error_severity(int severity)\nSets the minimum error severity
sybase_min_message_severity(int severity)\nSets the minimum message severity
sybase_min_server_severity(int severity)\nSets minimum server severity
sybase_num_fields(int result)\nGet number of fields in result
sybase_num_rows(int result)\nGet number of rows in result
sybase_pconnect([string host [, string user [, string password [, string charset [, string appname]]]]])\nOpen persistent Sybase connection
sybase_query(string query [, int link_id])\nSend Sybase query
sybase_result(int result, int row, mixed field)\nGet result data
sybase_select_db(string database [, int link_id])\nSelect Sybase database
sybase_set_message_handler(mixed error_func [, resource connection])\nSet the error handler, to be called when a server message is raised.    \nIf error_func is NULL the handler will be deleted
sybase_unbuffered_query(string query [, int link_id])\nSend Sybase query
symlink(string target, string link)\nCreate a symbolic link
syslog(int priority, string message)\nGenerate a system log message
system(string command [, int &return_value])\nExecute an external program and display output
tan(float number)\nReturns the tangent of the number in radians
tanh(float number)\nReturns the hyperbolic tangent of the number, defined as sinh(number)/cosh(number)
tempnam(string dir, string prefix)\nCreate a unique filename in a directory
textdomain(string domain)\nSet the textdomain to "domain". Returns the current domain
tidy_access_count()\nReturns the Number of Tidy accessibility warnings encountered for specified document.
tidy_clean_repair()\nExecute configured cleanup and repair operations on parsed markup
tidy_config_count()\nReturns the Number of Tidy configuration errors encountered for specified document.
tidy_diagnose()\nRun configured diagnostics on parsed and repaired markup.
tidy_error_count()\nReturns the Number of Tidy errors encountered for specified document.
tidy_get_body(resource tidy)\nReturns a TidyNode Object starting from the <BODY> tag of the tidy parse tree
tidy_get_config()\nGet current Tidy configuarion
tidy_get_error_buffer([boolean detailed])\nReturn warnings and errors which occured parsing the specified document
tidy_get_head()\nReturns a TidyNode Object starting from the <HEAD> tag of the tidy parse tree
tidy_get_html()\nReturns a TidyNode Object starting from the <HTML> tag of the tidy parse tree
tidy_get_html_ver()\nGet the Detected HTML version for the specified document.
tidy_get_output()\nReturn a string representing the parsed tidy markup
tidy_get_release()\nGet release date (version) for Tidy library
tidy_get_root()\nReturns a TidyNode Object representing the root of the tidy parse tree
tidy_get_status()\nGet status of specfied document.
tidy_getopt(string option)\nReturns the value of the specified configuration option for the tidy document.
tidy_is_xhtml()\nIndicates if the document is a generic (non HTML/XHTML) XML document.
tidy_node::has_children()\nReturns true if this node has children
tidy_node::has_siblings()\nReturns true if this node has siblings
tidy_node::is_asp()\nReturns true if this node is ASP
tidy_node::is_comment()\nReturns true if this node represents a comment
tidy_node::is_html()\nReturns true if this node is part of a HTML document
tidy_node::is_jste()\nReturns true if this node is JSTE
tidy_node::is_php()\nReturns true if this node is PHP
tidy_node::is_text()\nReturns true if this node represents text (no markup)
tidy_node::is_xhtml()\nReturns true if this node is part of a XHTML document
tidy_node::is_xml()\nReturns true if this node is part of a XML document
tidy_node::tidy_node()\nConstructor.
tidy_parse_file(string file [, mixed config_options [, string encoding [, bool use_include_path]]])\nParse markup in file or URI
tidy_parse_string(string input [, mixed config_options [, string encoding]])\nParse a document stored in a string
tidy_repair_file(string filename [, mixed config_file [, string encoding [, bool use_include_path]]])\nRepair a file using an optionally provided configuration file
tidy_repair_string(string data [, mixed config_file [, string encoding]])\nRepair a string using an optionally provided configuration file
tidy_warning_count()\nReturns the Number of Tidy warnings encountered for specified document.
time(void)\nReturn current UNIX timestamp
time_nanosleep(long seconds, long nanoseconds)\nDelay for a number of seconds and nano seconds
tmpfile(void)\nCreate a temporary file that will be deleted automatically after use
token_get_all(string source)
touch(string filename [, int time [, int atime]])\nSet modification time of file
trigger_error(string messsage [, int error_type])\nGenerates a user-level error/warning/notice message
trim(string str [, string character_mask])\nStrips whitespace from the beginning and end of a string
uasort(array array_arg, string cmp_function)\nSort an array with a user-defined comparison function and maintain index association
ucfirst(string str)\nMakes a string's first character uppercase
ucwords(string str)\nUppercase the first character of every word in a string
udm_add_search_limit(int agent, int var, string val)\nAdd mnoGoSearch search restrictions
udm_alloc_agent(string dbaddr [, string dbmode])\nAllocate mnoGoSearch session
udm_alloc_agent_array(array dbaddr)\nAllocate mnoGoSearch session
udm_api_version()\nGet mnoGoSearch API version
udm_cat_list(int agent, string category)\nGet mnoGoSearch categories list with the same root
udm_cat_path(int agent, string category)\nGet mnoGoSearch categories path from the root to the given catgory
udm_check_charset(int agent, string charset)\nCheck if the given charset is known to mnogosearch
udm_check_stored(int agent, int link, string doc_id)\nOpen connection to stored
udm_clear_search_limits(int agent)\nClear all mnoGoSearch search restrictions
udm_close_stored(int agent, int link)\nOpen connection to stored
udm_crc32(int agent, string str)\nReturn CRC32 checksum of gived string
udm_errno(int agent)\nGet mnoGoSearch error number
udm_error(int agent)\nGet mnoGoSearch error message
udm_find(int agent, string query)\nPerform search
udm_free_agent(int agent)\nFree mnoGoSearch session
udm_free_ispell_data(int agent)\nFree memory allocated for ispell data
udm_free_res(int res)\nmnoGoSearch free result
udm_get_doc_count(int agent)\nGet total number of documents in database
udm_get_res_field(int res, int row, int field)\nFetch mnoGoSearch result field
udm_get_res_field_ex(int res, int row, string field)\nFetch mnoGoSearch result field
udm_get_res_param(int res, int param)\nGet mnoGoSearch result parameters
udm_hash32(int agent, string str)\nReturn Hash32 checksum of gived string
udm_load_ispell_data(int agent, int var, string val1, [string charset], string val2, int flag)\nLoad ispell data
udm_make_excerpt(int agent, int res, int row)\nPerform search
udm_open_stored(int agent, string storedaddr)\nOpen connection to stored
udm_parse_query_string(int agent, string str)\nParses query string, initialises variables and search limits taken from it
udm_set_agent_param(int agent, int var, string val)\nSet mnoGoSearch agent session parameters
udm_set_agent_param_ex(int agent, string var, string val)\nSet mnoGoSearch agent session parameters extended
uksort(array array_arg, string cmp_function)\nSort an array by keys using a user-defined comparison function
umask([int mask])\nReturn or change the umask
uniqid([string prefix , bool more_entropy])\nGenerates a unique ID
unixtojd([int timestamp])\nConvert UNIX timestamp to Julian Day
unlink(string filename[, context context])\nDelete a file
unpack(string format, string input)\nUnpack binary string into named array elements according to format argument
unregister_tick_function(string function_name)\nUnregisters a tick callback function
unserialize(string variable_representation)\nTakes a string representation of variable and recreates it
unset( mixed var [, mixed var [, ...]] ) destroys the specified variables
urldecode(string str)\nDecodes URL-encoded string
urlencode(string str)\nURL-encodes string
usleep(int micro_seconds)\nDelay for a given number of micro seconds
usort(array array_arg, string cmp_function)\nSort an array by values using a user-defined comparison function
utf8_decode(string data)\n Converts a UTF-8 encoded string to ISO-8859-1
utf8_encode(string data)\n Encodes an ISO-8859-1 string to UTF-8
uudecode(string data)\ndecode a uuencoded string
uuencode(string data)\n uuencode a string
var_dump(mixed var)\nDumps a string representation of variable to output
var_export(mixed var [, bool return])\nOutputs or returns a string representation of a variable
variant_abs(mixed left)\nReturns the absolute value of a variant
variant_add(mixed left, mixed right)\n"Adds" two variant values together and returns the result
variant_and(mixed left, mixed right)\nperforms a bitwise AND operation between two variants and returns the result
variant_cast(object variant, int type)\nConvert a variant into a new variant object of another type
variant_cat(mixed left, mixed right)\nconcatenates two variant values together and returns the result
variant_cmp(mixed left, mixed right [, int lcid [, int flags]])\nCompares two variants
variant_date_from_timestamp(int timestamp)\nReturns a variant date representation of a unix timestamp
variant_date_to_timestamp(object variant)\nConverts a variant date/time value to unix timestamp
variant_div(mixed left, mixed right)\nReturns the result from dividing two variants
variant_eqv(mixed left, mixed right)\nPerforms a bitwise equivalence on two variants
variant_fix(mixed left)\nReturns the ? of a variant
variant_get_type(object variant)\nReturns the VT_XXX type code for a variant
variant_idiv(mixed left, mixed right)\nConverts variants to operands and then returns the result from dividing them
variant_imp(mixed left, mixed right)\nPerforms a bitwise implication on two variants
variant_index_get(object variant, mixed index1 [, mixed index2 [, ...]])\nGet the value of a multi dimensional array property
variant_int(mixed left)\nReturns the integer portion of a variant
variant_mod(mixed left, mixed right)\nDivides two variants and returns only the remainder
variant_mul(mixed left, mixed right)\nmultiplies the values of the two variants and returns the result
variant_neg(mixed left)\nPerforms logical negation on a variant
variant_not(mixed left)\nPerforms bitwise not negation on a variant
variant_or(mixed left, mixed right)\nPerforms a logical disjunction on two variants
variant_pow(mixed left, mixed right)\nReturns the result of performing the power function with two variants
variant_round(mixed left, int decimals)\nRounds a variant to the specified number of decimal places
variant_set(object variant, mixed value)\nAssigns a new value for a variant object (like "set" in VB)
variant_set_type(object variant, int type)\nConvert a variant into another type.\nVariant is modified "in-place"
variant_sub(mixed left, mixed right)\nsubjects the value of the right variant from the left variant value and returns the result
variant_xor(mixed left, mixed right)\nPerforms a logical exclusion on two variants
version_compare(string ver1, string ver2 [, string oper])\nCompares two "PHP-standardized" version number strings
vfprintf(resource stream, string format, array args)\nOutput a formatted string into a stream
virtual(string filename)\nPerform an Apache sub-request
void Reflection_Property::setValue(stdclass object, mixed value)\nSets this property's value
vprintf(string format, array args)\nOutput a formatted string
vsprintf(string format, array args)\nReturn a formatted string
wddx_add_vars(int packet_id,\nmixed var_names [, mixed ...])\nSerializes given variables and adds them to packet given by packet_id
wddx_deserialize(mixed packet)\n Deserializes given packet and returns a PHP value
wddx_packet_end(int packet_id)\nEnds specified WDDX packet and returns the string containing the packet
wddx_packet_start([string comment])\nStarts a WDDX packet with optional comment and returns the packet id
wddx_serialize_value(mixed var [, string comment])\nCreates a new packet and serializes the given value
wddx_serialize_vars(mixed var_name [, mixed ...])\nCreates a new packet and serializes given variables into a struct
wordwrap(string str [, int width [, string break [, boolean cut]]])\nWraps buffer to selected number of characters using string break char
xml_error_string(int code)\nGet XML parser error string
xml_get_current_byte_index(resource parser)\n Get current byte index for an XML parser
xml_get_current_column_number(resource parser)\nGet current column number for an XML parser
xml_get_current_line_number(resource parser)\n Get current line number for an XML parser
xml_get_error_code(resource parser)\n Get XML parser error code
xml_parse(resource parser, string data [, int isFinal])\n Start parsing an XML document
xml_parse_into_struct(resource parser, string data, array &struct, array &index)\n Parsing a XML document
xml_parser_create([string encoding])\n Create an XML parser
xml_parser_create_ns([string encoding [, string sep]])\n Create an XML parser
xml_parser_free(resource parser)\n Free an XML parser
xml_parser_get_option(resource parser, int option)\n Get options from an XML parser
xml_parser_set_option(resource parser, int option, mixed value)\n Set options in an XML parser
xml_set_character_data_handler(resource parser, string hdl)\n Set up character data handler
xml_set_default_handler(resource parser, string hdl)\n Set up default handler
xml_set_element_handler(resource parser, string shdl, string ehdl)\n Set up start and end element handlers
xml_set_end_namespace_decl_handler(resource parser, string hdl)\n Set up character data handler
xml_set_external_entity_ref_handler(resource parser, string hdl)\n Set up external entity reference handler
xml_set_notation_decl_handler(resource parser, string hdl)\n Set up notation declaration handler
xml_set_object(resource parser, object &obj)\n Set up object which should be used for callbacks
xml_set_processing_instruction_handler(resource parser, string hdl)\n Set up processing instruction (PI) handler
xml_set_start_namespace_decl_handler(resource parser, string hdl)\n Set up character data handler
xml_set_unparsed_entity_decl_handler(resource parser, string hdl)\n Set up unparsed entity declaration handler
xmlrpc_decode(string xml [, string encoding])\nDecodes XML into native PHP types
xmlrpc_decode_request(string xml, string& method [, string encoding])\nDecodes XML into native PHP types
xmlrpc_encode(mixed value)\nGenerates XML for a PHP value
xmlrpc_encode_request(string method, mixed params)\nGenerates XML for a method request
xmlrpc_get_type(mixed value)\nGets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings
xmlrpc_is_fault(array)\nDetermines if an array value represents an XMLRPC fault.
xmlrpc_parse_method_descriptions(string xml)\nDecodes XML into a list of method descriptions
xmlrpc_server_add_introspection_data(resource server, array desc)\nAdds introspection documentation
xmlrpc_server_call_method(resource server, string xml, mixed user_data [, array output_options])\nParses XML requests and call methods
xmlrpc_server_create(void)\nCreates an xmlrpc server
xmlrpc_server_destroy(resource server)\nDestroys server resources
xmlrpc_server_register_introspection_callback(resource server, string function)\nRegister a PHP function to generate documentation
xmlrpc_server_register_method(resource server, string method_name, string function)\nRegister a PHP function to handle method matching method_name
xmlrpc_set_type(string value, string type)\nSets xmlrpc type, base64 or datetime, for a PHP string value
xsl_xsltprocessor_get_parameter(string namespace, string name);
xsl_xsltprocessor_import_stylesheet(node index);
xsl_xsltprocessor_remove_parameter(string namespace, string name);
xsl_xsltprocessor_set_parameter(string namespace, string name, string value);
xsl_xsltprocessor_transform_to_doc(node doc [,boolean clone]);
xsl_xsltprocessor_transform_to_uri(node doc, string uri [,boolean clone]);
xsl_xsltprocessor_transform_to_xml(node doc [,boolean clone]);
yaz_addinfo(resource id)\nReturn additional info for last error (empty string if none)
yaz_ccl_conf(resource id, array package)\nConfigure CCL package
yaz_ccl_parse(resource id, string query, array res)\nParse a CCL query
yaz_close(resource id)\nDestory and close target
yaz_connect(string zurl [, array options])\nCreate target with given zurl. Returns positive id if successful.
yaz_database (resource id, string databases)\nSpecify the databases within a session
yaz_element(resource id, string elementsetname)\nSet Element-Set-Name for retrieval
yaz_errno(resource id)\nReturn last error number (>0 for bib-1 diagnostic, <0 for other error, 0 for no error
yaz_error(resource id)\nReturn last error message
yaz_es(resource id, string type, array package)\nSends Extended Services Request
yaz_es_result(resource id)\nInspects Extended Services Result
yaz_get_option(resource id, string name)\nSet Option(s) for connection
yaz_hits(resource id)\nReturn number of hits (result count) for last search
yaz_itemorder(resource id, array package)\nSends Item Order request
yaz_present(resource id)\nRetrieve records
yaz_range(resource id, int start, int number)\nSet result set start point and number of records to request
yaz_record(resource id, int pos, string type)\nReturn record information at given result set position
yaz_scan(resource id, type, query [, flags])\nSends Scan Request
yaz_scan_result(resource id [, array options])\nInspects Scan Result
yaz_schema(resource id, string schema)\nSet Schema for retrieval
yaz_search(resource id, string type, string query)\nSpecify query of type for search - returns true if successful
yaz_set_option(resource id, mixed options)\nSet Option(s) for connection
yaz_sort(resource id, string sortspec)\nSet result set sorting criteria
yaz_syntax(resource id, string syntax)\nSet record syntax for retrieval
yaz_wait([array options])\nProcess events.
yp_all(string domain, string map, string callback)\nTraverse the map and call a function on each entry
yp_cat(string domain, string map)\nReturn an array containing the entire map
yp_err_string(int errorcode)\nReturns the corresponding error string for the given error code
yp_errno()\nReturns the error code from the last call or 0 if no error occured
yp_first(string domain, string map)\nReturns the first key as array with $var[$key] and the the line as the value
yp_get_default_domain(void)\nReturns the domain or false
yp_master(string domain, string map)\nReturns the machine name of the master
yp_match(string domain, string map, string key)\nReturns the matched line or false
yp_next(string domain, string map, string key)\nReturns an array with $var[$key] and the the line as the value
yp_order(string domain, string map)            \nReturns the order number or false
zend_logo_guid(void)\nReturn the special ID used to request the Zend logo in phpinfo screens
zend_version(void)\nGet the version of the Zend Engine
zlib_get_coding_type(void)\nReturns the coding type used for output compression
